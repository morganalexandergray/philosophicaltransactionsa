Sentence 1: Case Name: 'THE STATE v. BLAIR'
Label: No Factor

Sentence 2: Citation: '239 Ga. App. 340', Court Name: 'Court of Appeals of Georgia'
Label: No Factor

Sentence 3: Decision Date YYYY-MM-DD: '1999-07-28'
Label: No Factor

Sentence 4: ID No. : 95671, 'Phipps, Judge.
Label: No Factor

Sentence 5: As a result of evidence seized during a traffic stop, Emanual Blair and his co-indictees were charged with possession of marijuana with intent to distribute and other offenses.
Label: No Factor

Sentence 6: The State appeals the trial court’s grant of Blair’s motion to suppress the evidence.
Label: No Factor

Sentence 7: On October 14, 1997, Georgia State Patrol Trooper Phillips was operating a stationary radar device along Interstate 85 in Banks County when he stopped an automobile containing four occupants and being driven with a dealer’s drive-out tag.
Label: No Factor

Sentence 8: Phillips questioned the car’s driver and front-seat passenger, who was identified as the owner.
Label: No Factor

Sentence 9: Phillips testified that his suspicions were aroused because neither individual produced any proof of ownership of the car, they provided conflicting explanations concerning the purpose of their journey, all occupants of the car appeared very nervous, and Blair was seated in the back of the car clutching a black bag.
Label: Nervous Behavior or Appearance

Sentence 10: As a result, Phillips felt as though “something was going on,” and he proceeded to ask the driver if there were any weapons, drugs, or large quantities of cash in the car.
Label: Suspicious or Inconsistent Answers

Sentence 11: When the driver responded in the negative, Phillips unsuccessfully sought permission to search the car from the supposed owner.
Label: Refused Consent

Sentence 12: Phillips then decided that he needed assistance and radioed Georgia State Patrol Corporal Brown, who was positioned approximately 200 yards away.
Label: No Factor

Sentence 13: When Phillips informed Brown of his inability to obtain consent to search the car, Brown summoned a canine unit.
Label: No Factor

Sentence 14: As Brown was approaching the scene in his patrol car, Blair fled with the bag in hand.
Label: No Factor

Sentence 15: After he was apprehended, approximately five pounds of marijuana along with ziplock baggies and a digital scale were found in the bag.
Label: Vehicle Contents Suggest Drugs

Sentence 16: In granting the motion to suppress, the trial court concluded that the trooper lawfully stopped the car because it did not have a state-issued tag but then unlawfully detained the car’s occupants in order to search the car for drugs.
Label: Suspicion Not Found

Sentence 17: As authority in support of its decision, the court cited Smith v. State, 216 Ga. App. 453, 454 (2) (454 SE2d 635) (1995).
Label: No Factor

Sentence 18: In arguing that the detention was lawful, the State relies on Pitts v. State, 221 Ga. App. 309, 311 (2) (471 SE2d 270) (1996).
Label: No Factor

Sentence 19: “Investigative stops of vehicles are analogous to Terry-stops, (Terry v. Ohio, 392 U. S. 1 (88 SC 1868, 20 LE2d 889) (1968)).
Label: No Factor

Sentence 20: . . .”
Label: No Factor

Sentence 21: State v. Wright, 221 Ga. App. 202, 204 (3) (470 SE2d 916) (1996).
Label: No Factor

Sentence 22: “The validity of an officer’s investigative or protective conduct upon making a ‘Terry stop’ is determined in each case by balancing the extent of the intrusion against the immediacy and importance of the interest in crime prevention or law enforcement which is sought to be advanced.”
Label: No Factor

Sentence 23: [Cit.]
Label: No Factor

Sentence 24: State v. Stansbury, 234 Ga. App. 281, 282-283 (505 SE2d 564) (1998).
Label: No Factor

Sentence 25: An investigatory traffic stop
Label: No Factor

Sentence 26: “has been described by this court as a brief stop, limited in time to that minimally necessary to investigate the allegation invoking suspicion, and limited in scope to identification and limited questioning reasonably related to the circumstances that justified the initiation of the momentary stop.
Label: No Factor

Sentence 27: (Cit.)”
Label: No Factor

Sentence 28: [Cit.]
Label: No Factor

Sentence 29: Smith v. State, supra at 454-455.
Label: No Factor

Sentence 30: An officer who questions and detains a suspect for other reasons exceeds the scope of permissible investigation unless he has “reasonable suspicion” of other criminal activity.
Label: Suspicion Found

Sentence 31: Simmons v. State, 223 Ga. App. 781, 782 (2) (479 SE2d 123) (1996).
Label: No Factor

Sentence 32: In Smith, a narcotics officer initiated a traffic stop to investigate a possible DUI violation after observing Smith’s truck weaving between lanes.
Label: No Factor

Sentence 33: Smith, however, had no odor of alcohol on his breath and reasonably explained his erratic driving.
Label: No Factor

Sentence 34: Without taking any steps to ascertain whether Smith was under the influence, the officer asked if Smith had any narcotics in the truck and sought consent to search it.
Label: Suspicious or Inconsistent Answers

Sentence 35: After Smith refused to give his consent, the officer summoned a K-9 unit to the scene.
Label: No Factor

Sentence 36: This court held the officer’s detention of Smith in order to search his truck was based on nothing more than a “hunch” that the truck contained narcotics and was not authorized by Terry.
Label: Suspicion Not Found

Sentence 37: Id. at 455.
Label: No Factor

Sentence 38: Here, the officer stopped the car in which Blair was traveling in order to investigate the car’s registration and licensing.
Label: Vehicle License Plate or Registration

Sentence 39: See OCGA § 40-2-20 (making a person’s failure to register new or used motor vehicles within 30 days of purchase a misdemeanor punishable by fine).
Label: No Factor

Sentence 40: The evidence supports the trial court’s finding that the officer abandoned that investigation and detained the occupants of the car in order to conduct a search for drugs.
Label: Suspicion Not Found

Sentence 1: See generally Tate v. State, 264 Ga. 53, 54 (1) (440 SE2d 646) (1994).
Label: No Factor

Sentence 2: The court was authorized to conclude that the detention was impermissible because the facts known to the officer did not provide reasonable suspicion of illegal drug activity.
Label: Suspicion Not Found

Sentence 3: Decided July 28, 1999
Label: No Factor

Sentence 4: Timothy G. Madison, District Attorney, Robin R. Riggs, Assistant District Attorney, for appellant.
Label: No Factor

Sentence 5: James W. Smith, for appellee.
Label: No Factor

Sentence 6: Pitts is factually similar to this case but ultimately distinguishable.
Label: No Factor

Sentence 7: The defendants in Pitts were traveling along Interstate 95 in Camden County in a rental van when they were stopped by a deputy sheriff because of the driver’s failure to dim the vehicle’s headlights in response to oncoming traffic.
Label: No Factor

Sentence 8: In Pitts, much like this case, the investigating officer detained the occupants of the vehicle in order to conduct a drug search because they appeared unusually tense and gave conflicting versions of their travel itinerary.
Label: Nervous Behavior or Appearance, Suspicious or Inconsistent Answers

Sentence 9: But this court justified the detention in Pitts by holding that it was “ ‘not unconstitutionally intrusive when balanced against the widespread clear danger of drug peddling from Florida via the roads of this state.
Label: No Factor

Sentence 10: [Cit.]’ [Cit.]”
Label: No Factor

Sentence 11: Pitts, supra at 311.
Label: No Factor

Sentence 12: No such justification has been asserted here.
Label: No Factor

Sentence 13: Pitts is not controlling.
Label: No Factor

Sentence 14: Judgment affirmed.
Label: No Factor

Sentence 15: Andrews, P. J., and Ruffin, J., concur.',
Label: No Factor

Sentence 16: Dissenting/Concuring: 'Not Available', Dissenting/Concuring 2: 'Not Available', Dissenting/Concuring 3: 'Not Available'
Label: No Factor

