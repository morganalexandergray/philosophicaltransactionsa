Sentence 1: Case Name: 'Justin COWART-DARLING, Appellant, v. STATE of Florida, Appellee.'
Label: No Factor

Sentence 2: Citation: '256 So. 3d 250', Court Name: 'District Court of Appeal of Florida, First District'
Label: No Factor

Sentence 3: Decision Date YYYY-MM-DD: '2018-10-18'
Label: No Factor

Sentence 4: ID No. : 12681224, 'Rowe, J.
Label: No Factor

Sentence 5: Justin Cowart-Darling challenges his convictions and sentences for possession of cocaine and possession of drug paraphernalia.
Label: No Factor

Sentence 6: He entered a plea but reserved the right to appeal the trial court's denial of his dispositive motion to suppress items seized from his vehicle following a traffic stop and a sniff test of his vehicle by a drug detection dog.
Label: No Factor

Sentence 7: For the reasons that follow, we find that the trial court correctly denied the motion to suppress, and affirm.
Label: No Factor

Sentence 8: Deputy Kevin Kinik conducted a traffic stop of Cowart-Darling's vehicle at 10:28 p.m. on February 17, 2017.
Label: No Factor

Sentence 9: When the deputy asked for his license and registration, Cowart-Darling gave the deputy his registration and informed the deputy that he did not have his driver's license on him.
Label: Motorist license or Identification

Sentence 10: Deputy Kinik conveyed Cowart-Darling's legal name and date of birth to dispatch to verify Cowart-Darling's identity and to check for outstanding warrants.
Label: No Factor

Sentence 11: Deputy Kinik observed that Cowart-Darling's hands were shaking and that he kept moving his right hand towards his right hip area.
Label: Nervous Behavior or Appearance

Sentence 12: This conduct prompted the deputy to call for assistance while he wrote Cowart-Darling a traffic citation.
Label: No Factor

Sentence 13: While writing the ticket, Deputy Kinik explained to Cowart-Darling that he was a K-9 officer and asked if there was anything in the car that could cause a drug detection dog to alert.
Label: No Factor

Sentence 14: Cowart-Darling shook his head up and down in an affirmative gesture.
Label: No Factor

Sentence 15: When the deputy asked about the nature of the illegal substance, Cowart-Darling denied having anything illegal in the vehicle.
Label: Suspicious or Inconsistent Answers

Sentence 16: Deputy Jeremiah Roe responded to Deputy Kinik's call for assistance at 10:40 p.m.
Label: No Factor

Sentence 17: At this point, Deputy Kinik still had not heard back from dispatch about whether Cowart-Darling had any outstanding warrants.
Label: No Factor

Sentence 18: Deputy Kinik retrieved his canine, "Zombie," from the car and proceeded to conduct a sniff search of Cowart-Darling's vehicle.
Label: No Factor

Sentence 19: Zombie alerted to the driver's side door, where a syringe and a spoon with a powdery residue were located.
Label: Vehicle Contents Suggest Drugs

Sentence 20: The powdery substance was field tested and tested positive for cocaine.
Label: Vehicle Contents Suggest Drugs

Sentence 21: Following his arrest, Cowart-Darling moved to suppress the evidence seized during the sniff search, arguing that Deputy Kinik did not have reasonable suspicion to delay the traffic stop or to take his canine around the vehicle for a sniff search.
Label: Suspicion Not Found

Sentence 22: The trial court denied the motion to suppress, finding that Cowart-Darling's nervousness combined with the fact that he did not have his driver's license was sufficient to give Deputy Kinik reasonable suspicion to conduct a search of the vehicle.
Label: Nervous Behavior or Appearance, Motorist license or Identification

Sentence 23: The trial court further found that Cowart-Darling's conflicting answers about whether there were illegal substances within the vehicle gave Deputy Kinik reasonable suspicion to conduct a sniff search.
Label: Suspicious or Inconsistent Answers

Sentence 24: Finally, the trial court attributed any delay in the stop to Cowart-Darling's failure to have his driver's license.
Label: Motorist license or Identification

Sentence 25: Cowart-Darling pleaded no contest to possession of cocaine and possession of drug paraphernalia and was placed on drug offender probation for eighteen months.
Label: No Factor

Sentence 26: This timely appeal follows.
Label: No Factor

Sentence 27: Analysis
Label: No Factor

Sentence 28: A trial court's factual findings on a motion to suppress are afforded a presumption of correctness.
Label: No Factor

Sentence 29: Rigterink v. State, 66 So.3d 866, 884 (Fla. 2011).
Label: No Factor

Sentence 30: The trial court's application of the law to the facts is reviewed de novo.
Label: No Factor

Sentence 31: Cowart-Darling argues that his motion to suppress should have been granted because the traffic stop was prolonged merely to effectuate a dog sniff of the vehicle.
Label: Suspicion Not Found

Sentence 32: The United States Supreme Court has held that, absent reasonable suspicion of criminal activity, a traffic stop may last no longer than necessary for an officer to address the traffic violation that warranted the stop and attend to related safety concerns.
Label: No Factor

Sentence 33: Rodriguez v. United States, --- U.S. ----, 135 S.Ct. 1609, 1614, 191 L.Ed.2d 492 (2015).
Label: No Factor

Sentence 34: A stop may last long enough for an officer to check drivers' licenses, search for outstanding warrants, and inspect registrations and proofs of insurance.
Label: No Factor

Sentence 35: Id. at 1615.
Label: No Factor

Sentence 36: But a traffic stop may not be prolonged to conduct a dog sniff unless the officer has reasonable suspicion of criminal activity.
Label: Suspicion Not Found

Sentence 37: Id. at 1616.
Label: No Factor

Sentence 38: Here, the traffic stop was still in progress when the deputy conducted the dog sniff of Cowart-Darling's vehicle.
Label: No Factor

Sentence 39: Because Cowart-Darling did not have his driver's license, Deputy Kinik was required to call dispatch with Cowart-Darling's identifying information to determine whether he was in fact the person he claimed to be and whether he had any outstanding warrants.
Label: Motorist license or Identification

Sentence 40: The trial court found from the testimony presented at the suppression hearing that Deputy Kinik did not hear back from dispatch before he deployed Zombie to conduct a sniff search of Cowart-Darling's vehicle.
Label: No Factor

Sentence 1: Thus, the trial court properly attributed the prolonging of the traffic stop to Cowart-Darling's failure to have his driver's license, not the deputy's decision to conduct a search of the car.
Label: No Factor

Sentence 2: Id. (holding that verifying a driver's identity is an ordinary inquiry in a traffic stop).
Label: No Factor

Sentence 3: Further, Deputy Kinik had a reasonable, well-founded suspicion of criminal activity to justify detaining Cowart-Darling.
Label: Suspicion Found

Sentence 4: A reasonable suspicion is a particularized and objective basis for suspecting the person stopped of criminal activity.
Label: No Factor

Sentence 5: Brown v. State , 224 So.3d 806, 809 (Fla. 2d DCA 2017).
Label: No Factor

Sentence 6: It cannot be based on mere nervousness.
Label: No Factor

Sentence 7: Cf. Maldonado v. State , 992 So.2d 839 (Fla. 2d DCA 2008) (holding that the facts the defendant lied about the origin of his trip, exhibited signs of nervousness, and traveled on a known drug corridor in the early hours of the morning were insufficient to give rise to a reasonable suspicion of criminal activity).
Label: Suspicion Not Found

Sentence 8: Further, an investigative detention is valid as long as a reasonable suspicion exists, but if the investigation dispels the concern that gave rise to the investigation, the suspect may no longer be detained.
Label: No Factor

Sentence 9: Ikner v. State , 756 So.2d 1116, 1119 (Fla. 1st DCA 2000).
Label: No Factor

Sentence 10: This was not a case of mere nervousness.
Label: No Factor

Sentence 11: While Cowart-Darling exhibited signs of nervousness (his hands were shaking and he kept moving his hand to his right hip area), this was not the sole reason Deputy Kinik decided to search the vehicle.
Label: Nervous Behavior or Appearance

Sentence 12: Deputy Kinik developed reasonable suspicion when Cowart-Darling moved his head up and down indicating an affirmative response to the deputy's inquiry about whether there were illegal substances in the vehicle.
Label: Suspicious or Inconsistent Answers

Sentence 13: Cowart-Darling's subsequent verbal denial that there were illegal substances in the car was insufficient to dispel the deputy's concern.
Label: Suspicious or Inconsistent Answers

Sentence 14: If anything, Cowart-Darling's conflicting answers heightened the deputy's suspicion that criminal activity was afoot.
Label: Suspicious or Inconsistent Answers

Sentence 15: Accordingly, because Deputy Kinik had a reasonable suspicion of criminal activity sufficient to detain Cowart-Darling, and because the traffic stop was not unlawfully prolonged, we find that the trial court properly denied the motion to suppress, and we AFFIRM the judgment and sentence.
Label: Suspicion Found

Sentence 16: Kelsey and M.K. Thomas, JJ., concur.',
Label: No Factor

Sentence 17: Dissenting/Concuring: 'Not Available', Dissenting/Concuring 2: 'Not Available', Dissenting/Concuring 3: 'Not Available'
Label: No Factor

