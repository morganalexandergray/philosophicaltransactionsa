Sentence 1: Case Name: 'Jose AYALA v. STATE of Arkansas'
Label: No Factor

Sentence 2: Citation: '90 Ark. App. 13', Court Name: 'Arkansas Court of Appeals'
Label: No Factor

Sentence 3: Decision Date YYYY-MM-DD: '2005-02-16'
Label: No Factor

Sentence 4: ID No. : 6136262, 'ohn B. Robbins, Judge.
Label: No Factor

Sentence 5: Appellant Jose Ayala was convicted by a jury of possession of marijuana with intent to deliver.
Label: Legal Indications of Drug Use

Sentence 6: He was sentenced to twenty-four years in prison and fined $75,000.00.
Label: No Factor

Sentence 7: Mr. Ayala’s sole point on appeal is that the trial court erred in failing to grant his motion to suppress the marijuana seized by the police.
Label: No Factor

Sentence 8: He contends that the search of his vehicle was unreasonable, and thus violated the Fourth Amendment of the United States Constitution as well as Article 2, § 15 of the Arkansas Constitution.
Label: No Factor

Sentence 9: We find no error and affirm.
Label: No Factor

Sentence 10: Officer Jeff Smith testified for the State at the suppression hearing.
Label: No Factor

Sentence 11: He stated that he is a canine officer and was patrolling Interstate 40 in Crawford County at about 9:00 a.m. on August 11, 2002.
Label: No Factor

Sentence 12: Officer Smith was parked on the side of the highway and observed a Chevy S10 Blazer, which was being driven by Mr. Ayala, traveling sixty-six miles per hour in a sixty-mile-per-hour construction zone.
Label: No Factor

Sentence 13: Officer Smith decided to follow the vehicle, and while he was following he received information that the vehicle had been rented in California.
Label: Unusual Vehicle Ownership

Sentence 14: About five miles from where he observed the speeding violation, Officer Smith conducted a traffic stop.
Label: No Factor

Sentence 15: He approached the vehicle and spoke with Mr. Ayala from the passenger side.
Label: No Factor

Sentence 16: According to Officer Smith, he could smell a strong odor of what appeared to be fabric softener sheets coming from the vehicle, and he testified that this raised his suspicion that narcotics were being masked.
Label: Masking Agent

Sentence 17: Officer Smith testified that Mr. Ayala was nervous and shaking, and that he almost dropped his paperwork when he was asked to provide it.
Label: Nervous Behavior or Appearance

Sentence 18: Mr. Ayala told Officer Smith that he was headed to Tennessee and then Florida.
Label: Unusual Travel Plans

Sentence 19: Officer Smith noticed a very large suitcase in the back of the Blazer, and he returned to his patrol car with Mr. Ayala’s paperwork.
Label: Suspicious Storage

Sentence 20: While in his patrol unit, Officer Smith found that Mr. Ayala’s driver’s license was valid and that “everything was in order.”
Label: Motorist license or Identification

Sentence 21: The rental agreement showed that the vehicle was rented on August 9, 2002, and was due back in Los Angeles on August 13, 2002, at 1:30 p.m. Officer Smith thought it suspicious that Mr. Ayala was driving to Florida, yet the rental car was due to be returned in California in just two days, so he called for backup.
Label: Unusual Travel Plans

Sentence 22: After the backup officer arrived, Officer Smith again approached the Blazer and asked Mr. Ayala to exit to the rear of the vehicle.
Label: No Factor

Sentence 23: Mr. Ayala complied, and while still holding his paperwork, Officer Smith asked if there were any drugs in the vehicle.
Label: No Factor

Sentence 24: Mr. Ayala then invited Officer Smith to conduct a search, nodding his head in the direction of the truck and stating, “if you would like to check.”
Label: No Factor

Sentence 25: At that time, Officer Smith did not immediately search the vehicle but ran his canine around it.
Label: No Factor

Sentence 26: The dog alerted to drugs by biting and scratching at the door seam on the driver side.
Label: No Factor

Sentence 27: Officer Smith then opened the car door and opened the suitcase, and found 273 pounds of marijuana.
Label: Vehicle Contents Suggest Drugs

Sentence 28: Mr. Ayala testified on his own behalf, and denied being nervous.
Label: No Factor

Sentence 29: Mr. Ayala testified:
Label: No Factor

Sentence 30: I remember he asked me if there was any drugs after he ran the dog through.
Label: Suspicious Storage

Sentence 31: Like he said, for me to tell him; otherwise, he was going to search for himself.
Label: Suspicious or Inconsistent Answers

Sentence 32: What I’m saying is he ran the dog around the car and then he asked me if there were any drags or narcotics in the car.
Label: Suspicious Storage

Sentence 33: Then he asked me if he could search the car.
Label: Suspicious Storage

Sentence 34: When he asked me that, I recall saying, you gotta do what you gotta do.
Label: Suspicious or Inconsistent Answers

Sentence 35: A video/audio tape taken from the patrol car showed that, in fact, Mr. Ayala invited Officer Smith to search the vehicle before the canine was used.
Label: No Factor

Sentence 36: For reversal, Mr. Ayala argues that the marijuana should have been suppressed because the search was illegal.
Label: No Factor

Sentence 37: Mr. Ayala does not challenge the legality of the stop, but contends that after Officer Smith finished checking his paperwork and the purpose of the stop was complete, he lacked authority to continue the detention.
Label: No Factor

Sentence 38: Mr. Ayala cites United States v. Mesa, 62 F.3d 159 (6th Cir. 1995), where the appeals court held that once the purpose of a traffic stop is completed, the police officer cannot further detain the vehicle or its occupants unless something that occurred during the traffic stop generated reasonable suspicion to justify further detention.
Label: No Factor

Sentence 39: Mr. Ayala also cites United States v. Lee, 73 F.3d 1034 (10th Cir. 1996), where the appeals court held that an encounter initiated by a traffic stop may not be deemed consensual unless the driver’s documents have been returned to him.
Label: No Factor

Sentence 40: Mr. Ayala contends that, absent any reasonable suspicion of other criminal activity, Officer Smith was obligated to return the paperwork and Mr. Ayala should have been free to leave.
Label: No Factor

Sentence 1: Because the consent and canine sniff occurred at a time after further detention was unlawful, Mr. Ayala argues that the marijuana was illegally detected and seized.
Label: Suspicion Not Found

Sentence 2: Mr. Ayala further submits that admission of the marijuana could not be based on reasonable suspicion of criminal activity by Officer Smith, because there was none.
Label: Suspicion Not Found

Sentence 3: He asserts that his nervousness and the rental agreement did not give rise to any reasonable cause, and further contends that we cannot consider Officer Smith’s testimony about the odor of fabric softener.
Label: Nervous Behavior or Appearance

Sentence 4: Mr. Ayala notes that the audio tape reveals statements by Officer Smith about Mr. Ayala’s nervousness, and the officer’s suspicions regarding the rental agreement, but contains no statements making reference to fabric softener.
Label: Nervous Behavior or Appearance

Sentence 5: Thus, Mr. Ayala maintains that Officer Smith did not find the fabric softener until he searched the suitcase.
Label: No Factor

Sentence 6: We agree with Mr. Ayala’s argument that, absent reasonable suspicion, Officer Smith lacked authority to continue his detention after he checked Mr. Ayala’s paperwork and the purpose of the stop had been completed.
Label: Suspicion Not Found

Sentence 7: In this regard, we are guided by our supreme court’s recent decision in Sims v. State, 356 Ark. 507, 157 S.W.3d 530 (2004).
Label: No Factor

Sentence 8: In that case, the appellant was stopped for a moving violation, and after the officer returned appellant’s identification information, appellant began walking back to his vehicle and the officer then asked for consent to search.
Label: No Factor

Sentence 9: The appellant refused, but the officer held appellant long enough to conduct a canine sniff.
Label: Refused Consent

Sentence 10: The dog alerted, and drugs were found.
Label: Vehicle Contents Suggest Drugs

Sentence 11: The supreme court reversed the denial of appellant’s motion to suppress, citing United States v. Mesa, supra, and holding that because the purpose of the traffic stop was complete, the officer’s continued detention was unlawful absent reasonable suspicion, and no reasonable suspicion existed.
Label: Suspicion Not Found

Sentence 12: The State argues that the instant case is distinguishable from Sims v. State, supra, because Officer Smith did not return the paperwork and tell Mr. Ayala he was free to leave.
Label: No Factor

Sentence 13: However, we cannot agree with this distinction because it is evident that the purpose of the traffic stop was completed, and thus absent any reasonable suspicion it was the officer’s duty to return the paperwork, issue a citation or warning if necessary, and discontinue the detention.
Label: Suspicion Not Found

Sentence 14: We distinguish this case from Illinois v. Caballes,_ U.S._(Jan. 24, 2005), in which the use of a narcotics-detection dog during a traffic stop was upheld.
Label: No Factor

Sentence 15: In Caballes the canine was walked around appellant’s vehicle by one officer while the other officer was in the process of writing the appellant a warning ticket.
Label: No Factor

Sentence 16: Nor do we agree that, in the absence of reasonable suspicion, Mr. Ayala’s consent validated the search.
Label: No Factor

Sentence 17: This is because, after the purpose of the traffic stop was complete, the ensuing encounter was not consensual.
Label: No Factor

Sentence 18: See United States v. Sandoval, 29 F.3d 537 (10th Cir. 1994).
Label: No Factor

Sentence 19: Notwithstanding the fact that the continued detention of Mr. Ayala was not consensual, we hold that it was nonetheless authorized because Officer Smith had reasonable suspicion that Mr. Ayala was committing a felony.
Label: Suspicion Found

Sentence 20: Arkansas Rule of Criminal Procedure 3.1 provides:
Label: No Factor

Sentence 21: A law enforcement officer lawfully present in any place may, in the performance of his duties, stop and detain any person who he reasonably suspects is committing, has committed, or is about to commit (1) a felony, or (2) a misdemeanor involving danger of forcible injury to persons or of appropriation of or damage to property, if such action is reasonably necessary either to obtain or verify the identification of the person or to determine the lawfulness of his conduct.
Label: No Factor

Sentence 22: An officer acting under this rule may require the person to remain in or near such place in he officer’s presence for a period of not more than fifteen (15) minutes or for such time as is reasonable under the circumstances.
Label: No Factor

Sentence 23: At the end of such period the person detained shall be released without further restraint, or arrested and charged with an offense.
Label: No Factor

Sentence 24: Rule 2.1 defines “reasonable suspicion” as “a suspicion based on facts or circumstances which of themselves do not give rise to the probable cause requisite to justify a lawful arrest, but which give rise to more than a bare suspicion; that is, a suspicion that is reasonable as opposed to an imaginary or purely conjectural suspicion.”
Label: No Factor

Sentence 25: Officer Smith testified that Mr. Ayala was very nervous to the point where he was shaking and almost dropped his paperwork.
Label: Nervous Behavior or Appearance

Sentence 26: While nervousness alone cannot constitute reasonable suspicion of criminal activity and grounds for detention, see Laime v. State, 347 Ark. 142, 60 S.W.3d 464 (2001), there were other factors that when combined with Mr. Ayala’s nervousness gave rise to reasonable suspicion of criminal activity.
Label: Nervous Behavior or Appearance

Sentence 27: Mr. Ayala represented that he was traveling to Florida to visit family, and yet his rental car was due back in Los Angeles in just two days.
Label: Unusual Travel Plans

Sentence 28: Unusual travel plans may provide an indicia of reasonable suspicion.
Label: Unusual Travel Plans

Sentence 29: See United States v. Sokolow, 490 U.S. 1 (1989).
Label: No Factor

Sentence 30: Moreover, Officer Smith testified that he smelled a strong odor of fabric softener.
Label: Masking Agent

Sentence 31: The presence of a masking odor has been held to constitute a factor in determining reasonable cause.
Label: Masking Agent

Sentence 32: See United States v. Foley, 206 F.3d 802 (8th Cir.2000).
Label: No Factor

Sentence 33: While Mr. Ayala submits that the trial court could not consider the odor of fabric softener as a factor because it was not articulated on the audio tape, this is incorrect because Officer Smith testified that he immediately detected the odor upon approaching the vehicle, and it was the trial court’s duty to assess witness credibility.
Label: Masking Agent

Sentence 34: See Scott v. State, 347 Ark. 767, 67 S.W.3d 567 (2002).
Label: No Factor

Sentence 35: Finally, the presence of a very large suitcase was suspicious in light of a car-rental agreement lasting only four days.
Label: Unusual Travel Plans

Sentence 36: We acknowledge that, in a somewhat similar case, we recently reversed a trial court’s denial of a motion to suppress because the officer lacked reasonable suspicion to continue the detention after a traffic stop was complete.
Label: Suspicion Not Found

Sentence 37: See Lilley v. State, 89 Ark. App. 43, 199 S.W.3d 692 (2004) (currently under review by the Arkansas Supreme Court).
Label: No Factor

Sentence 38: However the case at bar is distinguishable for two reasons.
Label: No Factor

Sentence 39: First, the officer in the instant case detected a strong odor of fabric sheets, as opposed to air freshener, and testified that about seventy-five percent of the controlled substances he has seized on 1-40 were masked with fabric sheets.
Label: Masking Agent

Sentence 40: Next, the travel plans and rental agreement were much more suspicious in this case than in Lilley v. State, supra.
Label: Unusual Travel Plans

Sentence 1: In reviewing the denial of a motion to suppress evidence, we conduct a de novo review based on the totality of the circumstances, reviewing findings of historical facts for clear error and determining whether those facts give rise to reasonable suspicion or probable cause, giving due weight to inferences drawn by the trial court.
Label: No Factor

Sentence 2: Simmons v. State, 83 Ark. App. 87, 118 S.W.3d 136 (2003).
Label: No Factor

Sentence 3: Based on our review of the totality of the circumstances in this case, we hold that the trial court committed no error in finding that Officer Smith had reasonable suspicion to continue his detention of Mr. Ayala, and that the marijuana was legally seized because it was the result of consent and a canine sniff that occurred during the lawful detention.
Label: Suspicion Found

Sentence 4: Therefore, we affirm Mr. Ayala’s conviction.
Label: No Factor

Sentence 5: Affirmed.
Label: No Factor

Sentence 6: Gladwin, J., agrees.
Label: No Factor

Sentence 7: Neal, J., concurs.', 
Label: No Factor

Sentence 8: Dissenting/Concuring: 'Not Available', Dissenting/Concuring 2: 'Not Available', Dissenting/Concuring 3: 'Not Available'
Label: No Factor

