Sentence 1: Case Name: 'Candice NULPH, Appellant, v. STATE of Florida, Appellee'
Label: No Factor

Sentence 2: Citation: '838 So. 2d 1244', Court Name: 'Florida District Court of Appeal'
Label: No Factor

Sentence 3: Decision Date YYYY-MM-DD: '2003-03-12'
Label: No Factor

Sentence 4: ID No. : 9373953, 'FULMER, Judge.
Label: No Factor

Sentence 5: Candice Nulph pleaded no contest to trafficking in amphetamine, possession of cannabis, and possession of drug paraphernalia, reserving her right to appeal the denial of a motion to suppress evidence.
Label: No Factor

Sentence 6: We reverse the convictions and direct the trial court to grant the motion to suppress because we conclude that Nulph was subjected to an unreasonable detention when the officer prolonged the traffic stop beyond the time necessary to issue a citation for a careless driving infraction.
Label: Suspicion Not Found

Sentence 7: Nulph was a passenger in a car driven by Peter Dion. Detectives Horsman and Gilbert of the Polk County Sheriffs Office had information from a confidential source indicating that Dion was staying at a particular residence and was in possession of a large quantity of methamphetamine.
Label: No Factor

Sentence 8: A day after receiving that information, the officers were conducting surveillance in the area of Dion’s residence.
Label: No Factor

Sentence 9: The officers recognized Dion’s car as it left the neighborhood, and they followed it.
Label: No Factor

Sentence 10: The officers had no indication that Dion had drugs in the car, and it was admitted that when the officers ultimately stopped Dion for careless driving, the stop was not based on any cause to believe that the car contained narcotics.
Label: No Factor

Sentence 11: Detective Horsman did not know that Dion was the driver until after he conducted the stop and obtained Dion’s identification.
Label: No Factor

Sentence 12: The detective then immediately attempted to locate a drug-certified canine to walk around the vehicle.
Label: No Factor

Sentence 13: After determining that all of the sheriffs canines were unavailable, the detective requested assistance from Officer Taylor of the Winter Haven Police Department.
Label: No Factor

Sentence 14: It took Officer Taylor seventeen minutes to respond to the scene with a canine.
Label: No Factor

Sentence 15: In the meantime, Detective Horsman ran a driver’s license and registration check on Dion and ran a warrants check on Dion and Nulph.
Label: No Factor

Sentence 16: It took about fifteen minutes to run the checks and the results were negative.
Label: No Factor

Sentence 17: By the time Officer Taylor arrived, Detective Horsman had finished running the checks and was standing at the back of his vehicle waiting for the officer to arrive.
Label: No Factor

Sentence 18: The stop had lasted approximately twenty minutes at that point.
Label: No Factor

Sentence 19: Detective Horsman never gave Dion a citation for careless driving.
Label: No Factor

Sentence 20: Nulph argues that the traffic stop lasted longer than was reasonably necessary to deal with the situation.
Label: Suspicion Not Found

Sentence 21: The State argues that the vehicle was not detained longer than necessary to issue a citation, and even if the detention was unreasonably long for the issuance of a citation, the delay was justified because the officer had a reasonable suspicion that the occupants were in possession of narcotics.
Label: Suspicion Found

Sentence 22: “If a driver is stopped for the commission of a traffic infraction, he or she may be subjected to a canine search of the exterior of the vehicle so long as it is done within the time required to issue a citation.”
Label: No Factor

Sentence 23: Eldridge v. State, 817 So.2d 884, 887 (Fla. 5th DCA 2002).
Label: No Factor

Sentence 24: “The law is clear that a person may not be detained for a traffic violation for any longer than necessary to issue a citation.”
Label: No Factor

Sentence 25: Summerall v. State, 777 So.2d 1060, 1061 (Fla. 2d DCA 2001) (citing Cresswell v. State, 564 So.2d 480 (Fla.1990)).
Label: No Factor

Sentence 26: “In order to justify a detention beyond the time needed to issue a citation, the officer must have a reasonable suspicion based on articulable facts that criminal activity is occurring.”
Label: No Factor

Sentence 27: We agree with Nulph that the stop was unreasonably long under the circumstances.
Label: Suspicion Not Found

Sentence 28: The detective testified that the car was stopped for careless driving, but after the driver produced identification, the detective knew that he was Peter Dion, a suspected drug dealer.
Label: No Factor

Sentence 29: Therefore, the detective called for a canine and waited seventeen minutes for one to arrive.
Label: No Factor

Sentence 30: By the time the canine arrived, Detective Horseman testified, “I had finished running the warrants checks and everything, and basically I was just standing by and keeping myself organized.
Label: No Factor

Sentence 31: I was actually digging out some arrest affidavits from the trunk when he showed up.”
Label: No Factor

Sentence 32: It is clear from the detective’s testimony that the vehicle was being detained based on a suspicion of drug possession, rather than for the issuance of a citation for a traffic infraction.
Label: Suspicion Found

Sentence 33: After all checks were run on the vehicle and the occupants, the detective had not even begun to write a citation and instead was standing by waiting for the canine to arrive.
Label: No Factor

Sentence 34: The detective testified that he had made a conscious decision not to start writing a citation because he wanted to first wait for Officer Taylor.
Label: No Factor

Sentence 35: Although we cannot say that the detention was unreasonably long had the detective decided at the outset to issue a citation, that is not what occurred.
Label: Suspicion Not Found

Sentence 36: After twenty minutes into the detention, the detective still had not decided whether to issue a citation and was only continuing the detention to investigate his suspicions of drug activity.
Label: Suspicion Not Found

Sentence 37: This was improper because the detective did not articulate a reasonable suspicion that the vehicle occupants were committing a crime, and although the detective suspected Dion of being a drug dealer, the detective did not have a basis to suspect that either Dion or Nulph was in possession of drugs at the time of the traffic stop.
Label: Suspicion Not Found

Sentence 38: The detective indicated, in response to questioning by the State, that the stop was not based “on the Carroll Doctrine or any probable cause that [the vehicle] contained narcotics.”
Label: No Factor

Sentence 39: We therefore reject the State’s arguments that the length of the detention was reasonable and, alternatively, that the delay in releasing the vehicle was justified by a reasonable suspicion of drug possession.
Label: Suspicion Not Found

Sentence 40: Reversed and remanded.
Label: No Factor

Sentence 1:
Label: No Factor

Sentence 2:
Label: No Factor

Sentence 3:
Label: No Factor

