TASK
In this task, we are attempting to label sentences to assess whether they contain important information.  These facts are tied to a specific legal problem which we have described below: 

-START LEGAL PROBLEM EXPLANATION-
We are interested in highway drug-interdiction. This occurs when a motorist is stopped by police for violating a traffic law and is subsequently detained based on an officer’s reasonable suspicion that the motorist is trafficking or possessing drugs.
An example of drug interdiction: John Smith, a motorist, is driving down interstate 95 in Miami Dade County, Florida with a brake light out and an occluded license plate. Officer Brown, who has been following Mr. Smith, initiates a traffic stop due to the light and the license plate. After Mr. Smith pulls over, Officer Brown observes Mr. Smith is moving around and appears to be reaching under his seat. After approaching the vehicle, Officer Brown notices that Mr. Smith is more nervous that someone would usually be when stopped for a traffic offense. He notices that Mr. Smith is sweating, shaking, and avoiding eye contact. Mr. Smith hands Officer Brown his license and registration, and vehicle rental agreement, which shows that Mr. Smith rented the vehicle in Philadelphia, and the car is due back there in 1 day. Officer Brown notices two cellphones in the center console, 1 prepaid, and 1 iPhone; he sees numerous cans of Redbull, and McDonald’s bags strewn about the vehicle; he notices a number of air fresheners hanging from the rearview mirror; he sees that instead of placing his luggage in the trunk, Mr. Smith has kept a small amount of luggage in the rear of the vehicle. Officer Brown asks Mr. Smith where he is coming from and where he is going. Mr. Smith states that he is coming from Washington D.C. and is headed to Arkansas to see family. When Officer Smith asks why, if he was headed to Arkansas to see family, he was in Miami, Mr. Smith states that he is actually seeing his girlfriend, who he cannot name, in Miami, before heading west to Arkansas to see his family. Based on the foregoing, Officer Brown believes that Mr. Smith is actually trafficking drugs, and detains him for 20 minutes until a drug dog can complete an open air sniff of the vehicle. Upon completion of the sniff, the dog indicates that there are drugs in the trunk of the vehicle. After opening the trunk, Officer Brown seizes 5kg of cocaine from the vehicle. Mr. Smith is arrested, and subsequently charged.
The legal question presented from these facts is whether Officer Brown had reasonable suspicion based upon articulable facts (his observations) that criminal activity was afoot. If so, then he could detain Mr. Smith for the time necessary to complete a canine sniff of the vehicle. If not, Mr. Smith’s constitutional rights have been violated due to the detention. We will be annotating cases that present the same legal problem. Although the facts (factors) of each case will be different to some degree (small or great), this is the legal problem that must be examined. There are certain kinds of facts that we are interested in identifying. Below we refer to these facts as factors.
-END LEGAL PROBLEM EXPLANATION-

-START INSTRUCTIONS-
YOU will assess sentences to and determine whether they belong to any of the following categories based on the content of the sentence and the descriptions below: 

1. Furtive Movement - Use this label if the driver or passenger in the vehicle makes a suspicious movement, such as reaching beneath a seat, or in a purse or bag, or around a waistband, or in a pocket, which is commonly an attempt to conceal contraband or a weapon.  This also includes attempting to evade custody such as taking a long time to pull the vehicle over.  Simple driving mistakes do not count under this factor.
2. Nervous Behavior or Appearance - Use this label if the motorist appears to be nervous, has shaking hands or a heavy heartbeat, or is sweating even though the temperature is cool.  Also use this label if the the motorist behaves in a nervous way, avoids making eye contact with the officer, focuses on a bag or compartment in the car, appears to be agitated, confronts the officer, gives the officer a curt response, volunteers too much information, or behaves in an overly friendly way toward the officer. 
3. Suspicious or Inconsistent Answers - Use this label if the driver made an answer to an officer that is evasive, nonsensical, inconsistent, contradictory, impossible, vague, incomplete, unusual, or untruthful.
4. Motorist license or Identification - Use this label if the motorist cannot provide the officer with a license or identification or if the license is invalid, revoked, fake, the wrong color, flimsy, or in someone else’s name. 
5. Driver Status - Use this label only if the driver of the vehicle is male, young, or not from the state in which the officer pulled the car over. 
6. Refused Consent - Use this label if the driver refused to consent to the officer’s request to search the automobile.
7. Legal Indications of Drug Use - Use this label if the motorist has an active arrest warrant for a drug related charge or if the motorist has been arrested for or convicted of a drug related offense in the past or if the officer knows that the motorist has abused, possessed, dealed, or trafficked in drugs in the past. 
8. Motorist's Appearance Related to Drug Use or Sale - Use this label if driver looks like they USE DRUGS such as needle track marks, rotten teeth, scabbing, bloodshot eyes, dilated pupils, unwashed hair, dirty clothes, body odor or dirty skin or if the driver is wearing suspicious clothing, such as expensive jewelry, expensive or luxury clothing, or clothing with images of drugs (e.g., marijuana leaves).
9. Possible Drug Route - Use this label if the driver’s route is from or to a city or area, which is known for drug trafficking or high crime rates, or if the driver stops the vehicle late at night or early in the morning in an area known for criminal activity. 
10. Unusual Travel Plans - Use this label if the motorist appears to be headed to a location that the motorist has already passed, is traveling on a road that does not lead to the stated destination, plans a trip that is too far to drive in a reasonable time (e.g., driving from Philadelphia to Miami in a single night), claims to be driving a long round trip in a one-day rental vehicle, or has other unusual travel plans.
11. Expensive Vehicle - Use this label if the motorist is driving a kind of vehicle associated with illicit drug use or trafficking such as a luxury or expensive vehicle, e.g., a BMW, Mercedes, Cadillac, or Range Rover.
12. Vehicle License Plate or Registration - Use this label if the vehicle's license plate is missing, shielded from view, or from out of state, or if the license plate or vehicle registration has expired.
13. Unusual Vehicle Ownership - Use this label if the vehicle is rented or if the vehicle is owned by someone not in the vehicle, unknown to the driver, or about whom the driver knows very little or claims to be a distant relative. 
14. Indicia of Hard Travel - Use this label if the motorist has been driving a great distance for a long time and is attempting to make as few stops as possible, or if the vehicle contained fast-food bags, lots of trash, energy drinks or substances designed to keep the consumer awake, such as Redbull, Five-Hour Energy, or Energize Capsules. 
15. Masking Agent - Use this label if the vehicle contained a substance or product used to mask the odor of drugs such as air fresheners (e.g., Little Trees, Febreze, Glade, etc.), scented dryer sheets or baby wipes, or strongly smelling tobacco products, cigars or cigarettes or other strong smells.
16. Vehicle Contents Suggest Drugs - This label SHOULD NOT be used for anything found after a canine has sniffed the car. Use this label if the vehicle smells of drug use (e.g., smells of raw or burnt marijuana or of chemicals such as meth or heroin) or contains drugs in plain view, or items used to ingest or use drugs such as pipes, syringes, needles, lighters, torches, drug paraphernalia, cigarette rolling papers (e.g., Raw or ZigZag brand rolling papers), marijuana cigarettes, joints, or blunts, vials, prescription bottles, or small glass containers used to hold drugs.  This label also applies if there are large amounts of cash or large bill denominations (e.g., $100 bills).
17. Suspicious Communications Device - Use this label if the officer observes suspicious communications devices such as multiple cell phones or a prepaid burner phone. 
18. Suspicious Storage - Use this label if only a small amount of luggage is visible given the stated nature of the trip, if the luggage is stored in the back of the cab instead of the trunk, if the vehicle has an unusual or secret storage compartment  or a car window that will not go down.
29. Suspicion Found - Use this label if the court deciding the case concludes, based on the facts present in the case, that the officer had reasonable suspicion to detain the suspect. 
20. Suspicion Not Found - Use this label if the court deciding the case concludes, based on the facts present in the case, that the officer did not have reasonable suspicion to detain the suspect.
21. No Factor - If none of the factors apply or the court is citing or quoting a legal rule, select this option.

You are also to follow these specific rules:

Typically, a sentence will describe a single factor, however, in some cases, a single sentence may include more than one factor.  If a sentence describes more than one factor, give a label for each factor in the sentence. 

Here are some specific rules you should follow:

1. Precepts or rules of law described by the court should not be labelled.  For example: "A police officer may extend the detention beyond the scope of a routine traffic stop if the driver consents or the officer has reasonable suspicion of criminal activity. Id. at 336."

2. The data is in the form of an appellate court opinion.  Conclusions reached by a lower or a trial court should not be labelled.  Sample language would be "The district court concluded that the officer had probable cause for the search".

3. The charges before the court are not to be considered Legal Indications of Drug Use.  For example: "The defendant is charged with possession with intent to distribute," should not be labeled.  However, "A record check revealed that the motorist had a conviction for drug possession" should be labelled as Legal Indication of Drug Use.

4. A sentence may be from a concurring or dissenting opinion. Do not annotate concurring or dissenting opinions even if they contain sentences describing factors.

5. Arguments by the parties should never be treated as a factor.  For example: "Gray argues that there was not reasonable suspicion for a prolonged detention".  Because this describes an argument, it is not a fact. Common words for argument are challenges, maintains, proffers, alleges. 

6. Sentences that contain solely a legal citation should be labelled as No Factor.  For example: "United States v. Oliver, 343 U.S. 900 (2019)"

7. Statements that describe a legal issue are not a factor.  For example: "The question before the court is whether the officer had reasonable suspicion to detain the motorist?"

8. Officer testimony can support the finding of a factor. 

You should apply a label for each sentence. Here are some examples: 

1. Sentence: Officer Guthrie testified that while the above exchanges were taking place, he noticed that the driver, Arturo Tapia, seemed nervous, and that his hands were shaking.
Label: Physical Appearance of Nervousness

2. Sentence: Upon reviewing the vehicle's documentation, Trooper Conrad discovered that the vehicle belonged to an absent third party, which, in his experience, raised his suspicion that the vehicle was being used for drug trafficking.
Label: Unusual Vehicle Ownership

3. Sentence: Typically, in my training and experience, the overwhelming smell of air fresheners in a rental vehicle is consistent with trying to mask the odor of controlled substances.
Label: Masking Agent, Unusual Vehicle Ownership
-END INSTRUCTIONS-

-START LABELLING-

-EXPECTED OUTPUT-
Sentence [Number]: [Sentence [number] contents]
Label: [label for sentence [number]]

Label the following sentences individually: 

Sentence 1: Case Name:  'UNITED STATES of America, Plaintiff-Appellee, v. Daniel BINION, also known as Daniel Lucas, also known as Donald Lucas, also known as Donald Jackson, also known as Daniel J. Lucas, also known as Kenneth Jackson, also known as Terrell Lucas, also known as Frank, Defendant-Appellant',
Sentence 2: Citation:  '570 F.3d 1034',     Court Name:  'United States Court of Appeals for the Eighth Circuit', 
Sentence 3: Decision Date YYYY-MM-DD:  '2009-07-06', 
Sentence 4: ID No. :  3665043,     'MURPHY, Circuit Judge.
Sentence 5: Daniel Binion was charged with two drug offenses involving crack cocaine and with conspiracy to commit money laundering.
Sentence 6: After the district court denied his motion to suppress, he entered conditional pleas of guilty and was sentenced to 400 months, He appeals the denial of his motion to suppress, and we affirm.
Sentence 7: At approximately 2 a.m. on August 1, 2006, Illinois State Police Sergeant Jeanette Beck pulled over a speeding car which was driven by Christopher Montgomery and occupied by two other men, including Daniel Binion.
Sentence 8: The car was traveling approximately 61 miles per hour in a 45 mile zone on Interstate 80 near Joliet, Illinois.
Sentence 9: As she stopped, the car, Beck observed Montgomery making what she considered to be furtive movements to hide something under his seat.
Sentence 10: When Montgomery rolled down his window, a cloud of -smoke billowed out of the car smelling of burnt marijuana. .
Sentence 11: An electronic check of Montgomery’s driver license revealed an outstanding arrest warrant for possession of stolen property.
Sentence 12: Montgomery was arrested and placed in the state patrol car.
Sentence 13: Beck then asked Binion to get out of the stopped ear.
Sentence 14: She smelled burnt marijuana on him and observed that he was lethargic, extremely nervous, and shaky.
Sentence 15: He was smoking a cigarette, which he refused to extinguish until ordered to do so several times.
Sentence 16: Beck placed Binion in handcuffs and conducted a protective frisk.
Sentence 17: She felt several bulges in his crotch area which she suspected were marijuana, but Binion claimed that the bulges were only part of his body.
Sentence 18: Beck laughed and asked Special Agent Ray Rodriguez, who had arrived on the scene as backup, to conduct a second frisk of Binion.
Sentence 19: After Rodriguez agreed that the bulges were likely marijuana, Bin-ion told the troopers that he had an ounce of marijuana in his pants.
Sentence 20: He was arrested and transported to a nearby state patrol headquarters.
Sentence 21: When Binion stepped out of the patrol car at headquarters a plastic bag of marijuana fell out of his pant leg.
Sentence 22: A full search revealed a bag of cocaine in his front pocket and a second bag of marijuana in the crotch area of his pants.
Sentence 23: Special Agent Rodriguez and Sergeant Tim Zych then read Binion the Illinois State Police Statement of Constitutional Rights, which included Miranda warnings.
Sentence 24: Binion responded that he understood his rights, but he declined to sign a waiver form.
Sentence 25: The troopers asked Binion if there was anything else he wanted to say, and he responded: “I’m booked, I’ll be back in 10 to 15 [years].
Sentence 26: Did you see what they took off me?”
Sentence 27: After this statement, the troopers asked Binion about his personal history in order to fill out an administrative form.
Sentence 28: He was generally uncooperative and fell asleep intermittently during the questioning.
Sentence 29: Binion was charged with conspiracy to distribute more than 50 grams of crack cocaine after having been previously convicted of two or more felony drug offenses, 21 U.S.C. §§ 841(a)(1), (b)(1)(A), 846 & 851; possession with intent to distribute more than 50 grams of crack cocaine after having two previous such convictions, id. §§ 841(a)(1), (b)(1)(A) & 851; and conspiracy to conduct financial transactions involving the proceeds of drug sales, 18 U.S.C. § 1956(a)(1)(A)®, (h).
Sentence 30: Binion moved to suppress the drug evidence, arguing that there was not probable cause for the traffic stop, that there was no reasonable suspicion to justify detaining and frisking him, and that the investigation was unduly prolonged.
Sentence 31: He also contended that the troopers had questioned him after he invoked his privilege against self incrimination and that his post arrest statements should therefore be suppressed.
Sentence 32: United States Magistrate Judge Jon Scoles held an evidentiary hearing, and the district court adopted his findings and denied the motion to suppress.
Sentence 33: Pursuant to a plea agreement, Binion entered conditional guilty pleas to the two conspiracy counts in the indictment, reserving the right to appeal the denial of his pretrial motion.
Sentence 34: See Fed.R.Crim.P. 11(a)(2).
Sentence 35: On his appeal, Binion argues that the seizure of the drug evidence violated his Fourth Amendment right to be free from unreasonable searches and seizures because there was not probable cause to stop the car in which he was a passenger, no reasonable suspicion to detain him, and no officer safety concerns to justify frisking him.
Sentence 36: He also contends that the permissible scope of his detention was exceeded and that his statements to the officers should have been suppressed.
Sentence 37: We review de novo the denial of a motion to suppress and review the district court’s underlying factual determinations for clear error.
Sentence 38: United States v. Banks, 553 F.3d 1101, 1104 (8th Cir.2009).
Sentence 39: We will reverse “only if the district court’s decision is unsupported by substantial evidence, based on an erroneous interpretation of applicable law, or, based on the entire record, it is clear a mistake was made.”
Sentence 40: United States v. Harper, 466 F.3d 634, 643 (8th Cir.2006) (quotation omitted).



TASK
In this task, we are attempting to label sentences to assess whether they contain important information.  These facts are tied to a specific legal problem which we have described below: 

-START LEGAL PROBLEM EXPLANATION-
We are interested in highway drug-interdiction. This occurs when a motorist is stopped by police for violating a traffic law and is subsequently detained based on an officer’s reasonable suspicion that the motorist is trafficking or possessing drugs.
An example of drug interdiction: John Smith, a motorist, is driving down interstate 95 in Miami Dade County, Florida with a brake light out and an occluded license plate. Officer Brown, who has been following Mr. Smith, initiates a traffic stop due to the light and the license plate. After Mr. Smith pulls over, Officer Brown observes Mr. Smith is moving around and appears to be reaching under his seat. After approaching the vehicle, Officer Brown notices that Mr. Smith is more nervous that someone would usually be when stopped for a traffic offense. He notices that Mr. Smith is sweating, shaking, and avoiding eye contact. Mr. Smith hands Officer Brown his license and registration, and vehicle rental agreement, which shows that Mr. Smith rented the vehicle in Philadelphia, and the car is due back there in 1 day. Officer Brown notices two cellphones in the center console, 1 prepaid, and 1 iPhone; he sees numerous cans of Redbull, and McDonald’s bags strewn about the vehicle; he notices a number of air fresheners hanging from the rearview mirror; he sees that instead of placing his luggage in the trunk, Mr. Smith has kept a small amount of luggage in the rear of the vehicle. Officer Brown asks Mr. Smith where he is coming from and where he is going. Mr. Smith states that he is coming from Washington D.C. and is headed to Arkansas to see family. When Officer Smith asks why, if he was headed to Arkansas to see family, he was in Miami, Mr. Smith states that he is actually seeing his girlfriend, who he cannot name, in Miami, before heading west to Arkansas to see his family. Based on the foregoing, Officer Brown believes that Mr. Smith is actually trafficking drugs, and detains him for 20 minutes until a drug dog can complete an open air sniff of the vehicle. Upon completion of the sniff, the dog indicates that there are drugs in the trunk of the vehicle. After opening the trunk, Officer Brown seizes 5kg of cocaine from the vehicle. Mr. Smith is arrested, and subsequently charged.
The legal question presented from these facts is whether Officer Brown had reasonable suspicion based upon articulable facts (his observations) that criminal activity was afoot. If so, then he could detain Mr. Smith for the time necessary to complete a canine sniff of the vehicle. If not, Mr. Smith’s constitutional rights have been violated due to the detention. We will be annotating cases that present the same legal problem. Although the facts (factors) of each case will be different to some degree (small or great), this is the legal problem that must be examined. There are certain kinds of facts that we are interested in identifying. Below we refer to these facts as factors.
-END LEGAL PROBLEM EXPLANATION-

-START INSTRUCTIONS-
YOU will assess sentences to and determine whether they belong to any of the following categories based on the content of the sentence and the descriptions below: 

1. Furtive Movement - Use this label if the driver or passenger in the vehicle makes a suspicious movement, such as reaching beneath a seat, or in a purse or bag, or around a waistband, or in a pocket, which is commonly an attempt to conceal contraband or a weapon.  This also includes attempting to evade custody such as taking a long time to pull the vehicle over.  Simple driving mistakes do not count under this factor.
2. Nervous Behavior or Appearance - Use this label if the motorist appears to be nervous, has shaking hands or a heavy heartbeat, or is sweating even though the temperature is cool.  Also use this label if the the motorist behaves in a nervous way, avoids making eye contact with the officer, focuses on a bag or compartment in the car, appears to be agitated, confronts the officer, gives the officer a curt response, volunteers too much information, or behaves in an overly friendly way toward the officer. 
3. Suspicious or Inconsistent Answers - Use this label if the driver made an answer to an officer that is evasive, nonsensical, inconsistent, contradictory, impossible, vague, incomplete, unusual, or untruthful.
4. Motorist license or Identification - Use this label if the motorist cannot provide the officer with a license or identification or if the license is invalid, revoked, fake, the wrong color, flimsy, or in someone else’s name. 
5. Driver Status - Use this label only if the driver of the vehicle is male, young, or not from the state in which the officer pulled the car over. 
6. Refused Consent - Use this label if the driver refused to consent to the officer’s request to search the automobile.
7. Legal Indications of Drug Use - Use this label if the motorist has an active arrest warrant for a drug related charge or if the motorist has been arrested for or convicted of a drug related offense in the past or if the officer knows that the motorist has abused, possessed, dealed, or trafficked in drugs in the past. 
8. Motorist's Appearance Related to Drug Use or Sale - Use this label if driver looks like they USE DRUGS such as needle track marks, rotten teeth, scabbing, bloodshot eyes, dilated pupils, unwashed hair, dirty clothes, body odor or dirty skin or if the driver is wearing suspicious clothing, such as expensive jewelry, expensive or luxury clothing, or clothing with images of drugs (e.g., marijuana leaves).
9. Possible Drug Route - Use this label if the driver’s route is from or to a city or area, which is known for drug trafficking or high crime rates, or if the driver stops the vehicle late at night or early in the morning in an area known for criminal activity. 
10. Unusual Travel Plans - Use this label if the motorist appears to be headed to a location that the motorist has already passed, is traveling on a road that does not lead to the stated destination, plans a trip that is too far to drive in a reasonable time (e.g., driving from Philadelphia to Miami in a single night), claims to be driving a long round trip in a one-day rental vehicle, or has other unusual travel plans.
11. Expensive Vehicle - Use this label if the motorist is driving a kind of vehicle associated with illicit drug use or trafficking such as a luxury or expensive vehicle, e.g., a BMW, Mercedes, Cadillac, or Range Rover.
12. Vehicle License Plate or Registration - Use this label if the vehicle's license plate is missing, shielded from view, or from out of state, or if the license plate or vehicle registration has expired.
13. Unusual Vehicle Ownership - Use this label if the vehicle is rented or if the vehicle is owned by someone not in the vehicle, unknown to the driver, or about whom the driver knows very little or claims to be a distant relative. 
14. Indicia of Hard Travel - Use this label if the motorist has been driving a great distance for a long time and is attempting to make as few stops as possible, or if the vehicle contained fast-food bags, lots of trash, energy drinks or substances designed to keep the consumer awake, such as Redbull, Five-Hour Energy, or Energize Capsules. 
15. Masking Agent - Use this label if the vehicle contained a substance or product used to mask the odor of drugs such as air fresheners (e.g., Little Trees, Febreze, Glade, etc.), scented dryer sheets or baby wipes, or strongly smelling tobacco products, cigars or cigarettes or other strong smells.
16. Vehicle Contents Suggest Drugs - This label SHOULD NOT be used for anything found after a canine has sniffed the car. Use this label if the vehicle smells of drug use (e.g., smells of raw or burnt marijuana or of chemicals such as meth or heroin) or contains drugs in plain view, or items used to ingest or use drugs such as pipes, syringes, needles, lighters, torches, drug paraphernalia, cigarette rolling papers (e.g., Raw or ZigZag brand rolling papers), marijuana cigarettes, joints, or blunts, vials, prescription bottles, or small glass containers used to hold drugs.  This label also applies if there are large amounts of cash or large bill denominations (e.g., $100 bills).
17. Suspicious Communications Device - Use this label if the officer observes suspicious communications devices such as multiple cell phones or a prepaid burner phone. 
18. Suspicious Storage - Use this label if only a small amount of luggage is visible given the stated nature of the trip, if the luggage is stored in the back of the cab instead of the trunk, if the vehicle has an unusual or secret storage compartment  or a car window that will not go down.
29. Suspicion Found - Use this label if the court deciding the case concludes, based on the facts present in the case, that the officer had reasonable suspicion to detain the suspect. 
20. Suspicion Not Found - Use this label if the court deciding the case concludes, based on the facts present in the case, that the officer did not have reasonable suspicion to detain the suspect.
21. No Factor - If none of the factors apply or the court is citing or quoting a legal rule, select this option.

You are also to follow these specific rules:

Typically, a sentence will describe a single factor, however, in some cases, a single sentence may include more than one factor.  If a sentence describes more than one factor, give a label for each factor in the sentence. 

Here are some specific rules you should follow:

1. Precepts or rules of law described by the court should not be labelled.  For example: "A police officer may extend the detention beyond the scope of a routine traffic stop if the driver consents or the officer has reasonable suspicion of criminal activity. Id. at 336."

2. The data is in the form of an appellate court opinion.  Conclusions reached by a lower or a trial court should not be labelled.  Sample language would be "The district court concluded that the officer had probable cause for the search".

3. The charges before the court are not to be considered Legal Indications of Drug Use.  For example: "The defendant is charged with possession with intent to distribute," should not be labeled.  However, "A record check revealed that the motorist had a conviction for drug possession" should be labelled as Legal Indication of Drug Use.

4. A sentence may be from a concurring or dissenting opinion. Do not annotate concurring or dissenting opinions even if they contain sentences describing factors.

5. Arguments by the parties should never be treated as a factor.  For example: "Gray argues that there was not reasonable suspicion for a prolonged detention".  Because this describes an argument, it is not a fact. Common words for argument are challenges, maintains, proffers, alleges. 

6. Sentences that contain solely a legal citation should be labelled as No Factor.  For example: "United States v. Oliver, 343 U.S. 900 (2019)"

7. Statements that describe a legal issue are not a factor.  For example: "The question before the court is whether the officer had reasonable suspicion to detain the motorist?"

8. Officer testimony can support the finding of a factor. 

You should apply a label for each sentence. Here are some examples: 

1. Sentence: Officer Guthrie testified that while the above exchanges were taking place, he noticed that the driver, Arturo Tapia, seemed nervous, and that his hands were shaking.
Label: Physical Appearance of Nervousness

2. Sentence: Upon reviewing the vehicle's documentation, Trooper Conrad discovered that the vehicle belonged to an absent third party, which, in his experience, raised his suspicion that the vehicle was being used for drug trafficking.
Label: Unusual Vehicle Ownership

3. Sentence: Typically, in my training and experience, the overwhelming smell of air fresheners in a rental vehicle is consistent with trying to mask the odor of controlled substances.
Label: Masking Agent, Unusual Vehicle Ownership
-END INSTRUCTIONS-

-START LABELLING-

-EXPECTED OUTPUT-
Sentence [Number]: [Sentence [number] contents]
Label: [label for sentence [number]]

Label the following sentences individually: 

Sentence 1: Although Binion asserts there was not probable cause for his traffic stop, he does not contest that the speed limit in the area was 45 miles per hour nor that Montgomery was driving in excess of that speed.
Sentence 2: Any traffic violation creates probable cause to stop a vehicle, and Beck had an objectively reasonable belief that Montgomery was speeding.
Sentence 3: See United States v. Sallis, 507 F.3d 646, 649 (8th Cir.2007).
Sentence 4: The district court found Beck’s explanation for why she stopped the car to be credible, and such assessments are “virtually unassailable on appeal.”
Sentence 5: United States v. Rodriguez, 414 F.3d 837, 845 (8th Cir.2005).
Sentence 6: Binion charges nevertheless that Beck’s explanation for why she stopped the car is not credible because she could not say on cross examination what percentage of Interstate 80 in Illinois has a speed limit of 65 miles per hour.
Sentence 7: That question is irrelevant to the issue of probable cause since the car was admittedly stopped in a 45 mile zone.
Sentence 8: Also of little effect were Bin-ion’s efforts to impeach Beck by arguing that she could not have observed the driver hiding something under the seat from her vantage point and that she failed to detect the crack cocaine in his front pocket when she frisked him.
Sentence 9: Binion further contends that Beck violated the Fourth Amendment by expanding her investigation beyond the scope of the traffic stop and detaining him.
Sentence 10: An officer may question a person if she has a reasonable, articulable suspicion that the person is engaged in criminal activity.
Sentence 11: See Terry v. Ohio, 392 U.S. 1, 21, 88 S.Ct. 1868, 20 L.Ed.2d 889 (1968); United States v. Long, 320 F.3d 795, 800 (8th Cir.2003) (investigative detention “can grow out of a traffic stop so long as the officer has reasonable suspicion to expand his investigation”).
Sentence 12: The officer must have a “particularized and objective basis for suspecting the particular person stopped of criminal activity” in light of all the circumstances from which “a trained officer draws inferences and makes deductions ... that might well elude an untrained person.”
Sentence 13: United States v. Cortez, 449 U.S. 411, 417-18, 101 S.Ct. 690, 66 L.Ed.2d 621 (1981).
Sentence 14: Beck, who had thirteen years of experience as a highway patrol officer, explained that she was suspicious that Binion was involved in criminal activity because of the strong odor of marijuana emanating from the car and his person, as well as his lethargy, nervousness, and shakiness.
Sentence 15: See United States v. Caves, 890 F.2d 87, 90 (8th Cir.1989) (smell of burnt marijuana created probable cause for vehicle search).
Sentence 16: Binion argues that the odor could be explained by the fact that he was sitting in a car in which others had been smoking and that Beck “had no baseline against which to evaluate [his] level of functioning.”
Sentence 17: Even if Binion’s individual actions “could be susceptible to innocent explanation, [his] behavior must be considered as a whole and in the light of the officers’ experience and specialized training.”
Sentence 18: United States v. Ameling, 328 F.3d 443, 448 (8th Cir.2003) (quotation omitted); see also United States v. Arvizu, 534 U.S. 266, 274, 122 S.Ct. 744, 151 L.Ed.2d 740 (2002) (rejecting “divide and conquer” analysis in which each suspicious observation is considered alone and found susceptible to innocent explanation).
Sentence 19: We conclude that Beck had a reasonable suspicion that Bin-ion was involved in criminal activity and was therefore justified in investigating .him.
Sentence 20: Binion also argues that Beck was not justified in conducting a protective frisk or “pat down.”
Sentence 21: Officers conducting investigative stops “may take steps reasonably necessary to protect their personal safety.”
Sentence 22: United States v. Stachowiak, 521 F.3d 852, 855 (8th Cir.2008) (quoting United States v. Shranklen, 315 F.3d 959, 961 (8th Cir.2003)).
Sentence 23: A protective frisk is warranted if “specific articulable facts taken together with rational inferences support the reasonable suspicion that a party was potentially armed and dangerous.”
Sentence 24: United States v. Ellis, 501 F.3d 958, 961 (8th Cir.2007) (quotation omitted).
Sentence 25: The question is an objective one: “whether a reasonably prudent man in the circumstances would be warranted in the belief that his safety or that of others was in danger.”
Sentence 26: Terry, 392 U.S. at 27, 88 S.Ct. 1868.
Sentence 27: Whether a frisk was supported by reasonable suspicion is a mixed question of law and fact which we review de novo.
Sentence 28: United States v. Roggeman, 279 F.3d 573, 577 (8th Cir.2002).
Sentence 29: From the facts she had observed, Beck could reasonably have suspected that drugs were being transported in the car.
Sentence 30: Someone in the car had recently been smoking marijuana, and the driver had been apparently trying to hide something under the front seat.
Sentence 31: The driver also had an outstanding warrant for his arrest and had been exceeding the speed limit at 2 a.m.
Sentence 32: An officer’s reasonable belief that someone is involved in drug dealing can support a suspicion that the person is armed since weapons are often present incident to the drug business.
Sentence 33: See United States v. Robinson, 119 F.3d 663, 667 (8th Cir.1997).
Sentence 34: By the time Binion was frisked, he had refused to cooperate by extinguishing his cigarette, see Stachowiak, 521 F.3d at 856-57, and he had reached for his back pocket after he was handcuffed, see Robinson, 119 F.3d at 667 (officer safety in doubt where suspect moved his hands towards his waist and appeared nervous).
Sentence 35: Binion objects that Beck did not mention all of these factors in her police report or testimony, but the objective Terry standard does not require that an officer have verbalized all the reasons “justifying the search articulately, only that such reasons be articulable.”
Sentence 36: Roggeman, 279 F.3d at 583-84.
Sentence 37: Under the circumstances Beck’s suspicion that Binion might be armed was reasonable and the protective frisk therefore justified.
Sentence 38: If an officer detects apparent contraband during a valid protective frisk, the officer may seize the item.
Sentence 39: Minnesota v. Dickerson, 508 U.S. 366, 376-77, 113 S.Ct. 2130, 124 L.Ed.2d 334 (1993) (plain feel doctrine); see also Stachowiak, 521 F.3d at 855 (so long as the frisk is supported by an objectively reasonable belief that the suspect was dangerous, the fact that an officer finds drugs rather than a weapon does not require suppression of the drug evidence).
Sentence 40: Beck stated that she immediately suspected that the bulges in Binioris crotch were plastic bags of marijuana, but Binion contends that the bulges did not create probable cause because marijuana “would have been indistinguishable in a tactile sense from [his] genitalia.”



TASK
In this task, we are attempting to label sentences to assess whether they contain important information.  These facts are tied to a specific legal problem which we have described below: 

-START LEGAL PROBLEM EXPLANATION-
We are interested in highway drug-interdiction. This occurs when a motorist is stopped by police for violating a traffic law and is subsequently detained based on an officer’s reasonable suspicion that the motorist is trafficking or possessing drugs.
An example of drug interdiction: John Smith, a motorist, is driving down interstate 95 in Miami Dade County, Florida with a brake light out and an occluded license plate. Officer Brown, who has been following Mr. Smith, initiates a traffic stop due to the light and the license plate. After Mr. Smith pulls over, Officer Brown observes Mr. Smith is moving around and appears to be reaching under his seat. After approaching the vehicle, Officer Brown notices that Mr. Smith is more nervous that someone would usually be when stopped for a traffic offense. He notices that Mr. Smith is sweating, shaking, and avoiding eye contact. Mr. Smith hands Officer Brown his license and registration, and vehicle rental agreement, which shows that Mr. Smith rented the vehicle in Philadelphia, and the car is due back there in 1 day. Officer Brown notices two cellphones in the center console, 1 prepaid, and 1 iPhone; he sees numerous cans of Redbull, and McDonald’s bags strewn about the vehicle; he notices a number of air fresheners hanging from the rearview mirror; he sees that instead of placing his luggage in the trunk, Mr. Smith has kept a small amount of luggage in the rear of the vehicle. Officer Brown asks Mr. Smith where he is coming from and where he is going. Mr. Smith states that he is coming from Washington D.C. and is headed to Arkansas to see family. When Officer Smith asks why, if he was headed to Arkansas to see family, he was in Miami, Mr. Smith states that he is actually seeing his girlfriend, who he cannot name, in Miami, before heading west to Arkansas to see his family. Based on the foregoing, Officer Brown believes that Mr. Smith is actually trafficking drugs, and detains him for 20 minutes until a drug dog can complete an open air sniff of the vehicle. Upon completion of the sniff, the dog indicates that there are drugs in the trunk of the vehicle. After opening the trunk, Officer Brown seizes 5kg of cocaine from the vehicle. Mr. Smith is arrested, and subsequently charged.
The legal question presented from these facts is whether Officer Brown had reasonable suspicion based upon articulable facts (his observations) that criminal activity was afoot. If so, then he could detain Mr. Smith for the time necessary to complete a canine sniff of the vehicle. If not, Mr. Smith’s constitutional rights have been violated due to the detention. We will be annotating cases that present the same legal problem. Although the facts (factors) of each case will be different to some degree (small or great), this is the legal problem that must be examined. There are certain kinds of facts that we are interested in identifying. Below we refer to these facts as factors.
-END LEGAL PROBLEM EXPLANATION-

-START INSTRUCTIONS-
YOU will assess sentences to and determine whether they belong to any of the following categories based on the content of the sentence and the descriptions below: 

1. Furtive Movement - Use this label if the driver or passenger in the vehicle makes a suspicious movement, such as reaching beneath a seat, or in a purse or bag, or around a waistband, or in a pocket, which is commonly an attempt to conceal contraband or a weapon.  This also includes attempting to evade custody such as taking a long time to pull the vehicle over.  Simple driving mistakes do not count under this factor.
2. Nervous Behavior or Appearance - Use this label if the motorist appears to be nervous, has shaking hands or a heavy heartbeat, or is sweating even though the temperature is cool.  Also use this label if the the motorist behaves in a nervous way, avoids making eye contact with the officer, focuses on a bag or compartment in the car, appears to be agitated, confronts the officer, gives the officer a curt response, volunteers too much information, or behaves in an overly friendly way toward the officer. 
3. Suspicious or Inconsistent Answers - Use this label if the driver made an answer to an officer that is evasive, nonsensical, inconsistent, contradictory, impossible, vague, incomplete, unusual, or untruthful.
4. Motorist license or Identification - Use this label if the motorist cannot provide the officer with a license or identification or if the license is invalid, revoked, fake, the wrong color, flimsy, or in someone else’s name. 
5. Driver Status - Use this label only if the driver of the vehicle is male, young, or not from the state in which the officer pulled the car over. 
6. Refused Consent - Use this label if the driver refused to consent to the officer’s request to search the automobile.
7. Legal Indications of Drug Use - Use this label if the motorist has an active arrest warrant for a drug related charge or if the motorist has been arrested for or convicted of a drug related offense in the past or if the officer knows that the motorist has abused, possessed, dealed, or trafficked in drugs in the past. 
8. Motorist's Appearance Related to Drug Use or Sale - Use this label if driver looks like they USE DRUGS such as needle track marks, rotten teeth, scabbing, bloodshot eyes, dilated pupils, unwashed hair, dirty clothes, body odor or dirty skin or if the driver is wearing suspicious clothing, such as expensive jewelry, expensive or luxury clothing, or clothing with images of drugs (e.g., marijuana leaves).
9. Possible Drug Route - Use this label if the driver’s route is from or to a city or area, which is known for drug trafficking or high crime rates, or if the driver stops the vehicle late at night or early in the morning in an area known for criminal activity. 
10. Unusual Travel Plans - Use this label if the motorist appears to be headed to a location that the motorist has already passed, is traveling on a road that does not lead to the stated destination, plans a trip that is too far to drive in a reasonable time (e.g., driving from Philadelphia to Miami in a single night), claims to be driving a long round trip in a one-day rental vehicle, or has other unusual travel plans.
11. Expensive Vehicle - Use this label if the motorist is driving a kind of vehicle associated with illicit drug use or trafficking such as a luxury or expensive vehicle, e.g., a BMW, Mercedes, Cadillac, or Range Rover.
12. Vehicle License Plate or Registration - Use this label if the vehicle's license plate is missing, shielded from view, or from out of state, or if the license plate or vehicle registration has expired.
13. Unusual Vehicle Ownership - Use this label if the vehicle is rented or if the vehicle is owned by someone not in the vehicle, unknown to the driver, or about whom the driver knows very little or claims to be a distant relative. 
14. Indicia of Hard Travel - Use this label if the motorist has been driving a great distance for a long time and is attempting to make as few stops as possible, or if the vehicle contained fast-food bags, lots of trash, energy drinks or substances designed to keep the consumer awake, such as Redbull, Five-Hour Energy, or Energize Capsules. 
15. Masking Agent - Use this label if the vehicle contained a substance or product used to mask the odor of drugs such as air fresheners (e.g., Little Trees, Febreze, Glade, etc.), scented dryer sheets or baby wipes, or strongly smelling tobacco products, cigars or cigarettes or other strong smells.
16. Vehicle Contents Suggest Drugs - This label SHOULD NOT be used for anything found after a canine has sniffed the car. Use this label if the vehicle smells of drug use (e.g., smells of raw or burnt marijuana or of chemicals such as meth or heroin) or contains drugs in plain view, or items used to ingest or use drugs such as pipes, syringes, needles, lighters, torches, drug paraphernalia, cigarette rolling papers (e.g., Raw or ZigZag brand rolling papers), marijuana cigarettes, joints, or blunts, vials, prescription bottles, or small glass containers used to hold drugs.  This label also applies if there are large amounts of cash or large bill denominations (e.g., $100 bills).
17. Suspicious Communications Device - Use this label if the officer observes suspicious communications devices such as multiple cell phones or a prepaid burner phone. 
18. Suspicious Storage - Use this label if only a small amount of luggage is visible given the stated nature of the trip, if the luggage is stored in the back of the cab instead of the trunk, if the vehicle has an unusual or secret storage compartment  or a car window that will not go down.
29. Suspicion Found - Use this label if the court deciding the case concludes, based on the facts present in the case, that the officer had reasonable suspicion to detain the suspect. 
20. Suspicion Not Found - Use this label if the court deciding the case concludes, based on the facts present in the case, that the officer did not have reasonable suspicion to detain the suspect.
21. No Factor - If none of the factors apply or the court is citing or quoting a legal rule, select this option.

You are also to follow these specific rules:

Typically, a sentence will describe a single factor, however, in some cases, a single sentence may include more than one factor.  If a sentence describes more than one factor, give a label for each factor in the sentence. 

Here are some specific rules you should follow:

1. Precepts or rules of law described by the court should not be labelled.  For example: "A police officer may extend the detention beyond the scope of a routine traffic stop if the driver consents or the officer has reasonable suspicion of criminal activity. Id. at 336."

2. The data is in the form of an appellate court opinion.  Conclusions reached by a lower or a trial court should not be labelled.  Sample language would be "The district court concluded that the officer had probable cause for the search".

3. The charges before the court are not to be considered Legal Indications of Drug Use.  For example: "The defendant is charged with possession with intent to distribute," should not be labeled.  However, "A record check revealed that the motorist had a conviction for drug possession" should be labelled as Legal Indication of Drug Use.

4. A sentence may be from a concurring or dissenting opinion. Do not annotate concurring or dissenting opinions even if they contain sentences describing factors.

5. Arguments by the parties should never be treated as a factor.  For example: "Gray argues that there was not reasonable suspicion for a prolonged detention".  Because this describes an argument, it is not a fact. Common words for argument are challenges, maintains, proffers, alleges. 

6. Sentences that contain solely a legal citation should be labelled as No Factor.  For example: "United States v. Oliver, 343 U.S. 900 (2019)"

7. Statements that describe a legal issue are not a factor.  For example: "The question before the court is whether the officer had reasonable suspicion to detain the motorist?"

8. Officer testimony can support the finding of a factor. 

You should apply a label for each sentence. Here are some examples: 

1. Sentence: Officer Guthrie testified that while the above exchanges were taking place, he noticed that the driver, Arturo Tapia, seemed nervous, and that his hands were shaking.
Label: Physical Appearance of Nervousness

2. Sentence: Upon reviewing the vehicle's documentation, Trooper Conrad discovered that the vehicle belonged to an absent third party, which, in his experience, raised his suspicion that the vehicle was being used for drug trafficking.
Label: Unusual Vehicle Ownership

3. Sentence: Typically, in my training and experience, the overwhelming smell of air fresheners in a rental vehicle is consistent with trying to mask the odor of controlled substances.
Label: Masking Agent, Unusual Vehicle Ownership
-END INSTRUCTIONS-

-START LABELLING-

-EXPECTED OUTPUT-
Sentence [Number]: [Sentence [number] contents]
Label: [label for sentence [number]]

Label the following sentences individually: 

Sentence 1: Whether the bulges that Beck detected created probable cause to seize the contraband is irrelevant because nothing was seized from Binion until after his arrest.
Sentence 2: Binion’s admission to the troopers that he had an ounce of marijuana in his pants created probable cause for his arrest.
Sentence 3: When he arrived at the state patrol headquarters after his arrest, a bag of marijuana fell out of the leg of his pants and was seized as contraband in plain view.
Sentence 4: Two additional bags of drugs were seized when Binion was searched during booking after his arrest.
Sentence 5: See United States v. Davis, 457 F.3d 817, 823 (8th Cir.2006) (allowing use of drug evidence seized at police station after officer detected contraband during frisk, arrested suspect, and searched him incident to arrest).
Sentence 6: None of these seizures relied solely on what Beck felt inside Binioris pants, and we conclude they were all constitutional.
Sentence 7: Binion contends that his detention lasted longer than was necessary because the troopers transported him to headquarters rather than investigating further by the highway.
Sentence 8: While an investigative detention “must be temporary and last no longer than is necessary to effectuate the purpose of the stop,” Florida v. Royer, 460 U.S. 491, 500, 103 S.Ct. 1319, 75 L.Ed.2d 229 (1983), Binion had been arrested by the time the troopers transported him.
Sentence 9: His detention was then supported by probable cause so the requirement that the detention be minimally intrusive no longer applied.
Sentence 10: Moreover, it appears that the troopers acted diligently because only a half hour elapsed between the traffic stop and when he was taken into custody.
Sentence 11: We conclude that the district court did not err in denying his motion to suppress the physical evidence.
Sentence 12: Binion also moved to suppress the statements he made at the police station, arguing that they were obtained in violation of his Fifth Amendment privilege against self incrimination.
Sentence 13: Under Miranda v. Arizona, 384 U.S. 436, 444, 86 S.Ct. 1602, 16 L.Ed.2d 694 (1966), statements made by a custodial suspect in response to interrogation are inadmissible unless the suspect has voluntarily, knowingly, and intelligently waived his right against self incrimination.
Sentence 14: The district court found that Binion’s statements were voluntary rather than the result of interrogation and that he had not invoked his right to remain silent.
Sentence 15: We review de novo the legal conclusions underlying the denial of a motion to suppress on Fifth Amendment grounds, while the factual findings are reviewed for clear error.
Sentence 16: United States v. Aldaco, 477 F.3d 1008, 1013 (8th Cir.2007).
Sentence 17: After Binion was searched at headquarters, Sergeant Tim Zych and Special Agent Rodriguez explained his constitutional rights, including those required by Miranda.
Sentence 18: Binion stated that he understood those rights, but he refused to sign a waiver form.
Sentence 19: When he was asked whether he had anything else to say, he responded: “I’m booked, I’ll be back in 10 to 15 [years].
Sentence 20: Did you see what they took off me?”
Sentence 21: Binion argues that these statements are inadmissible because they were made in response to interrogation.
Sentence 22: Interrogation includes both express questioning and “words or actions that officers should know are reasonably likely to elicit an incriminating response.”
Sentence 23: Rhode Island v. Innis, 446 U.S. 291, 301, 100 S.Ct. 1682, 64 L.Ed.2d 297 (1980).
Sentence 24: Refusing to sign a written waiver of the privilege against self incrimination does not itself invoke that privilege and does not preclude a subsequent oral waiver.
Sentence 25: See United States v. House, 939 F.2d 659, 662 (8th Cir.1991) (citing North Carolina v. Butler, 441 U.S. 369, 99 S.Ct. 1755, 60 L.Ed.2d 286 (1979)); United States v. Zamarripa, 544 F.2d 978, 981 (8th Cir.1976).
Sentence 26: The troopers did not question Bin-ion about the evidence seized, the potential charges he faced, or any other matter reasonably likely to elicit an incriminating response.
Sentence 27: See United States v. Mendoza-Gonzalez, 363 F.3d 788, 795 (8th Cir.2004) (not interrogation to ask a detained person why he had requested to make a phone call).
Sentence 28: Since Binion had been informed of his rights and had neither invoked his Fifth Amendment privilege nor requested an attorney, his decision to volunteer an incriminating response was an intelligent waiver of that right.
Sentence 29: See House, 939 F.2d at 662 (waiver “may be inferred from the fact that the defendant responded to questions posed by the interviewer after being advised of his rights”); Aldaco, 477 F.3d at 1016 (Fifth Amendment does not bar a voluntary statement made by a suspect).
Sentence 30: We conclude that Binion’s statements were voluntary and therefore admissible under the Fifth Amendment and Miranda.
Sentence 31: Accordingly, we affirm the judgment of the district court.
Sentence 32: . The Honorable Linda R. Reade, Chief Judge, United States District Court for the Northern District of Iowa.', 
Sentence 33: Dissenting/Concuring:  'Not Available',     Dissenting/Concuring 2:  'Not Available',     Dissenting/Concuring 3:  'Not Available'



