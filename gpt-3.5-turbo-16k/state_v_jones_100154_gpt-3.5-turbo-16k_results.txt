Sentence 1: Case Name: 'THE STATE v. JONES'
Label: No Factor

Sentence 2: Citation: '245 Ga. App. 763', Court Name: 'Court of Appeals of Georgia'
Label: No Factor

Sentence 3: Decision Date YYYY-MM-DD: '2000-08-31'
Label: No Factor

Sentence 4: ID No. : 126654, 'Johnson, Chief Judge.
Label: No Factor

Sentence 5: The state appeals from the trial court’s grant of Stephanie Jones’ motion to suppress items seized from her car and purse, contending that the motion did not satisfy the requirements of OCGA § 17-5-30 (b), and that the search was supported by probable cause.
Label: No Factor

Sentence 6: We affirm the trial court’s decision.
Label: No Factor

Sentence 7: The state contends that the motion to suppress should not have been considered by the trial court because it failed to state facts showing that the search and seizure were unlawful.
Label: No Factor

Sentence 8: The state alleges that, as a result of this deficiency, it was unaware of the grounds of the motion and was unable to adequately respond.
Label: No Factor

Sentence 9: This argument is without merit.
Label: No Factor

Sentence 10: OCGA § 17-5-30 (b) provides that a motion to suppress shall be in writing and state facts showing that the search and seizure were unlawful.
Label: No Factor

Sentence 11: In cases involving warrantless searches, the factual showing required by OCGA § 17-5-30 (b) need not be made in great detail because, in such cases, many of the necessary allegations are negative facts (e.g., the search was conducted without a warrant, the movant did not consent to the search) and are conclusions based upon mixed questions of law and negative fact (e.g., the officer lacked probable cause to arrest or search).
Label: No Factor

Sentence 12: In her original motion, Jones moved to suppress all evidence gathered against her, including test results, statements she made to police, and all evidence seized from her or her car without probable cause, either with or without a warrant.
Label: No Factor

Sentence 13: No facts were included in the motion or brief filed in support of the motion.
Label: No Factor

Sentence 14: Jones later filed an amended motion, stating therein that she “hereby amends her motion to suppress by adding the Police Reports attached hereto as Exhibit 1 and Exhibit 2 showing no probable cause to search Defendant’s vehicle.”
Label: No Factor

Sentence 15: The police reports included detailed facts showing the circumstances surrounding the stop, search, and seizure.
Label: No Factor

Sentence 16: Jones did not otherwise state or discuss the facts in the amended motion.
Label: No Factor

Sentence 17: While we do not intend to encourage the type of draftsmanship used by the movant in this case and, in fact, we point out that counsel ran the very real risk of the motion not being adequate, we agree with the trial court that it was sufficient.
Label: No Factor

Sentence 18: Reports attached to the motion show the details of the search, including the date and location of the search, the identity of the person searched, the number of officers making the search, the identity of the material seized, the fact that the search was conducted without a warrant, the fact that Jones did not consent to the search, and the basis for and circumstances surrounding the stop.
Label: No Factor

Sentence 19: The motion includes the conclusion that there was no probable cause for the search.
Label: No Factor

Sentence 20: Jones’ motion was sufficient to put the state on notice as to the type of search involved (without warrant versus with warrant), which witnesses to bring to the hearing on the motion, and the legal issues to be resolved at the hearing.
Label: No Factor

Sentence 21: The trial court did not err in considering the motion.
Label: No Factor

Sentence 22: The state contends the motion should not have been granted because the detention was reasonable and because police had probable cause to search Jones’ car.
Label: No Factor

Sentence 23: We find that the detention was not a brief investigative stop but a full-blown arrest, requiring probable cause.
Label: No Factor

Sentence 24: Moreover, we find that the arrest and subsequent search were not supported by probable cause.
Label: No Factor

Sentence 25: When faced with a motion to suppress evidence based on an illegal search, the state has the burden to prove the lawfulness of the search.
Label: No Factor

Sentence 26: On appeal, we view the evidence in a light most favorable to the trial court’s ruling.
Label: No Factor

Sentence 27: Absent evidence demanding a finding contrary to the trial court’s determination, we will not reverse the grant of a motion to suppress.
Label: No Factor

Sentence 28: A police officer testified that he had been notified by another officer to be on the lookout for a certain vehicle because the driver would be transporting drugs to Syntec Industries, which was the driver’s place of work.
Label: Suspicious Communications Device

Sentence 29: The officer saw the car and started following it.
Label: No Factor

Sentence 30: After following the car for awhile, the officer estimated that the driver was traveling about 15 mph over the speed limit.
Label: No Factor

Sentence 31: He initiated a traffic stop, and Jones, the car’s driver and owner, pulled into the Syntec parking lot and parked her car.
Label: No Factor

Sentence 32: Jones got out of her car and asked the officer “what the problem was.”
Label: No Factor

Sentence 33: The officer replied that Jones was speeding and that the county decal on her license plate was obscured.
Label: Vehicle License Plate or Registration

Sentence 34: Jones told the officer that she was running late and needed to go to work.
Label: No Factor

Sentence 35: The officer explained to Jones that he was going to just give her a written warning for the tag violation and a verbal warning for speeding.
Label: No Factor

Sentence 36: As the officer was filling out the written warning form, Jones, without being asked, told the officer that she used to have a drug problem, but that she no longer used drugs.
Label: Legal Indications of Drug Use

Sentence 37: The officer then asked if he could search her car for drugs.
Label: Refused Consent

Sentence 38: Jones said he could not.
Label: No Factor

Sentence 39: Jones kept telling the officer that she needed to get to work and that he could search the car when she was gone.
Label: No Factor

Sentence 40: The officer told her that she needed to be there during any search of the car.
Label: No Factor

Sentence 1: In response, Jones remarked that the officer would have to get a warrant.
Label: No Factor

Sentence 2: The officer then directed Jones to stand next to the car, which she did.
Label: No Factor

Sentence 3: Jones kept moving around, saying she needed to go to work.
Label: Furtive Movement

Sentence 4: The officer told her to “quit moving around so much and stay in one spot.”
Label: No Factor

Sentence 5: A drug dog and accompanying canine officer had arrived on the scene three minutes after the officer stopped the car, but it was police department policy to have a supervising officer on the scene before a K-9 free-air search for drugs could be conducted.
Label: No Factor

Sentence 6: The officer made Jones wait for a supervisor to arrive.
Label: No Factor

Sentence 7: The officer testified that he detained Jones based on her nervous demeanor, her statement about drug use, and information he had that she might be transporting drugs.
Label: Nervous Behavior or Appearance, Suspicious or Inconsistent Answers

Sentence 8: The trial judge watched a videotape of the incident and concluded that Jones did not seem particularly nervous, just concerned about the time and anxious to get to work.
Label: Nervous Behavior or Appearance

Sentence 9: The canine officer, who was also the officer who relayed information to the arresting officer about the lookout for Jones’ car, testified that he had information that “a certain white female named Stephanie Jones should be [in] a vehicle, a white vehicle approximately ‘90s model vehicle, which is going to be a Toyota Corolla.
Label: No Factor

Sentence 10: She should be en route to Westend — Westside Industrial Boulevard on the date in question,” and “possibly” had illegal drugs in the car.
Label: No Factor

Sentence 11: He relayed this information to the arresting officer.
Label: No Factor

Sentence 12: The canine officer did not know how police got the information that Jones was possibly transporting drugs.
Label: No Factor

Sentence 13: The canine officer testified that he was in the area at the time of the stop and overheard the arresting officer’s transmission indicating that he was stopping Jones’ car.
Label: No Factor

Sentence 14: He arrived on the scene in about three minutes and waited there approximately fifteen to twenty minutes before he began the canine search of Jones’ car.
Label: No Factor

Sentence 15: In deciding the legality of this warrantless search, we must first determine if the police detention of Jones was a mere investigative stop or a full-blown arrest.
Label: No Factor

Sentence 16: There is no “bright line” rule or rigid time limitation which can be used in determining whether the detention of a person constitutes a mere investigative stop requiring only an articulable suspicion or an arrest requiring the existence of probable cause at its inception.
Label: No Factor

Sentence 17: As much as a “bright line” rule would be desirable, in determining whether a detention is reasonable, common sense and ordinary human experience must govern over rigid criteria.
Label: No Factor

Sentence 18: Considerations include whether there was a swiftly developing situation and whether the officer diligently pursued a means of investigation that was likely to confirm or dispel his suspicions quickly, during which time it was necessary to detain the defendant.
Label: No Factor

Sentence 19: An investigative detention must last no longer than necessary to effectuate the purpose of the stop, and the investigative methods employed should be the least intrusive means reasonably available.
Label: No Factor

Sentence 20: Decided August 31, 2000.
Label: No Factor

Sentence 21: Tambra P. Colston, District Attorney, John F. McClellan, Jr., Assistant District Attorney, for appellant.
Label: No Factor

Sentence 22: In this case, the detention was more than a mere investigative stop requiring only reasonable suspicion.
Label: No Factor

Sentence 23: Jones had arrived at work, parked her car, and was attempting to report for work.
Label: No Factor

Sentence 24: She told the officer she was late for work and that he could search her parked car while she was at work.
Label: Suspicious or Inconsistent Answers

Sentence 25: Thus, there was no rapidly developing situation which would justify detaining Jones.
Label: No Factor

Sentence 26: Furthermore, since the drug dog and his handler were already on the scene, despite any departmental rule to the contrary, police could have conducted the free-air search while the officer was issuing warnings for the traffic offenses.
Label: No Factor

Sentence 27: Such a procedure would have quickly confirmed or dispelled the officer’s suspicions.
Label: No Factor

Sentence 28: The officer acted unreasonably in failing to recognize or pursue the less intrusive means of accomplishing his objective.
Label: No Factor

Sentence 29: We agree with the trial court that, in requiring Jones to wait for the supervisor to arrive before the free-air search began, police detained Jones longer than was necessary and effected more than just a brief investigative stop.
Label: No Factor

Sentence 30: Jones’ detention constituted an arrest, and, for the arrest to be legal, it was necessary for the officer to have had probable cause to arrest her at the moment the arrest was made.
Label: No Factor

Sentence 31: He did not have probable cause at the moment of arrest.
Label: No Factor

Sentence 32: The information possessed by the officer at the time of the arrest — that Jones appeared to be nervous, perhaps because she was late for work, that she had used drugs in the past but had stopped, and that police had very general information from an unknown or at least undisclosed source that Jones was “possibly” transporting drugs — may have established reasonable suspicion to briefly detain her, but it certainly did not establish probable cause to arrest Jones or search her car and purse.
Label: Nervous Behavior or Appearance, Suspicious or Inconsistent Answers

Sentence 33: Inasmuch as there is a substantial basis for the trial court’s decision, we affirm the grant of the motion to suppress.
Label: No Factor

Sentence 34: Judgment affirmed.
Label: No Factor

Sentence 35: Smith, P. J., and Phipps, J., concur.
Label: No Factor

Sentence 36: James A. Satcher, Jr., for appellee.
Label: No Factor

Sentence 37: Hill v. State, 222 Ga. App. 839 (2) (476 SE2d 634) (1996).
Label: No Factor

Sentence 38: Id. at 839-840.
Label: No Factor

Sentence 39: See id. at 840; State v. Barnett, 233 Ga. App. 496, 497 (1) (504 SE2d 531) (1998).
Label: No Factor

Sentence 40: See id.; Hill, supra.
Label: No Factor

Sentence 1: State v. Winnie, 242 Ga. App. 228-229 (529 SE2d 215) (2000).
Label: No Factor

Sentence 2: Id. at 231.
Label: No Factor

Sentence 3: DiSanti v. State, 190 Ga. App. 331, 334 (1) (378 SE2d 729) (1989).
Label: No Factor

Sentence 4: Buck v. State, 239 Ga. App. 828, 830 (522 SE2d 252) (1999).
Label: No Factor

Sentence 5: Roberts v. State, 193 Ga. App. 96, 98 (386 SE2d 921) (1989).
Label: No Factor

Sentence 6: See Alex v. State, 220 Ga. App. 754, 756 (2) (470 SE2d 305) (1996).
Label: No Factor

Sentence 7: DiSanti, supra, citing Schmidt v. State, 188 Ga. App. 85, 87 (372 SE2d 440) (1988); see Migliore v. State of Ga., 240 Ga. App. 783, 786 (525 SE2d 166) (1999).
Label: No Factor

Sentence 8: See DiSanti, supra.
Label: No Factor

Sentence 9: See generally State v. Williams, 242 Ga. App. 34, 36-37 (528 SE2d 554) (2000); Rucker v. State, 199 Ga. App. 854 (406 SE2d 277) (1991).', 
Label: No Factor

Sentence 10: Dissenting/Concuring: 'Not Available', Dissenting/Concuring 2: 'Not Available', Dissenting/Concuring 3: 'Not Available'
Label: No Factor

