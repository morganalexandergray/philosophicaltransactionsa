Sentence 1: Case Name:  'State of Wisconsin, Plaintiff-Respondent, v. Christopher E. Betow, Defendant-Appellant'
Label: No Factor

Sentence 2: Citation:  '226 Wis. 2d 90',     Court Name:  'Wisconsin Court of Appeals'
Label: No Factor

Sentence 3: Decision Date YYYY-MM-DD:  '1999-03-25'
Label: No Factor

Sentence 4: ID No. :  11500131,     'EICH, J.
Label: No Factor

Sentence 5: Christopher Betow appeals from a judgment convicting him of possession of marijuana with intent to deliver.
Label: No Factor

Sentence 6: He pled no contest to the charge after the circuit court denied his motion to suppress evidence seized by police at the time of his arrest.
Label: No Factor

Sentence 7: The sole issue on appeal is whether, at that time, the arresting officer had a reasonable suspicion that Betow had controlled substances in his possession, so as to justify detaining him for further investigation.
Label: No Factor

Sentence 8: We conclude that Betow's continued detention was not warranted on the facts available to the officer, and we therefore reverse.
Label: Suspicion Not Found

Sentence 9: The facts are not in dispute.
Label: No Factor

Sentence 10: Betow was stopped by City of Beaver Dam Police Officer Michael Steffes for speeding — driving sixty-nine miles per hour in a fifty-five zone.
Label: No Factor

Sentence 11: When approached by Steffes, Betow said he thought the speed limit in the area was sixty-five, and he "appeared nervous."
Label: Nervous Behavior or Appearance

Sentence 12: When Betow produced his drivers license, Steffes noticed that his wallet had "a picture of a mushroom" sewn on it.
Label: No Factor

Sentence 13: A computer check by Steffes revealed that Betow's license was valid and the car he was driving belonged to his father, and Betow told him he was returning to his home in Appleton after driving a friend to Madison.
Label: No Factor

Sentence 14: The State does not suggest that any evidence of intoxicated driving or any offense other than the alleged speed-limit violation existed at this point.
Label: No Factor

Sentence 15: Steffes did not write a speeding citation for Betow, but asked him how he came to have a wallet with a picture of a mushroom on it.
Label: No Factor

Sentence 16: Betow replied that he bought the wallet because it had a chain on it, "it looked neat," and he "liked [it]."
Label: No Factor

Sentence 17: Steffes then told Betow that, based on his experience in Beaver Dam, he considered mushrooms to be symbols of drug use, and asked Betow's permission to search his car — presumably with the aid of a trained "K-9" police dog Steffes was working with that evening.
Label: Suspicious Storage

Sentence 18: Betow refused, explaining that he was tired and wanted to get home, and didn't want to have his trip delayed.
Label: Refused Consent

Sentence 19: Betow did consent to a search of his person, however.
Label: No Factor

Sentence 20: Steffes "patted him down," finding no drugs, weapons or other contraband.
Label: No Factor

Sentence 21: Steffes then decided to detain Betow so he could have the dog assist in a search of his automobile.
Label: No Factor

Sentence 22: After the dog made several passes around the car and apparently sniffed through the open window, its reactions were such as to cause Steffes to believe-that drugs were either in the car, or had been at some prior time.
Label: No Factor

Sentence 23: After more questioning, and more sniffing by the dog, Steffes placed the dog inside Betow's car, where it eventually located a packet of marijuana.
Label: Vehicle Contents Suggest Drugs

Sentence 24: In denying Betow's motion to suppress evidence of the marijuana, the circuit court said it was premising its decision — in the court's words "hanging [its entire] analysis" — on "this mushroom that's on the wallet."
Label: No Factor

Sentence 25: According to the court, the picture of the mushroom on Betow's wallet, in and of itself, provided "a reasonable suspicion sufficient to justify [his] further detention" by Officer Steffes.
Label: No Factor

Sentence 26: In reviewing a denial of a motion to suppress evidence, we will uphold the circuit court's findings of fact unless they are clearly erroneous.
Label: No Factor

Sentence 27: State v. Young, 212 Wis. 2d 417, 424, 569 N.W.2d 84, 88 (Ct. App. 1997).
Label: No Factor

Sentence 28: Whether a stop or detention meets statutory and constitutional standards, however, is a question of law subject to de novo review.
Label: No Factor

Sentence 29: There is no question that a police officer may stop a vehicle when he or she reasonably believes the driver is violating a traffic law; and, once stopped, the driver may be asked questions reasonably related to the nature of the stop — including his or her destination and purpose.
Label: No Factor

Sentence 30: United States v. Johnson, 58 F.3d 356, 357 (8th Cir.), cert. denied, 116 S. Ct. 348 (1995).
Label: No Factor

Sentence 31: Such a stop and detention is constitutionally permissible if the officer has an "articulable suspicion that the person has committed or is about to commit [an offense]."
Label: Suspicion Found

Sentence 32: State v. Goyer, 157 Wis. 2d 532, 536, 460 N.W.2d 424, 425-26 (Ct. App. 1990).
Label: No Factor

Sentence 33: The key is the "reasonable relationship" between the detention and the reasons for which the stop was made.
Label: No Factor

Sentence 34: If such an "articulable suspicion" exists, the person may be temporarily stopped and detained to allow the officer to "investigate the circumstances that provoke suspicion," as long as "[t]he stop and inquiry [are] reasonably related in scope to the justification for their initiation."
Label: No Factor

Sentence 35: Berkemer v. McCarty, 468 U.S. 420, 439 (1984) (internal quotation marks omitted).
Label: No Factor

Sentence 36: Stated another way, the scope of questions asked during an investigative stop must bear a reasonable relationship to the reasons for which the stop was made in the first place.
Label: No Factor

Sentence 37: United States v. Brignoni-Ponce, 422 U.S. 873, 881 (1975).
Label: No Factor

Sentence 38: Once a justifiable stop is made — as is the case here — the scope of the officer's inquiry, or the line of questioning, may be broadened beyond the purpose for which the person was stopped only if additional suspicious factors come to the officer's attention — keeping in mind that these factors, like the factors justifying the stop in the first place, must be "particularized" and "objective."
Label: No Factor

Sentence 39: United States v. Perez, 37 F.3d 510, 513 (9th Cir. 1994).
Label: No Factor

Sentence 40: If, during a valid traffic stop, the officer becomes aware of additional suspicious factors which are sufficient to give rise to an articulable suspicion that the person has committed or is committing an offense or offenses separate and distinct from the acts that prompted the officer's intervention in the first place, the stop may be extended and a new investigation begun.
Label: Suspicion Found

Sentence 1: The validity of the extension is tested in the same manner, and under the same criteria, as the initial stop.
Label: No Factor

Sentence 2: The State focuses its argument for affirmance on Steffes's observation of the mushroom picture on Betow's wallet, emphasizing his testimony that, in his three-plus years of experience as a Beaver Dam police officer, "several people will use mushrooms to show their use of narcotics," and that "[a] mushroom is also a hallucinogen — can be used as a hallucinogen."
Label: Motorist's Appearance Related to Drug Use or Sale

Sentence 3: The argument, in the State's words, is that    [blecause some people signal!
Label: No Factor

Sentence 4: ] their use of drugs by displaying a mushroom symbol, it was possible that Betow was sending the same signal by having a picture of a mushroom [on] his wallet.
Label: Motorist's Appearance Related to Drug Use or Sale

Sentence 5: And that possibility gave [Officer Steffes] a specific articulable reason to at least suspect that Betow might be a drug user.
Label: Legal Indications of Drug Use

Sentence 6: We agree with Betow that Steffes's knowledge that "some people" may regard a representation of a mushroom as an emblem of their use of hallucinogens is inadequate to support Betow's continued detention in this case — especially when, at the time he made the decision to extend the detention, Steffes had absolutely no evidence that Betow was "using" hallucinogenic or other drugs on the evening in question (or at any other time).
Label: Suspicion Not Found

Sentence 7: Citing State v. Morgan, 197 Wis. 2d 200, 539 N.W.2d 887 (1995), the State points to two other factors which it says confirms the reasonableness of Steffes's extension of the stop: (a) the fact that Betow was stopped late in the evening "makes it more likely that criminal activity [was] afoot"; and (b) when stopped, Betow "appeared to be nervous."
Label: Driver Status, Nervous Behavior or Appearance

Sentence 8: With respect to the evening hours, Morgan held that the late-night hour was a factor supporting the officer's decision to conduct a pat-down search for weapons; and we agree with Betow that the fact that courts may be more willing to permit police officers, in aid of their own safety, to search suspects for weapons after dark does not mean that all late-night stops and searches are equally justifiable.
Label: No Factor

Sentence 9: The State has not referred us to any case that stands for the proposition that drugs are more likely to be present in a car at night than at any other time of day.
Label: No Factor

Sentence 10: As for Betow's appearing nervous when Steffes pulled him over, not only did Steffes himself acknowledge that "people react differently" when stopped by police on the highway, but the State concedes in its brief that "a suspect may be nervous simply because he has been stopped by the police."
Label: Nervous Behavior or Appearance

Sentence 11: Finally, the officer in Morgan testified that the defendant "was more nervous than the typical person," id. at 215, 539 N.W.2d at 894, and no assertion is made in this case that Betow's nervousness was unusual or in any way out of the ordinary.
Label: Nervous Behavior or Appearance

Sentence 12: The State next seizes upon the fact that Betow was coining from Madison, which it describes as "a city regrettably well known as a place where drugs may readily be obtained."
Label: Possible Drug Route

Sentence 13: The State has not referred us to any evidence of record to support such an assertion, and we need not consider it further.
Label: No Factor

Sentence 14: See Dieck v. Antigo Sch. Dist., 157 Wis. 2d 134, 148 n.9, 458 N.W.2d 565, 571 (Ct. App. 1990) (appellate court does not consider arguments based on factual assertions that are unsupported by references to the record).
Label: No Factor

Sentence 15: Finally, the State says that Steffes's decision to extend Betow's detention was justified because his "story" — that he had driven a friend to Madison and was returning home to Appleton — was "implausible" because of the lateness of the hour.
Label: Unusual Travel Plans

Sentence 16: According to the State, the relatively short distance between Madison and Beaver Dam, where Betow was stopped, "would mean that [he dropped his friend off] well after midnight on a Monday morning ... an unlikely time to initiate a visit."
Label: Unusual Travel Plans

Sentence 17: We agree with the State that a suspect's inadequate explanation for conduct can provide the basis for a suspicion that "he is up to no good."
Label: Suspicious or Inconsistent Answers

Sentence 18: Here, too, however, we have not been directed to any place in the record that would indicate that Betow had dropped his friend off immediately prior to departing for Appleton, or whether they had gone to Madison earlier in the day and Betow had tarried in the capital city after the drop-off.
Label: No Factor

Sentence 19: Because, as we have noted above, the decision to extend a stop is subject to the same criteria as the initial stop, we think State v. Young, 212 Wis. 2d 417, 569 N.W.2d 84 (Ct. App. 1997), is instructive.
Label: No Factor

Sentence 20: In that case, the defendant was stopped and detained by police based on: (1) his presence in "a high drug-trafficking area"; (2) his brief meeting with another individual in that area; and (3) the officer's "experience that drug transactions in this neighborhood take place on the street and involve brief meetings."
Label: Possible Drug Route

Sentence 21: Id. at 433, 569 N.W.2d at 92.
Label: No Factor

Sentence 22: We held that these observations were insufficient to justify an investigatory stop.
Label: Suspicion Not Found

Sentence 23: In so holding, we recognized in Young, as we do here, that conduct which has innocent explanations may also give rise to a reasonable suspicion of criminal activity, and that, in assessing the officer's actions, we should give weight to his or her training and experience, and the knowledge acquired on the job.
Label: No Factor

Sentence 24: Id. at 430, 569 N.W.2d at 91.
Label: No Factor

Sentence 25: Doing so here, as we did in Young, we are similarly unable to discern the required "reasonable suspicion" from "so spare a record."
Label: Suspicion Not Found

Sentence 26: Id. at 430-31, 569 N.W.2d at 91.
Label: No Factor

Sentence 27: By the Court. — Judgment reversed.
Label: No Factor

Sentence 28: Betow does not challenge the validity of his initial stop for speeding — only the extended detention and subsequent search.
Label: No Factor

Sentence 29: There is widespread recognition that police awareness of an individual's prior criminal record, or their observation of gang insignia on his or her person, in and of themselves, are insufficient to provide a basis for a reasonable suspicion that would justify stopping and detaining the individual.
Label: No Factor

Sentence 30: See, e.g., State v. Jones, 835 P.2d 863, 866-67 (N.M. App. 1992) (knowledge of gang membership); Robinson v. Florida, 388 So. 2d 286, 290 (Fla. 1st DCA 1980) (person with prior drug arrest observed traveling from a "drug profile target city"); United States v. Feliciano, 45 F.3d 1070, 1074 (7th Cir. 1995) (knowledge of gang association and prior arrest or conviction record); United States v. Sandoval, 29 F.3d 537, 542-43 (10th Cir. 1994) (knowledge of prior criminal involvement and arrest).
Label: Legal Indications of Drug Use

Sentence 31: Not surprisingly, the trial court declined to draw any such inference, despite being requested by the State to do so.
Label: No Factor

Sentence 32: See also, Robinson v. Florida, supra, note 2, where the officer's knowledge of the suspect's prior drug arrest, together with the fact that he was seen disembarking from a flight that had originated in New Orleans, "a drug profile target city," were held inadequate to constitute a reasonable suspicion of criminal activity.
Label: Legal Indications of Drug Use, Possible Drug Route

Sentence 33: Id., 388 So. 2d at 290.
Label: No Factor

Sentence 34: We said in State v. Young, 212 Wis. 2d 417, 569 N.W.2d 84 (Ct. App. 1997), that, while the officer's training and experience is "one factor in the totality of the circumstances that courts take into account in deciding whether there is reasonable suspicion to make the stop," that fact "does not require a court to accept all of [the officer's] suspicions as reasonable, nor does mere experience mean that an [officer's] perceptions are justified by the objective facts."
Label: No Factor

Sentence 35: Id. at 429, 569 N.W.2d at 90.
Label: No Factor

Sentence 36: And we said that, in all cases, "[t]he basis of the police action must be such that it can be reviewed judicially by an objective standard."
Label: No Factor

Sentence 37: Id., citing United States v. Buenaventura-Ariza, 615 F.2d 29, 36 (2nd Cir. 1980).',
Label: No Factor

Sentence 38: Dissenting/Concuring: 'Not Available', Dissenting/Concuring 2: 'Not Available', Dissenting/Concuring 3: 'Not Available'
Label: No Factor

