Sentence 1: Case Name: 'UNITED STATES of America v. Rodney Wesley FRIERSON, Appellant'
Label: No Factor

Sentence 2: Citation: "611 F. App'x 82", Court Name: 'United States Court of Appeals for the Third Circuit'
Label: No Factor

Sentence 3: Decision Date YYYY-MM-DD: '2015-06-02'
Label: No Factor

Sentence 4: ID No. : 4314870, 'OPINION
Label: No Factor

Sentence 5: ROTH, Circuit Judge.
Label: No Factor

Sentence 6: Defendant Rodney Frierson appeals his conviction for conspiracy to possess with the intent to distribute, and possession with intent to distribute, 500 grams or more of cocaine; possession of a firearm in furtherance of drug trafficking; and being a felon in possession of a firearm.
Label: No Factor

Sentence 7: Frier- son argues that the District Court erred by failing to suppress evidence obtained during a detention and frisk, and by denying his motion for new trial.
Label: No Factor

Sentence 8: For the reasons that follow, we will affirm.
Label: No Factor

Sentence 9: At around 10:30 a.m. on January 15, 2010, Pennsylvania State Trooper Justin Hope was positioned at an entrance ramp to the Pennsylvania Turnpike and observed two men in an SUV, with an Ohio license plate, entering the Turnpike.
Label: Vehicle License Plate or Registration, Driver Status

Sentence 10: Hope followed the vehicle and, at around 10:44 a.m., pulled it over for speeding.
Label: No Factor

Sentence 11: Hope later testified that, based on his experience, there were several circumstances making him suspicious that the men might be trafficking drugs.
Label: No Factor

Sentence 12: He noted that (1) there were two people in the vehicle, (2) the vehicle was a rented SUV with an out-of-state license, (3) the driver did not look at him as he passed and had his hands in the “10-and-2 position” on the wheel, (4) it was mid-Friday morning, and (5) the men were driving away from Philadelphia.
Label: Driver Status, Unusual Vehicle Ownership

Sentence 13: Once Hope approached the vehicle, he requested the driver’s license and registration.
Label: No Factor

Sentence 14: Frierson, who was driving the vehicle, handed Hope his California license and an Enterprise rental agreement.
Label: Motorist license or Identification, Unusual Vehicle Ownership

Sentence 15: Angel Anderson, the passenger, also gave Hope a California license and told Hope that he had rented the car.
Label: Motorist license or Identification, Unusual Vehicle Ownership

Sentence 16: Hope noticed three cell phones in the SUV’s center console.
Label: Suspicious Communications Device

Sentence 17: When Hope returned to his vehicle, he ran Frierson and Anderson’s licenses and discovered that Frierson had an extensive criminal history, including convictions for voluntary manslaughter, possession of an assault weapon and body armor, and cocaine possession, transportation, or sale.
Label: Legal Indications of Drug Use

Sentence 18: Hope then contacted his backup, Trooper Luke Straniere, and attempted to locate a K-9 sniffing unit.
Label: No Factor

Sentence 19: Hope also sought information from the El Paso Intelligence Center, which reported Frierson had crossed into Mexico from California four times in 2009.
Label: No Factor

Sentence 20: Hope also reviewed the rental agreement, which had expired over a week earlier and indicated that Anderson was the only authorized driver.
Label: Unusual Vehicle Ownership

Sentence 21: At 11:10 a.m., Straniere arrived.
Label: No Factor

Sentence 22: At this time, Hope approached the SUV again.
Label: No Factor

Sentence 23: Anderson explained that the rental agreement had been extended, and Hope told them that Anderson was going to have to drive the car.
Label: No Factor

Sentence 24: At approximately 11:14 a.m., Straniere confirmed from Enterprise that the rental agreement had been extended and learned that Anderson rented from Enterprise five times in the previous four months.
Label: Unusual Vehicle Ownership

Sentence 25: The officers then approached the SUV and asked Frierson to exit the vehicle.
Label: No Factor

Sentence 26: After Frierson refused to consent to a frisk or respond to questions regarding his criminal history, Straniere patted him down and felt a gun on his right side.
Label: Furtive Movement

Sentence 27: Because Frierson had a felony conviction, he was arrested for being a felon in possession of a firearm.
Label: No Factor

Sentence 28: The troopers later seized 995 grams of cocaine from luggage in the SUV.
Label: Vehicle Contents Suggest Drugs

Sentence 29: Frierson first argues that the extension of the traffic stop violated his rights under the Fourth Amendment.
Label: No Factor

Sentence 30: “A lawful roadside stop begins when a vehicle is pulled over for investigation of a traffic violation.”
Label: No Factor

Sentence 31: The “tolerable duration of police inquiries in the traffic-stop context is determined by the seizure’s ‘mission’ — to address the traffic violation that warranted the stop and attend to related safety concerns.”
Label: No Factor

Sentence 32: Authority for the seizure therefore ends “when tasks tied to the traffic infraction are — or reasonably should have been — completed.”
Label: No Factor

Sentence 33: An officer may, however, expand the scope of a traffic stop and detain the vehicle and its occupants for further investigation if he “develops a reasonable, articula-ble suspicion of criminal activity.”
Label: Suspicion Found

Sentence 34: “While ‘reasonable suspicion’ ” must be more than an inchoate ‘hunch,’ the Fourth Amendment only requires that police articulate some minimal, objective justification for an investigatory stop.”
Label: No Factor

Sentence 35: Courts must consider the totality of the circumstances in light of the officer’s experience.
Label: No Factor

Sentence 36: While “individual factors giving rise to reasonable suspicion may be innocent in isolation, together they ‘must serve to eliminate a substantial portion of innocent travelers.’ ”
Label: No Factor

Sentence 37: Upon initially detaining the men, Hope reasonably addressed the traffic violation that warranted the stop and attended to safety concerns.
Label: No Factor

Sentence 38: For example, any preliminary delay in checking Frierson’s license, registration, and criminal history was justified as part of the stop.
Label: No Factor

Sentence 39: Similarly, it was reasonable for Hope to delay the stop in order to investigate who was authorized to drive the rental car.
Label: No Factor

Sentence 40: Once Hope discovered Frierson’s criminal history, he decided to wait for backup out of concern for his safety in effectuating the traffic stop.
Label: No Factor

Sentence 1: Although Straniere did not arrive until 11:10 a.m., twenty-six minutes into the stop, this delay was not due to Hope’s unreasonable actions but to circumstances beyond his control.
Label: No Factor

Sentence 2: Once Straniere arrived, he and Hope acted reasonably in calling Enterprise to determine whether the rental agreement had been extended.
Label: No Factor

Sentence 3: At this point, Hope had reasonable and articulable suspicion that Frierson and Anderson may have been trafficking drugs, justifying the expansion of the investigation’s scope.
Label: Suspicion Found

Sentence 4: The factors were: (1) the SUV and its occupants were from another state, (2) the SUV was a rental, (3) there were three cell phones in the console, (4)
Label: Vehicle Contents Suggest Drugs

Sentence 5: Frierson had an extensive criminal history, (5)
Label: Legal Indications of Drug Use

Sentence 6: Frierson had crossed into Mexico four times in 2009, and (6)
Label: No Factor

Sentence 7: Anderson had rented five cars in the past four months.
Label: Unusual Vehicle Ownership

Sentence 8: Although some factors are innocent individually, together they eliminate a substantial portion of innocent travelers and therefore give rise to reasonable suspicion.
Label: Suspicion Found

Sentence 9: Frierson next argues that the subsequent frisk was invalid.
Label: No Factor

Sentence 10: An officer may perform a frisk if he has reasonable suspicion that the individual is armed or dangerous based on the totality of the circumstances.
Label: Suspicion Found

Sentence 11: The purpose is “not to discover evidence of a crime, but to allow the officer to pursue his investigation without fear of violence.”
Label: No Factor

Sentence 12: Here, the officers had reasonable suspicion to believe that Frierson was dangerous based on his violent history and on their suspicion that he was engaged in drug trafficking.
Label: Suspicion Found

Sentence 13: Their safety concerns were also justified by Fri-erson’s appearance — specifically, that he wore a loose long-sleeved shirt that extended below his waist.
Label: No Factor

Sentence 14: Accordingly, it was reasonable to conclude that a frisk was necessary to ensure the officers’ safety.
Label: Suspicion Found

Sentence 15: For the foregoing reasons, we will affirm the District Court’s denial of Frier-son’s motion to suppress and motion for a new trial.
Label: No Factor

Sentence 16: This disposition is not an opinion of the full Court and pursuant to I.O.P. 5.7 does not constitute binding precedent.
Label: No Factor

Sentence 17: . "We review a district court’s order denying a motion to suppress under a mixed standard of review.
Label: No Factor

Sentence 18: We review findings of fact for clear error, but we exercise plenary review over legal determinations."
Label: No Factor

Sentence 19: United States v. Lewis, 672 F.3d 232, 236-37 (3d Cir.2012) (internal citation omitted).
Label: No Factor

Sentence 20: We review rulings on admissibility of expert testimony for abuse of discretion, United States v. Gibbs, 190 F.3d 188, 211 (3d Cir.1999), but conduct plenary review over whether the error was harmless, see Arizona v. Fulminante, 499 U.S. 279, 295, 111 S.Ct. 1246, 113 L.Ed.2d 302 (1991).
Label: No Factor

Sentence 21: . Arizona v. Johnson, 555 U.S. 323, 333, 129 S.Ct. 781, 172 L.Ed.2d 694 (2009).
Label: No Factor

Sentence 22: . Rodriguez v. United States, - U.S. -, 135 S.Ct. 1609, 1614, 191 L.Ed.2d 492 (2015) (citing Illinois v. Caballes, 543 U.S. 405, 407, 125 S.Ct. 834, 160 L.Ed.2d 842 (2005)); see Johnson, 555 U.S. at 333, 129 S.Ct. 781.
Label: No Factor

Sentence 23: . Rodriguez, 135 S.Ct. at 1614.
Label: No Factor

Sentence 24: . United States v. Givan, 320 F.3d 452, 458 (3d Cir.2003).
Label: No Factor

Sentence 25: Id.; see United States v. Sokolow, 490 U.S. 1, 13, 109 S.Ct. 1581, 104 L.Ed.2d 1 (1989).
Label: No Factor

Sentence 26: . United States v. Arvizu, 534 U.S. 266, 273, 122 S.Ct. 744, 151 L.Ed.2d 740 (2002).
Label: No Factor

Sentence 27: . United States v. Mathurin, 561 F.3d 170, 174 (3d Cir.2009) (quoting Karnes v. Skrutski, 62 F.3d 485, 493 (3d Cir.1995)).
Label: No Factor

Sentence 28: See Rodriguez, 135 S.Ct. at 1615; see also United States v. Pack, 612 F.3d 341, 350 (5th Cir.2010).
Label: No Factor

Sentence 29: . Accord Rodriguez, 135 S.Ct. at 1615 (concluding that police inquiries meant to “en-sur[e] that vehicles on the road are operated safely and responsibly” are part of an officer's mission in conducting a traffic stop).
Label: No Factor

Sentence 30: See Pennsylvania v. Minims, 434 U.S. 106, 111-13, 98 S.Ct. 330, 54 L.Ed.2d 331 (1977) (per curiam).
Label: No Factor

Sentence 31: . United States v. Gatlin, 613 F.3d 374, 378 (3d Cir.2010) (internal quotations omitted).
Label: No Factor

Sentence 32: See United States v. Binion, 570 F.3d 1034, 1039 (8th Cir.2009); see also United States v. Anderson, 859 F.2d 1171, 1177 (3d Cir.1988).
Label: No Factor

Sentence 33: Frierson also claims that the District Court erred in denying his motion for a new trial, based on DEA Agent Randy Updegraff’s testimony at trial.
Label: No Factor

Sentence 34: Updegraff testified that Frier-son and Anderson were working “in concert” to distribute cocaine and that defendants in another case were "smarter than Frierson.”
Label: No Factor

Sentence 35: Although the first comment opines on Frier-son’s state of mind, see Rule 704(b), Upde-graff gave it in response to defense counsel’s question regarding "this particular case” and therefore was invited error.
Label: No Factor

Sentence 36: See United States v. Murphy, 464 Fed.Appx. 60, 63 (3d Cir.2012).
Label: No Factor

Sentence 37: In any event, any error was harmless in light of the overwhelming evidence against Frierson.',
Label: No Factor

Sentence 38: Dissenting/Concuring:  'Not Available',     Dissenting/Concuring 2:  'Not Available',     Dissenting/Concuring 3:  'Not Available'
Label: No Factor

