Sentence 1: Case Name: 'JACKSON v. THE STATE'
Label: No Factor

Sentence 2: Citation: '296 Ga. App. 565', Court Name: 'Court of Appeals of Georgia'
Label: No Factor

Sentence 3: Decision Date YYYY-MM-DD: '2009-03-11'
Label: No Factor

Sentence 4: ID No. : 12142606, 'Barnes, Judge.
Label: No Factor

Sentence 5: Following a bench trial, Charles Derightous Jackson appeals his conviction for possession of a firearm by a convicted felon, contending that the trial court erred in denying his motion to suppress.
Label: No Factor

Sentence 6: He argues that he was impermissibly detained beyond the scope of the initial stop.
Label: Suspicion Not Found

Sentence 7: For the reasons that follow, we affirm the trial court.
Label: No Factor

Sentence 8: On appeal, Jackson argues that the trial court erred by denying the motion to suppress because the police officer’s testimony was not credible, and he detained Jackson beyond the scope of the initial stop.
Label: Suspicion Not Found

Sentence 9: In reviewing a trial court’s decision on a motion to suppress, this court’s responsibility is to ensure that there was a substantial basis for the decision.
Label: No Factor

Sentence 10: Morgan v. State, 195 Ga. App. 732, 735 (3) (394 SE2d 639) (1990).
Label: No Factor

Sentence 11: When the evidence is uncontroverted and no question of witness credibility is presented, “the trial court’s application of the law to undisputed facts is subject to de novo appellate review.
Label: No Factor

Sentence 12: [Cits.]”
Label: No Factor

Sentence 13: Vansant v. State, 264 Ga. 319, 320 (1) (443 SE2d 474) (1994).
Label: No Factor

Sentence 14: On issues of mixed questions of fact and law, we will accept the trial court’s findings on disputed facts and witness credibility unless they are clearly erroneous, but independently apply the law to the facts.
Label: No Factor

Sentence 15: Morrow v. State, 272 Ga. 691, 693 (1) (532 SE2d 78) (2000).
Label: No Factor

Sentence 16: So viewed, the evidence shows that a state trooper with the Georgia State Patrol stopped Jackson after observing the car Jackson was driving change lanes without signaling.
Label: No Factor

Sentence 17: When the trooper approached the stopped vehicle, Jackson rolled down the passenger window, and the trooper detected the odor of “raw and burnt marijuana.”
Label: Vehicle Contents Suggest Drugs

Sentence 18: The trooper “immediately went to [his] patrol car and contacted [an officer] with the Motor Carriage Compliance Division, who also is a K-9 officer.”
Label: Suspicious Communications Device

Sentence 19: The officer returned to Jackson and “continued getting information, continued with the [traffic] warning.”
Label: No Factor

Sentence 20: The K-9 officer arrived “within a minute or so” while the trooper was writing the warning, and the trooper, at that point, told Jackson about the marijuana smell, and asked him if there were drugs in his car.
Label: Legal Indications of Drug Use

Sentence 21: Jackson denied having drugs in the car, but refused to consent to a search of his car so the canine was deployed for an open-air search around Jackson’s vehicle.
Label: Refused Consent

Sentence 22: The dog alerted and the trooper informed Jackson about the result, after which Jackson informed the officer that he had a gun in the car.
Label: Vehicle Contents Suggest Drugs

Sentence 23: The trooper discovered the loaded firearm during the search, and Jackson also told the officer that he was a convicted felon.
Label: Motorist license or Identification

Sentence 24: At the motion to suppress hearing, Jackson argued that he “should not have been detained any longer than necessary to either write him a warning ticket or a ticket for the change of lane without signaling.”
Label: Suspicion Not Found

Sentence 25: The trial court found that the lingering odor of marijuana provided “probable cause for a search.
Label: Vehicle Contents Suggest Drugs

Sentence 26: The K-9 unit arrived without any inordinate delay and did alert, offering probable cause for the search.”
Label: Suspicion Found

Sentence 27: When undertaking a traffic stop, an officer has certain restrictions regarding the scope of the detention.
Label: No Factor

Sentence 28: “The scope of the detention must be carefully tailored to its underlying justification.”
Label: No Factor

Sentence 29: Florida v. Royer, 460 U. S. 491, 500 (II) (103 SC 1319, 75 LE2d 229) (1983).
Label: No Factor

Sentence 30: This Court has held, if an officer continues to detain the subject after the conclusion of the traffic stop and interrogates him or seeks consent to search without reasonable suspicion of criminal activity, the officer has exceeded the scope of a permissible investigation of the initial traffic stop.
Label: Suspicion Not Found

Sentence 31: (Citation and punctuation omitted; emphasis in original.)
Label: No Factor

Sentence 32: Faulkner v. State, 256 Ga. App. 129, 130 (567 SE2d 754) (2002).
Label: No Factor

Sentence 33: However, questioning unrelated to the purpose of an initial stop is proper so long as it does not prolong the duration of the same.
Label: No Factor

Sentence 34: Salmeron v. State, 280 Ga. 735 (1) (632 SE2d 645) (2006).
Label: No Factor

Sentence 35: Here, the evidence shows that the trooper smelled marijuana, immediately contacted a K-9 unit, and proceeded with issuing the citation.
Label: Legal Indications of Drug Use

Sentence 36: The trooper testified that the K-9 unit arrived “within a minute” from the time that Jackson was pulled over.
Label: No Factor

Sentence 37: When the drug dog alerted on Jackson’s car, the traffic stop was still in progress.
Label: Suspicion Found

Sentence 38: Moreover, [t]he odor of burning marijuana emanating from the interior of an occupied vehicle provides a strong indication that the vehicle contains illegal contraband.
Label: Vehicle Contents Suggest Drugs

Sentence 39: We previously have found the “alert” of a trained narcotics dog, standing alone, sufficient to provide probable cause for the search of a vehicle.
Label: Suspicion Found

Sentence 40: [A] trained police officer’s perception of the odor of burning marijuana, provided his ability to identify that odor is placed into evidence, [also] constitutes sufficient probable cause to support the warrantless search of a vehicle.
Label: Vehicle Contents Suggest Drugs

Sentence 1: Decided March 11, 2009.
Label: No Factor

Sentence 2: Rebecca B. Paris, for appellant.
Label: No Factor

Sentence 3: T. Joseph Campbell, District Attorney, Sharon M. Fox, Assistant District Attorney, for appellee.
Label: No Factor

Sentence 4: State v. Folk, 238 Ga. App. 206, 209 (521 SE2d 194) (1999).
Label: No Factor

Sentence 5: Thus, in this case, when the trooper smelled the burnt marijuana, he had probable cause, independent of the K-9 alert, to search Jackson’s car.
Label: Vehicle Contents Suggest Drugs

Sentence 6: See Williams v. State, 273 Ga. App. 637, 640 (3) (615 SE2d 789) (2005).
Label: No Factor

Sentence 7: Judgment affirmed.
Label: No Factor

Sentence 8: Johnson, P. J., and Phipps, J., concur.',
Label: No Factor

Sentence 9: Dissenting/Concuring: 'Not Available', Dissenting/Concuring 2: 'Not Available', Dissenting/Concuring 3: 'Not Available'
Label: No Factor

