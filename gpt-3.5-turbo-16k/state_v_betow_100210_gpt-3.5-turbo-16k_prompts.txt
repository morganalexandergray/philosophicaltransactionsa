TASK
In this task, we are attempting to label sentences to assess whether they contain important information.  These facts are tied to a specific legal problem which we have described below: 

-START LEGAL PROBLEM EXPLANATION-
We are interested in highway drug-interdiction. This occurs when a motorist is stopped by police for violating a traffic law and is subsequently detained based on an officer’s reasonable suspicion that the motorist is trafficking or possessing drugs.
An example of drug interdiction: John Smith, a motorist, is driving down interstate 95 in Miami Dade County, Florida with a brake light out and an occluded license plate. Officer Brown, who has been following Mr. Smith, initiates a traffic stop due to the light and the license plate. After Mr. Smith pulls over, Officer Brown observes Mr. Smith is moving around and appears to be reaching under his seat. After approaching the vehicle, Officer Brown notices that Mr. Smith is more nervous that someone would usually be when stopped for a traffic offense. He notices that Mr. Smith is sweating, shaking, and avoiding eye contact. Mr. Smith hands Officer Brown his license and registration, and vehicle rental agreement, which shows that Mr. Smith rented the vehicle in Philadelphia, and the car is due back there in 1 day. Officer Brown notices two cellphones in the center console, 1 prepaid, and 1 iPhone; he sees numerous cans of Redbull, and McDonald’s bags strewn about the vehicle; he notices a number of air fresheners hanging from the rearview mirror; he sees that instead of placing his luggage in the trunk, Mr. Smith has kept a small amount of luggage in the rear of the vehicle. Officer Brown asks Mr. Smith where he is coming from and where he is going. Mr. Smith states that he is coming from Washington D.C. and is headed to Arkansas to see family. When Officer Smith asks why, if he was headed to Arkansas to see family, he was in Miami, Mr. Smith states that he is actually seeing his girlfriend, who he cannot name, in Miami, before heading west to Arkansas to see his family. Based on the foregoing, Officer Brown believes that Mr. Smith is actually trafficking drugs, and detains him for 20 minutes until a drug dog can complete an open air sniff of the vehicle. Upon completion of the sniff, the dog indicates that there are drugs in the trunk of the vehicle. After opening the trunk, Officer Brown seizes 5kg of cocaine from the vehicle. Mr. Smith is arrested, and subsequently charged.
The legal question presented from these facts is whether Officer Brown had reasonable suspicion based upon articulable facts (his observations) that criminal activity was afoot. If so, then he could detain Mr. Smith for the time necessary to complete a canine sniff of the vehicle. If not, Mr. Smith’s constitutional rights have been violated due to the detention. We will be annotating cases that present the same legal problem. Although the facts (factors) of each case will be different to some degree (small or great), this is the legal problem that must be examined. There are certain kinds of facts that we are interested in identifying. Below we refer to these facts as factors.
-END LEGAL PROBLEM EXPLANATION-

-START INSTRUCTIONS-
YOU will assess sentences to and determine whether they belong to any of the following categories based on the content of the sentence and the descriptions below: 

1. Furtive Movement - Use this label if the driver or passenger in the vehicle makes a suspicious movement, such as reaching beneath a seat, or in a purse or bag, or around a waistband, or in a pocket, which is commonly an attempt to conceal contraband or a weapon.  This also includes attempting to evade custody such as taking a long time to pull the vehicle over.  Simple driving mistakes do not count under this factor.
2. Nervous Behavior or Appearance - Use this label if the motorist appears to be nervous, has shaking hands or a heavy heartbeat, or is sweating even though the temperature is cool.  Also use this label if the the motorist behaves in a nervous way, avoids making eye contact with the officer, focuses on a bag or compartment in the car, appears to be agitated, confronts the officer, gives the officer a curt response, volunteers too much information, or behaves in an overly friendly way toward the officer. 
3. Suspicious or Inconsistent Answers - Use this label if the driver made an answer to an officer that is evasive, nonsensical, inconsistent, contradictory, impossible, vague, incomplete, unusual, or untruthful.
4. Motorist license or Identification - Use this label if the motorist cannot provide the officer with a license or identification or if the license is invalid, revoked, fake, the wrong color, flimsy, or in someone else’s name. 
5. Driver Status - Use this label only if the driver of the vehicle is male, young, or not from the state in which the officer pulled the car over. 
6. Refused Consent - Use this label if the driver refused to consent to the officer’s request to search the automobile.
7. Legal Indications of Drug Use - Use this label if the motorist has an active arrest warrant for a drug related charge or if the motorist has been arrested for or convicted of a drug related offense in the past or if the officer knows that the motorist has abused, possessed, dealed, or trafficked in drugs in the past. 
8. Motorist's Appearance Related to Drug Use or Sale - Use this label if driver looks like they USE DRUGS such as needle track marks, rotten teeth, scabbing, bloodshot eyes, dilated pupils, unwashed hair, dirty clothes, body odor or dirty skin or if the driver is wearing suspicious clothing, such as expensive jewelry, expensive or luxury clothing, or clothing with images of drugs (e.g., marijuana leaves).
9. Possible Drug Route - Use this label if the driver’s route is from or to a city or area, which is known for drug trafficking or high crime rates, or if the driver stops the vehicle late at night or early in the morning in an area known for criminal activity. 
10. Unusual Travel Plans - Use this label if the motorist appears to be headed to a location that the motorist has already passed, is traveling on a road that does not lead to the stated destination, plans a trip that is too far to drive in a reasonable time (e.g., driving from Philadelphia to Miami in a single night), claims to be driving a long round trip in a one-day rental vehicle, or has other unusual travel plans.
11. Expensive Vehicle - Use this label if the motorist is driving a kind of vehicle associated with illicit drug use or trafficking such as a luxury or expensive vehicle, e.g., a BMW, Mercedes, Cadillac, or Range Rover.
12. Vehicle License Plate or Registration - Use this label if the vehicle's license plate is missing, shielded from view, or from out of state, or if the license plate or vehicle registration has expired.
13. Unusual Vehicle Ownership - Use this label if the vehicle is rented or if the vehicle is owned by someone not in the vehicle, unknown to the driver, or about whom the driver knows very little or claims to be a distant relative. 
14. Indicia of Hard Travel - Use this label if the motorist has been driving a great distance for a long time and is attempting to make as few stops as possible, or if the vehicle contained fast-food bags, lots of trash, energy drinks or substances designed to keep the consumer awake, such as Redbull, Five-Hour Energy, or Energize Capsules. 
15. Masking Agent - Use this label if the vehicle contained a substance or product used to mask the odor of drugs such as air fresheners (e.g., Little Trees, Febreze, Glade, etc.), scented dryer sheets or baby wipes, or strongly smelling tobacco products, cigars or cigarettes or other strong smells.
16. Vehicle Contents Suggest Drugs - This label SHOULD NOT be used for anything found after a canine has sniffed the car. Use this label if the vehicle smells of drug use (e.g., smells of raw or burnt marijuana or of chemicals such as meth or heroin) or contains drugs in plain view, or items used to ingest or use drugs such as pipes, syringes, needles, lighters, torches, drug paraphernalia, cigarette rolling papers (e.g., Raw or ZigZag brand rolling papers), marijuana cigarettes, joints, or blunts, vials, prescription bottles, or small glass containers used to hold drugs.  This label also applies if there are large amounts of cash or large bill denominations (e.g., $100 bills).
17. Suspicious Communications Device - Use this label if the officer observes suspicious communications devices such as multiple cell phones or a prepaid burner phone. 
18. Suspicious Storage - Use this label if only a small amount of luggage is visible given the stated nature of the trip, if the luggage is stored in the back of the cab instead of the trunk, if the vehicle has an unusual or secret storage compartment  or a car window that will not go down.
29. Suspicion Found - Use this label if the court deciding the case concludes, based on the facts present in the case, that the officer had reasonable suspicion to detain the suspect. 
20. Suspicion Not Found - Use this label if the court deciding the case concludes, based on the facts present in the case, that the officer did not have reasonable suspicion to detain the suspect.
21. No Factor - If none of the factors apply or the court is citing or quoting a legal rule, select this option.

You are also to follow these specific rules:

Typically, a sentence will describe a single factor, however, in some cases, a single sentence may include more than one factor.  If a sentence describes more than one factor, give a label for each factor in the sentence. 

Here are some specific rules you should follow:

1. Precepts or rules of law described by the court should not be labelled.  For example: "A police officer may extend the detention beyond the scope of a routine traffic stop if the driver consents or the officer has reasonable suspicion of criminal activity. Id. at 336."

2. The data is in the form of an appellate court opinion.  Conclusions reached by a lower or a trial court should not be labelled.  Sample language would be "The district court concluded that the officer had probable cause for the search".

3. The charges before the court are not to be considered Legal Indications of Drug Use.  For example: "The defendant is charged with possession with intent to distribute," should not be labeled.  However, "A record check revealed that the motorist had a conviction for drug possession" should be labelled as Legal Indication of Drug Use.

4. A sentence may be from a concurring or dissenting opinion. Do not annotate concurring or dissenting opinions even if they contain sentences describing factors.

5. Arguments by the parties should never be treated as a factor.  For example: "Gray argues that there was not reasonable suspicion for a prolonged detention".  Because this describes an argument, it is not a fact. Common words for argument are challenges, maintains, proffers, alleges. 

6. Sentences that contain solely a legal citation should be labelled as No Factor.  For example: "United States v. Oliver, 343 U.S. 900 (2019)"

7. Statements that describe a legal issue are not a factor.  For example: "The question before the court is whether the officer had reasonable suspicion to detain the motorist?"

8. Officer testimony can support the finding of a factor. 

You should apply a label for each sentence. Here are some examples: 

1. Sentence: Officer Guthrie testified that while the above exchanges were taking place, he noticed that the driver, Arturo Tapia, seemed nervous, and that his hands were shaking.
Label: Physical Appearance of Nervousness

2. Sentence: Upon reviewing the vehicle's documentation, Trooper Conrad discovered that the vehicle belonged to an absent third party, which, in his experience, raised his suspicion that the vehicle was being used for drug trafficking.
Label: Unusual Vehicle Ownership

3. Sentence: Typically, in my training and experience, the overwhelming smell of air fresheners in a rental vehicle is consistent with trying to mask the odor of controlled substances.
Label: Masking Agent, Unusual Vehicle Ownership
-END INSTRUCTIONS-

-START LABELLING-

-EXPECTED OUTPUT-
Sentence [Number]: [Sentence [number] contents]
Label: [label for sentence [number]]

Label the following sentences individually: 

Sentence 1: Case Name:  'State of Wisconsin, Plaintiff-Respondent, v. Christopher E. Betow, Defendant-Appellant',
Sentence 2: Citation:  '226 Wis. 2d 90',     Court Name:  'Wisconsin Court of Appeals', 
Sentence 3: Decision Date YYYY-MM-DD:  '1999-03-25', 
Sentence 4: ID No. :  11500131,     'EICH, J.
Sentence 5: Christopher Betow appeals from a judgment convicting him of possession of marijuana with intent to deliver.
Sentence 6: He pled no contest to the charge after the circuit court denied his motion to suppress evidence seized by police at the time of his arrest.
Sentence 7: The sole issue on appeal is whether, at that time, the arresting officer had a reasonable suspicion that Betow had controlled substances in his possession, so as to justify detaining him for further investigation.
Sentence 8: We conclude that Betow\'s continued detention was not warranted on the facts available to the officer, and we therefore reverse.
Sentence 9: The facts are not in dispute.
Sentence 10: Betow was stopped by City of Beaver Dam Police Officer Michael Steffes for speeding — driving sixty-nine miles per hour in a fifty-five zone.
Sentence 11: When approached by Steffes, Betow said he thought the speed limit in the area was sixty-five, and he "appeared nervous."
Sentence 12: When Betow produced his drivers license, Steffes noticed that his wallet had "a picture of a mushroom" sewn on it.
Sentence 13: A computer check by Steffes revealed that Betow\'s license was valid and the car he was driving belonged to his father, and Betow told him he was returning to his home in Appleton after driving a friend to Madison.
Sentence 14: The State does not suggest that any evidence of intoxicated driving or any offense other than the alleged speed-limit violation existed at this point.
Sentence 15: Steffes did not write a speeding citation for Betow, but asked him how he came to have a wallet with a picture of a mushroom on it.
Sentence 16: Betow replied that he bought the wallet because it had a chain on it, "it looked neat," and he "liked [it]."
Sentence 17: Steffes then told Betow that, based on his experience in Beaver Dam, he considered mushrooms to be symbols of drug use, and asked Betow\'s permission to search his car — presumably with the aid of a trained "K-9" police dog Steffes was working with that evening.
Sentence 18: Betow refused, explaining that he was tired and wanted to get home, and didn\'t want to have his trip delayed.
Sentence 19: Betow did consent to a search of his person, however.
Sentence 20: Steffes "patted him down," finding no drugs, weapons or other contraband.
Sentence 21: Steffes then decided to detain Betow so he could have the dog assist in a search of his automobile.
Sentence 22: After the dog made several passes around the car and apparently sniffed through the open window, its reactions were such as to cause Steffes to believe-that drugs were either in the car, or had been at some prior time.
Sentence 23: After more questioning, and more sniffing by the dog, Steffes placed the dog inside Betow\'s car, where it eventually located a packet of marijuana.
Sentence 24: In denying Betow\'s motion to suppress evidence of the marijuana, the circuit court said it was premising its decision — in the court\'s words "hanging [its entire] analysis" — on "this mushroom that\'s on the wallet."
Sentence 25: According to the court, the picture of the mushroom on Betow\'s wallet, in and of itself, provided "a reasonable suspicion sufficient to justify [his] further detention" by Officer Steffes.
Sentence 26: In reviewing a denial of a motion to suppress evidence, we will uphold the circuit court\'s findings of fact unless they are clearly erroneous.
Sentence 27: State v. Young, 212 Wis. 2d 417, 424, 569 N.W.2d 84, 88 (Ct. App. 1997).
Sentence 28: Whether a stop or detention meets statutory and constitutional standards, however, is a question of law subject to de novo review.
Sentence 29: There is no question that a police officer may stop a vehicle when he or she reasonably believes the driver is violating a traffic law; and, once stopped, the driver may be asked questions reasonably related to the nature of the stop — including his or her destination and purpose.
Sentence 30: United States v. Johnson, 58 F.3d 356, 357 (8th Cir.), cert. denied, 116 S. Ct. 348 (1995).
Sentence 31: Such a stop and detention is constitutionally permissible if the officer has an "articulable suspicion that the person has committed or is about to commit [an offense]."
Sentence 32: State v. Goyer, 157 Wis. 2d 532, 536, 460 N.W.2d 424, 425-26 (Ct. App. 1990).
Sentence 33: The key is the "reasonable relationship" between the detention and the reasons for which the stop was made.
Sentence 34: If such an "articulable suspicion" exists, the person may be temporarily stopped and detained to allow the officer to "investigate the circumstances that provoke suspicion," as long as "[t]he stop and inquiry [are] reasonably related in scope to the justification for their initiation."
Sentence 35: Berkemer v. McCarty, 468 U.S. 420, 439 (1984) (internal quotation marks omitted).
Sentence 36: Stated another way, the scope of questions asked during an investigative stop must bear a reasonable relationship to the reasons for which the stop was made in the first place.
Sentence 37: United States v. Brignoni-Ponce, 422 U.S. 873, 881 (1975).
Sentence 38: Once a justifiable stop is made — as is the case here — the scope of the officer\'s inquiry, or the line of questioning, may be broadened beyond the purpose for which the person was stopped only if additional suspicious factors come to the officer\'s attention — keeping in mind that these factors, like the factors justifying the stop in the first place, must be "particularized" and "objective."
Sentence 39: United States v. Perez, 37 F.3d 510, 513 (9th Cir. 1994).
Sentence 40: If, during a valid traffic stop, the officer becomes aware of additional suspicious factors which are sufficient to give rise to an articulable suspicion that the person has committed or is committing an offense or offenses separate and distinct from the acts that prompted the officer\'s intervention in the first place, the stop may be extended and a new investigation begun.



TASK
In this task, we are attempting to label sentences to assess whether they contain important information.  These facts are tied to a specific legal problem which we have described below: 

-START LEGAL PROBLEM EXPLANATION-
We are interested in highway drug-interdiction. This occurs when a motorist is stopped by police for violating a traffic law and is subsequently detained based on an officer’s reasonable suspicion that the motorist is trafficking or possessing drugs.
An example of drug interdiction: John Smith, a motorist, is driving down interstate 95 in Miami Dade County, Florida with a brake light out and an occluded license plate. Officer Brown, who has been following Mr. Smith, initiates a traffic stop due to the light and the license plate. After Mr. Smith pulls over, Officer Brown observes Mr. Smith is moving around and appears to be reaching under his seat. After approaching the vehicle, Officer Brown notices that Mr. Smith is more nervous that someone would usually be when stopped for a traffic offense. He notices that Mr. Smith is sweating, shaking, and avoiding eye contact. Mr. Smith hands Officer Brown his license and registration, and vehicle rental agreement, which shows that Mr. Smith rented the vehicle in Philadelphia, and the car is due back there in 1 day. Officer Brown notices two cellphones in the center console, 1 prepaid, and 1 iPhone; he sees numerous cans of Redbull, and McDonald’s bags strewn about the vehicle; he notices a number of air fresheners hanging from the rearview mirror; he sees that instead of placing his luggage in the trunk, Mr. Smith has kept a small amount of luggage in the rear of the vehicle. Officer Brown asks Mr. Smith where he is coming from and where he is going. Mr. Smith states that he is coming from Washington D.C. and is headed to Arkansas to see family. When Officer Smith asks why, if he was headed to Arkansas to see family, he was in Miami, Mr. Smith states that he is actually seeing his girlfriend, who he cannot name, in Miami, before heading west to Arkansas to see his family. Based on the foregoing, Officer Brown believes that Mr. Smith is actually trafficking drugs, and detains him for 20 minutes until a drug dog can complete an open air sniff of the vehicle. Upon completion of the sniff, the dog indicates that there are drugs in the trunk of the vehicle. After opening the trunk, Officer Brown seizes 5kg of cocaine from the vehicle. Mr. Smith is arrested, and subsequently charged.
The legal question presented from these facts is whether Officer Brown had reasonable suspicion based upon articulable facts (his observations) that criminal activity was afoot. If so, then he could detain Mr. Smith for the time necessary to complete a canine sniff of the vehicle. If not, Mr. Smith’s constitutional rights have been violated due to the detention. We will be annotating cases that present the same legal problem. Although the facts (factors) of each case will be different to some degree (small or great), this is the legal problem that must be examined. There are certain kinds of facts that we are interested in identifying. Below we refer to these facts as factors.
-END LEGAL PROBLEM EXPLANATION-

-START INSTRUCTIONS-
YOU will assess sentences to and determine whether they belong to any of the following categories based on the content of the sentence and the descriptions below: 

1. Furtive Movement - Use this label if the driver or passenger in the vehicle makes a suspicious movement, such as reaching beneath a seat, or in a purse or bag, or around a waistband, or in a pocket, which is commonly an attempt to conceal contraband or a weapon.  This also includes attempting to evade custody such as taking a long time to pull the vehicle over.  Simple driving mistakes do not count under this factor.
2. Nervous Behavior or Appearance - Use this label if the motorist appears to be nervous, has shaking hands or a heavy heartbeat, or is sweating even though the temperature is cool.  Also use this label if the the motorist behaves in a nervous way, avoids making eye contact with the officer, focuses on a bag or compartment in the car, appears to be agitated, confronts the officer, gives the officer a curt response, volunteers too much information, or behaves in an overly friendly way toward the officer. 
3. Suspicious or Inconsistent Answers - Use this label if the driver made an answer to an officer that is evasive, nonsensical, inconsistent, contradictory, impossible, vague, incomplete, unusual, or untruthful.
4. Motorist license or Identification - Use this label if the motorist cannot provide the officer with a license or identification or if the license is invalid, revoked, fake, the wrong color, flimsy, or in someone else’s name. 
5. Driver Status - Use this label only if the driver of the vehicle is male, young, or not from the state in which the officer pulled the car over. 
6. Refused Consent - Use this label if the driver refused to consent to the officer’s request to search the automobile.
7. Legal Indications of Drug Use - Use this label if the motorist has an active arrest warrant for a drug related charge or if the motorist has been arrested for or convicted of a drug related offense in the past or if the officer knows that the motorist has abused, possessed, dealed, or trafficked in drugs in the past. 
8. Motorist's Appearance Related to Drug Use or Sale - Use this label if driver looks like they USE DRUGS such as needle track marks, rotten teeth, scabbing, bloodshot eyes, dilated pupils, unwashed hair, dirty clothes, body odor or dirty skin or if the driver is wearing suspicious clothing, such as expensive jewelry, expensive or luxury clothing, or clothing with images of drugs (e.g., marijuana leaves).
9. Possible Drug Route - Use this label if the driver’s route is from or to a city or area, which is known for drug trafficking or high crime rates, or if the driver stops the vehicle late at night or early in the morning in an area known for criminal activity. 
10. Unusual Travel Plans - Use this label if the motorist appears to be headed to a location that the motorist has already passed, is traveling on a road that does not lead to the stated destination, plans a trip that is too far to drive in a reasonable time (e.g., driving from Philadelphia to Miami in a single night), claims to be driving a long round trip in a one-day rental vehicle, or has other unusual travel plans.
11. Expensive Vehicle - Use this label if the motorist is driving a kind of vehicle associated with illicit drug use or trafficking such as a luxury or expensive vehicle, e.g., a BMW, Mercedes, Cadillac, or Range Rover.
12. Vehicle License Plate or Registration - Use this label if the vehicle's license plate is missing, shielded from view, or from out of state, or if the license plate or vehicle registration has expired.
13. Unusual Vehicle Ownership - Use this label if the vehicle is rented or if the vehicle is owned by someone not in the vehicle, unknown to the driver, or about whom the driver knows very little or claims to be a distant relative. 
14. Indicia of Hard Travel - Use this label if the motorist has been driving a great distance for a long time and is attempting to make as few stops as possible, or if the vehicle contained fast-food bags, lots of trash, energy drinks or substances designed to keep the consumer awake, such as Redbull, Five-Hour Energy, or Energize Capsules. 
15. Masking Agent - Use this label if the vehicle contained a substance or product used to mask the odor of drugs such as air fresheners (e.g., Little Trees, Febreze, Glade, etc.), scented dryer sheets or baby wipes, or strongly smelling tobacco products, cigars or cigarettes or other strong smells.
16. Vehicle Contents Suggest Drugs - This label SHOULD NOT be used for anything found after a canine has sniffed the car. Use this label if the vehicle smells of drug use (e.g., smells of raw or burnt marijuana or of chemicals such as meth or heroin) or contains drugs in plain view, or items used to ingest or use drugs such as pipes, syringes, needles, lighters, torches, drug paraphernalia, cigarette rolling papers (e.g., Raw or ZigZag brand rolling papers), marijuana cigarettes, joints, or blunts, vials, prescription bottles, or small glass containers used to hold drugs.  This label also applies if there are large amounts of cash or large bill denominations (e.g., $100 bills).
17. Suspicious Communications Device - Use this label if the officer observes suspicious communications devices such as multiple cell phones or a prepaid burner phone. 
18. Suspicious Storage - Use this label if only a small amount of luggage is visible given the stated nature of the trip, if the luggage is stored in the back of the cab instead of the trunk, if the vehicle has an unusual or secret storage compartment  or a car window that will not go down.
29. Suspicion Found - Use this label if the court deciding the case concludes, based on the facts present in the case, that the officer had reasonable suspicion to detain the suspect. 
20. Suspicion Not Found - Use this label if the court deciding the case concludes, based on the facts present in the case, that the officer did not have reasonable suspicion to detain the suspect.
21. No Factor - If none of the factors apply or the court is citing or quoting a legal rule, select this option.

You are also to follow these specific rules:

Typically, a sentence will describe a single factor, however, in some cases, a single sentence may include more than one factor.  If a sentence describes more than one factor, give a label for each factor in the sentence. 

Here are some specific rules you should follow:

1. Precepts or rules of law described by the court should not be labelled.  For example: "A police officer may extend the detention beyond the scope of a routine traffic stop if the driver consents or the officer has reasonable suspicion of criminal activity. Id. at 336."

2. The data is in the form of an appellate court opinion.  Conclusions reached by a lower or a trial court should not be labelled.  Sample language would be "The district court concluded that the officer had probable cause for the search".

3. The charges before the court are not to be considered Legal Indications of Drug Use.  For example: "The defendant is charged with possession with intent to distribute," should not be labeled.  However, "A record check revealed that the motorist had a conviction for drug possession" should be labelled as Legal Indication of Drug Use.

4. A sentence may be from a concurring or dissenting opinion. Do not annotate concurring or dissenting opinions even if they contain sentences describing factors.

5. Arguments by the parties should never be treated as a factor.  For example: "Gray argues that there was not reasonable suspicion for a prolonged detention".  Because this describes an argument, it is not a fact. Common words for argument are challenges, maintains, proffers, alleges. 

6. Sentences that contain solely a legal citation should be labelled as No Factor.  For example: "United States v. Oliver, 343 U.S. 900 (2019)"

7. Statements that describe a legal issue are not a factor.  For example: "The question before the court is whether the officer had reasonable suspicion to detain the motorist?"

8. Officer testimony can support the finding of a factor. 

You should apply a label for each sentence. Here are some examples: 

1. Sentence: Officer Guthrie testified that while the above exchanges were taking place, he noticed that the driver, Arturo Tapia, seemed nervous, and that his hands were shaking.
Label: Physical Appearance of Nervousness

2. Sentence: Upon reviewing the vehicle's documentation, Trooper Conrad discovered that the vehicle belonged to an absent third party, which, in his experience, raised his suspicion that the vehicle was being used for drug trafficking.
Label: Unusual Vehicle Ownership

3. Sentence: Typically, in my training and experience, the overwhelming smell of air fresheners in a rental vehicle is consistent with trying to mask the odor of controlled substances.
Label: Masking Agent, Unusual Vehicle Ownership
-END INSTRUCTIONS-

-START LABELLING-

-EXPECTED OUTPUT-
Sentence [Number]: [Sentence [number] contents]
Label: [label for sentence [number]]

Label the following sentences individually: 

Sentence 1: The validity of the extension is tested in the same manner, and under the same criteria, as the initial stop.
Sentence 2: The State focuses its argument for affirmance on Steffes\'s observation of the mushroom picture on Betow\'s wallet, emphasizing his testimony that, in his three-plus years of experience as a Beaver Dam police officer, "several people will use mushrooms to show their use of narcotics," and that "[a] mushroom is also a hallucinogen — can be used as a hallucinogen."
Sentence 3: The argument, in the State\'s words, is that    [blecause some people signal!
Sentence 4: ] their use of drugs by displaying a mushroom symbol, it was possible that Betow was sending the same signal by having a picture of a mushroom [on] his wallet.
Sentence 5: And that possibility gave [Officer Steffes] a specific articulable reason to at least suspect that Betow might be a drug user.
Sentence 6: We agree with Betow that Steffes\'s knowledge that "some people" may regard a representation of a mushroom as an emblem of their use of hallucinogens is inadequate to support Betow\'s continued detention in this case — especially when, at the time he made the decision to extend the detention, Steffes had absolutely no evidence that Betow was "using" hallucinogenic or other drugs on the evening in question (or at any other time).
Sentence 7: Citing State v. Morgan, 197 Wis. 2d 200, 539 N.W.2d 887 (1995), the State points to two other factors which it says confirms the reasonableness of Steffes\'s extension of the stop: (a) the fact that Betow was stopped late in the evening "makes it more likely that criminal activity [was] afoot"; and (b) when stopped, Betow "appeared to be nervous."
Sentence 8: With respect to the evening hours, Morgan held that the late-night hour was a factor supporting the officer\'s decision to conduct a pat-down search for weapons; and we agree with Betow that the fact that courts may be more willing to permit police officers, in aid of their own safety, to search suspects for weapons after dark does not mean that all late-night stops and searches are equally justifiable.
Sentence 9: The State has not referred us to any case that stands for the proposition that drugs are more likely to be present in a car at night than at any other time of day.
Sentence 10: As for Betow\'s appearing nervous when Steffes pulled him over, not only did Steffes himself acknowledge that "people react differently" when stopped by police on the highway, but the State concedes in its brief that "a suspect may be nervous simply because he has been stopped by the police."
Sentence 11: Finally, the officer in Morgan testified that the defendant "was more nervous than the typical person," id. at 215, 539 N.W.2d at 894, and no assertion is made in this case that Betow\'s nervousness was unusual or in any way out of the ordinary.
Sentence 12: The State next seizes upon the fact that Betow was coining from Madison, which it describes as "a city regrettably well known as a place where drugs may readily be obtained."
Sentence 13: The State has not referred us to any evidence of record to support such an assertion, and we need not consider it further.
Sentence 14: See Dieck v. Antigo Sch. Dist., 157 Wis. 2d 134, 148 n.9, 458 N.W.2d 565, 571 (Ct. App. 1990) (appellate court does not consider arguments based on factual assertions that are unsupported by references to the record).
Sentence 15: Finally, the State says that Steffes\'s decision to extend Betow\'s detention was justified because his "story" — that he had driven a friend to Madison and was returning home to Appleton — was "implausible" because of the lateness of the hour.
Sentence 16: According to the State, the relatively short distance between Madison and Beaver Dam, where Betow was stopped, "would mean that [he dropped his friend off] well after midnight on a Monday morning ... an unlikely time to initiate a visit."
Sentence 17: We agree with the State that a suspect\'s inadequate explanation for conduct can provide the basis for a suspicion that "he is up to no good."
Sentence 18: Here, too, however, we have not been directed to any place in the record that would indicate that Betow had dropped his friend off immediately prior to departing for Appleton, or whether they had gone to Madison earlier in the day and Betow had tarried in the capital city after the drop-off.
Sentence 19: Because, as we have noted above, the decision to extend a stop is subject to the same criteria as the initial stop, we think State v. Young, 212 Wis. 2d 417, 569 N.W.2d 84 (Ct. App. 1997), is instructive.
Sentence 20: In that case, the defendant was stopped and detained by police based on: (1) his presence in "a high drug-trafficking area"; (2) his brief meeting with another individual in that area; and (3) the officer\'s "experience that drug transactions in this neighborhood take place on the street and involve brief meetings."
Sentence 21: Id. at 433, 569 N.W.2d at 92.
Sentence 22: We held that these observations were insufficient to justify an investigatory stop.
Sentence 23: In so holding, we recognized in Young, as we do here, that conduct which has innocent explanations may also give rise to a reasonable suspicion of criminal activity, and that, in assessing the officer\'s actions, we should give weight to his or her training and experience, and the knowledge acquired on the job.
Sentence 24: Id. at 430, 569 N.W.2d at 91.
Sentence 25: Doing so here, as we did in Young, we are similarly unable to discern the required "reasonable suspicion" from "so spare a record."
Sentence 26: Id. at 430-31, 569 N.W.2d at 91.
Sentence 27: By the Court. — Judgment reversed.
Sentence 28: Betow does not challenge the validity of his initial stop for speeding — only the extended detention and subsequent search.
Sentence 29: There is widespread recognition that police awareness of an individual\'s prior criminal record, or their observation of gang insignia on his or her person, in and of themselves, are insufficient to provide a basis for a reasonable suspicion that would justify stopping and detaining the individual.
Sentence 30: See, e.g., State v. Jones, 835 P.2d 863, 866-67 (N.M. App. 1992) (knowledge of gang membership); Robinson v. Florida, 388 So. 2d 286, 290 (Fla. 1st DCA 1980) (person with prior drug arrest observed traveling from a "drug profile target city"); United States v. Feliciano, 45 F.3d 1070, 1074 (7th Cir. 1995) (knowledge of gang association and prior arrest or conviction record); United States v. Sandoval, 29 F.3d 537, 542-43 (10th Cir. 1994) (knowledge of prior criminal involvement and arrest).
Sentence 31: Not surprisingly, the trial court declined to draw any such inference, despite being requested by the State to do so.
Sentence 32: See also, Robinson v. Florida, supra, note 2, where the officer\'s knowledge of the suspect\'s prior drug arrest, together with the fact that he was seen disembarking from a flight that had originated in New Orleans, "a drug profile target city," were held inadequate to constitute a reasonable suspicion of criminal activity.
Sentence 33: Id., 388 So. 2d at 290.
Sentence 34: We said in State v. Young, 212 Wis. 2d 417, 569 N.W.2d 84 (Ct. App. 1997), that, while the officer\'s training and experience is "one factor in the totality of the circumstances that courts take into account in deciding whether there is reasonable suspicion to make the stop," that fact "does not require a court to accept all of [the officer’s] suspicions as reasonable, nor does mere experience mean that an [officer\'s] perceptions are justified by the objective facts."
Sentence 35: Id. at 429, 569 N.W.2d at 90.
Sentence 36: And we said that, in all cases, "[t]he basis of the police action must be such that it can be reviewed judicially by an objective standard."
Sentence 37: Id., citing United States v. Buenaventura-Ariza, 615 F.2d 29, 36 (2nd Cir. 1980).', 
Sentence 38: Dissenting/Concuring:  'Not Available',     Dissenting/Concuring 2:  'Not Available',     Dissenting/Concuring 3:  'Not Available'



