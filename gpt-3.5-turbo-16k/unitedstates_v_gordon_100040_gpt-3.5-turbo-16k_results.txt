Sentence 1: Case Name: 'UNITED STATES of America v. William John GORDON, et al.'
Label: No Factor

Sentence 2: Citation: '917 F. Supp. 485', Court Name: 'United States District Court for the Western District of Texas'
Label: No Factor

Sentence 3: Decision Date YYYY-MM-DD: '1996-03-14'
Label: No Factor

Sentence 4: ID No. : 7796938, 'MEMORANDUM OPINION AND ORDER
Label: No Factor

Sentence 5: BRIONES, District'Judge.
Label: No Factor

Sentence 6: On this day, the Court considered Defendant’s Motion to Suppress Evidence, filed on February 20, 1996, in the above-captioned cause.
Label: No Factor

Sentence 7: The Government filed a Response on March 8, 1996.
Label: No Factor

Sentence 8: The Defendant filed a Supplemental Memorandum in support of his Motion, on March 11, 1996.
Label: No Factor

Sentence 9: The Court entertained a hearing on the matter on March 11, 1996.
Label: No Factor

Sentence 10: After due consideration, the Court is of the opinion that Defendant’s Motion should be granted for the reasons set forth below.
Label: No Factor

Sentence 11: FACTUAL BACKGROUND
Label: No Factor

Sentence 12: While on patrol on Interstate-10 on February 26, 1993, Deputies Grant Willis (“Willis”) and Martin Zaunbrecher (“Zaunbrecher”), of the Jefferson Davis Parish Sheriffs Department observed a 2-door Ford Explorer traveling east at approximately 66-70 miles per hour.
Label: No Factor

Sentence 13: They observed the same vehicle change lanes without using a turn signal, cutting off another vehicle on the highway.
Label: No Factor

Sentence 14: Willis and Zuanbreeher pursued the Ford Explorer, activated their emergency lights and pulled the Explorer off on the shoulder of the highway.
Label: No Factor

Sentence 15: When Willis reached the Explorer’s driver’s side window he noticed a strong odor of an air freshener.
Label: Masking Agent

Sentence 16: He also observed a large metal box in the rear of the vehicle.
Label: No Factor

Sentence 17: The occupant of the Ford Explorer identified himself as John William Gordon [sic] (“Gordon”).
Label: No Factor

Sentence 18: Willis informed Gordon of the reason for the stop, and Gordon agreed that he had failed to use his turn signal when he had changed lanes earlier.
Label: No Factor

Sentence 19: Willis requested Gordon’s driver’s license, which Gordon produced.
Label: Motorist license or Identification

Sentence 20: Willis then returned to his police cruiser and radioed the Sheriffs Department to have a computer check run on both Gordon and his vehicle.
Label: No Factor

Sentence 21: Before receiving any information, Willis exited his vehicle, again approached Gordon’s vehicle and requested that Gordon step to the rear of the Explorer.
Label: No Factor

Sentence 22: Gordon complied with Willis’ request.
Label: No Factor

Sentence 23: While at the rear of the vehicle Gordon appeared nervous and began pacing back and forth.
Label: Nervous Behavior or Appearance

Sentence 24: Willis gave Gordon a Warning Citation for improper lane change, which Gordon signed.
Label: No Factor

Sentence 25: Willis then asked Gordon if he was carrying any firearms, contraband, or large sums of currency, to which Gordon responded “no”.
Label: Suspicious or Inconsistent Answers

Sentence 26: At that time, Willis presented Gordon with a Permission to Search form and requested permission to search Gordon’s vehicle.
Label: Refused Consent

Sentence 27: Gordon refused Willis’s request.
Label: Refused Consent

Sentence 28: Willis then informed Gordon that he was free to go, but that his vehicle was going to be detained.
Label: No Factor

Sentence 29: Approximately two minutes later, Zaun-breeher approached Gordon’s vehicle with his certified K-9, Toby. Toby alerted to the presence of illegal contraband near the right rear area of the vehicle.
Label: No Factor

Sentence 30: Willis again told Gordon that he was free to leave, but that his vehicle was going to be taken to the Sheriffs Department impound lot for a further search.
Label: No Factor

Sentence 31: Gordon chose to stay with his vehicle and drove it to the Sheriffs impound lot.
Label: No Factor

Sentence 32: Willis rode along with Gordon, in the right front passenger seat.
Label: No Factor

Sentence 33: While at the Sheriff’s Department, Willis and Zaunbrecher obtained a search warrant, searched Gordon’s vehicle, and discovered approximately 99 pounds of marijuana in the metal box in the rear of Gordon’s vehicle.
Label: Vehicle Contents Suggest Drugs

Sentence 34: Gordon moves this Court to suppress (1) all evidence seized from his vehicle on February 26, 1993, together with any videotapes, photographs or testimony which may be associated therewith; (2) any statements allegedly made by Gordon in conjunction with the stop, arrest, search and seizure; and, (3) any other additional evidence which may have been obtained or derived from the stop, arrest, search and seizure.
Label: No Factor

Sentence 35: ANALYSIS OF THE MERITS
Label: No Factor

Sentence 36: There is no question as to the validity of Deputy Willis’ initial stop of the Defendant’s vehicle for improper lane change.
Label: No Factor

Sentence 37: The question in this instance revolves around whether there were circumstances present which provided a reasonable basis for a further detention of the vehicle, once the purpose of the initial stop had been concluded when Deputy Willis issued a Warning Citation to the Defendant.
Label: No Factor

Sentence 38: There are three current categories of police-citizen encounters with respect to the Fourth Amendment.
Label: No Factor

Sentence 39: This case centers around the second of those categories, an investigatory stop, which is limited to a brief, non-intrusive detention.
Label: No Factor

Sentence 40: The primary case with regard to this category is Terry v. Ohio, 392 U.S. 1, 88 S.Ct. 1868, 20 L.Ed.2d 889 (1968).
Label: No Factor

Sentence 1: According to Terry, even in the absence of probable cause, the police may stop persons and detain them briefly in order to investigate a reasonable suspicion that such persons are involved in criminal activity.
Label: No Factor

Sentence 2: See also United States v. Sharpe, 470 U.S. 675, 105 S.Ct. 1568, 84 L.Ed.2d 605 (1985); United States v. Hensley, 469 U.S. 221, 105 S.Ct. 675, 83 L.Ed.2d 604 (1985).
Label: No Factor

Sentence 3: In order to justify the “reasonableness” standard, an officer is required to provide specific and artic-ulable facts which, taken together with rational inferences from those facts, reasonably warrant an intrusion.
Label: No Factor

Sentence 4: See also United States v. Brignoni-Ponce, 422 U.S. 873, 881-82, 95 S.Ct. 2574, 2580-81, 45 L.Ed.2d 607 (1975); Terry v. Ohio, 392 U.S. 1, 88 S.Ct. 1868, 20 L.Ed.2d 889 (1968).
Label: No Factor

Sentence 5: A reasonable suspicion is determined from the “totality of the circumstances”, United States v. Sokolow, 490 U.S. 1, 109 S.Ct. 1581, 104 L.Ed.2d 1 (1989); Illinois v. Gates, 462 U.S. 213, 103 S.Ct. 2317, 76 L.Ed.2d 527 (1983) and from the collective knowledge of the officers involved in the stop.
Label: No Factor

Sentence 6: United States v. Cotton, 721 F.2d 350, 352 (11th Cir.1983), cert. denied, 465 U.S. 1108, 104 S.Ct. 1614, 80 L.Ed.2d 143 (1984).
Label: No Factor

Sentence 7: Here, the encounter was initiated by Willis stopping Gordon for a traffic violation.
Label: No Factor

Sentence 8: Such a stop is more analogous to a Terry stop than a formal arrest.
Label: No Factor

Sentence 9: See also Berkemer v. McCarty, 468 U.S. 420, 439, 104 S.Ct. 3138, 3149-50, 82 L.Ed.2d 317 (1984); United States v. Shabazz, 993 F.2d 431 (5th Cir.1993); Terry v. Ohio, 392 U.S. 1, 88 S.Ct. 1868, 20 L.Ed.2d 889 (1968).
Label: No Factor

Sentence 10: In order for this Court to find that the detention of Gordon’s vehicle was justified, it must first be determined that\' the officers possessed “specific and articulable” facts sufficient to create a reasonable suspicion that a crime had been or was being committed.
Label: No Factor

Sentence 11: See United States v. Brignoni-Ponce, 422 U.S. 873, 95 S.Ct. 2574 and Terry v. Ohio, 392 U.S. 1, 88 S.Ct. 1868.
Label: No Factor

Sentence 12: In this instance, Gordon’s vehicle was detained, after he was issued a Warning Citation for improper lane change, based on the fact that (1)
Label: No Factor

Sentence 13: Willis detected a strong odor of air freshener; \' (2) he found the large metal box in the rear of Gordon’s vehicle to be suspicious; (3)
Label: Masking Agent, Suspicious Storage

Sentence 14: Gordon’s nervousness; (4) the fact that Gordon stated he had been in Houston for the three days prior to the stop and Willis could only observe one change of clothes in Gordon’s vehicle; and, (5)
Label: Nervous Behavior or Appearance, Unusual Travel Plans

Sentence 15: Gordon’s refusal to consent to a search of his vehicle.
Label: Refused Consent

Sentence 16: In United States v. Lee, 898 F.2d 1034 (5th Cir.1990), the Fifth Circuit outlined a list of factors which, in that case, provided a reasonable level of suspicion to justify the defendant’s continued detention.
Label: No Factor

Sentence 17: Those factors include (1) the defendant’s inability to produce a valid driver’s license; (2) the driver’s total lack of identification; (3) the large quantity of cash the defendants were carrying ($8,900.26); (4) the fact that the driver, wore a pager; (5) the fact that the rental truck being used by the defendants had been rented to an unknown third party;, (6) the fact that the driver lied to the officer regarding who had rented the truck; (7) the fact that the defendants disclaimed any knowledge of the contents of the cargo bay of the truck; and, (8) the defendants’- contention that they did not have a key to unlock the truck’s cargo bay door.
Label: Motorist license or Identification, Motorist's Appearance Related to Drug Use or Sale, Unusual Vehicle Ownership, Vehicle Contents Suggest Drugs, Suspicious Storage

Sentence 18: The factors cited by the officers in this instance do not approach the level of suspicion present in the Lee case above.
Label: No Factor

Sentence 19: Indeed, all of the factors cited by Willis and Zaun-brecher in this case are wholly consistent with legal activity, even under the totality of the circumstances test set out in Illinois v. Gates.
Label: No Factor

Sentence 20: Further, the fact that Gordon refused to consent to a search of his vehicle can not be turned, by the officers, into a basis for the necessary level of reasonable articulable suspicion.
Label: No Factor

Sentence 21: Florida v. Bostick, 501 U.S. 429, 111 S.Ct. 2382, 115 L.Ed.2d 389 (1991); United States v. Torres, 65 F.3d 1241 (4th Cir.1995), and cases cited therein.
Label: No Factor

Sentence 22: The government contends that Gordon’s vehicle, and not Gordon himself, was detained.
Label: No Factor

Sentence 23: The government also argues that any detention between the time of the issuance of the Warning Citation and the running of the K-9 was minimal and did not “significantly increase the level of intrusion incurred as a result of the stop”.
Label: No Factor

Sentence 24: Gvt.Resp., p. 6.
Label: No Factor

Sentence 25: The problem with this theory is that once the purpose for the stop was completed, the officers had no reasonable suspicion for further detention of Gordon’s vehicle.
Label: No Factor

Sentence 26: Additionally, the detention of Gordon’s vehicle effectively restrained Gordon himself because the detention relieved him of his sole means of transportation.
Label: No Factor

Sentence 27: It was this type of situation in United States v. Place, 462 U.S. 696, 103 S.Ct. 2637, 77 L.Ed.2d 110 (1983), which led the Supreme Court to conclude that the manner in which the officers conducted the investigation exceeded the permissible limits of a Terry -stop.
Label: No Factor

Sentence 28: In this case, Willis and Zaunbrecher did not have a reasonable suspicion sufficient to detain Gordon’s vehicle.
Label: Suspicion Not Found

Sentence 29: It is irrelevant that the detention lasted only two minutes between the time the Warning Citation was issued and the time the K-9 was run on the vehicle.
Label: No Factor

Sentence 30: At the point that Gordon signed the Warning Citation, and refused to consent to a search of his vehicle, the encounter was over.
Label: No Factor

Sentence 31: Absent a reasonable suspicion for a continued detention of the vehicle, Gordon was free to leave the scene.
Label: No Factor

Sentence 32: Accordingly, IT IS HEREBY ORDERED, ADJUDGED, and DECREED that Defendant’s Motion to Suppress Evidence is GRANTED.
Label: No Factor

Sentence 33: . Jefferson Davis Parish is located in the State of Louisiana.
Label: No Factor

Sentence 34: The posted speed limit on that stretch of 1-10, during February, 1993, was 65 miles per hour.
Label: No Factor

Sentence 35: The Sheriff\'s Department cruiser was being driven by Deputy Willis.
Label: No Factor

Sentence 36: Zuan-brecher’s certified K-9, "Toby” was also in the cruiser.
Label: No Factor

Sentence 37: . Gordon was quite nervous, to the point that his hands were shaking as he removed his license from his wallet.
Label: Nervous Behavior or Appearance

Sentence 38: The Court notes that following Defendant\'s arrest, the District Attorney for Jefferson Davis Parish instituted civil proceedings to forfeit the Defendant’s vehicle pursuant to Louisiana’s drug asset forfeiture law in a case styled State of Louisiana v. 1991 Ford Explorer.
Label: No Factor

Sentence 39: The reasons for the continued detention of Gordon’s vehicle articulated by Deputies Willis and Zaunbrecher in the aforementioned case differ slightly from their testimony in the hearing regarding the instant Motion to Suppress Evidence.
Label: No Factor

Sentence 40: . Gordon was passing through Louisiana, from Houston, Texas, on his way to his home in Florida.
Label: Unusual Travel Plans

Sentence 1: The stop took place on a stretch of highway at 10:00 p.m.
Label: No Factor

Sentence 2: The Court reached this conclusion even though the officers in Place had the requisite articulable facts causing the officers to reasonably conclude that the luggage contained contraband, and even though a dog “sniff” does not constitute a search within the purview of the Fourth Amendment.
Label: No Factor

Sentence 3: Dissenting/Concuring: 'Not Available', Dissenting/Concuring 2: 'Not Available', Dissenting/Concuring 3: 'Not Available'
Label: No Factor

