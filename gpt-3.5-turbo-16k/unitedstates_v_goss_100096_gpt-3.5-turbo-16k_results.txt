Sentence 1: Case Name: 'UNITED STATES of America, Plaintiff-Appellee, v. Teffin C. GOSS, II, Defendant-Appellant'
Label: No Factor

Sentence 2: Citation: "256 F. App'x 122", Court Name: 'United States Court of Appeals for the Ninth Circuit'
Label: No Factor

Sentence 3: Decision Date YYYY-MM-DD: '2007-11-26'
Label: No Factor

Sentence 4: ID No. : 3669070, 'MEMORANDUM
Label: No Factor

Sentence 5: Teffin Goss appeals his jury conviction of possession with intent to distribute cocaine base in violation of 21 U.S.C. § 841.
Label: No Factor

Sentence 6: Goss appeals the district court’s denial of his motion to suppress evidence obtained following a traffic stop, as well as the district court’s admission of evidence of Goss’s prior state drug conviction.
Label: No Factor

Sentence 7: We have jurisdiction pursuant to 18 U.S.C. § 3742(a) and 28 U.S.C. § 1291, and we affirm.
Label: No Factor

Sentence 8: Drug Evidence Obtained During Traffic Stop
Label: No Factor

Sentence 9: We review de novo whether a traffic stop exceeds its permissible scope.
Label: No Factor

Sentence 10: United States v. Garcia-Rivera, 353 F.3d 788, 791 (9th Cir.2003).
Label: No Factor

Sentence 11: The district court did not err in denying Goss’s motion to suppress the drug evidence obtained during Officer Keeler’s traffic stop of Goss.
Label: No Factor

Sentence 12: No Fourth Amendment violation occurs when an officer stops a driver if the officer has probable cause to believe that a traffic violation has occurred.
Label: No Factor

Sentence 13: Whren v. United States, 517 U.S. 806, 810, 116 S.Ct. 1769, 135 L.Ed.2d 89 (1996).
Label: No Factor

Sentence 14: Here, there is no debate that Officer Keeler had legitimately stopped Goss for running a red light, and thus the original detention was permissible.
Label: No Factor

Sentence 15: We focus on whether reasonable suspicion supported an extension of that stop’s scope and duration, leading to discovery of the cocaine base in Goss’s car.
Label: No Factor

Sentence 16: The scope of an officer’s stop must be tailored to the underlying justification for that stop, United States v. Chavez-Valenzuela, 268 F.3d 719, 724 (9th Cir.2001), amended by 279 F.3d 1062 (9th Cir.2002), here, running a red light.
Label: No Factor

Sentence 17: The stop must last no longer than necessary to effectuate the stop’s purpose.
Label: No Factor

Sentence 18: United States v. Mondello, 927 F.2d 1463, 1471 (9th Cir.1991).
Label: No Factor

Sentence 19: Questions prolonging the detention must be “reasonably related in scope to the justification of [the] initiation,” unless additional suspicious factors supported by reasonable suspicion justify a broadening of that scope.
Label: No Factor

Sentence 20: United States v. Mendez, 476 F.3d 1077, 1080 (9th Cir.), cert. denied,U.S. -, 127 S.Ct. 2277, 167 L.Ed.2d 1112 (2007).
Label: No Factor

Sentence 21: “Reasonable suspicion” requires a minimal level of objective justification, more than an inchoate or unparticularized suspicion or “hunch,” but less than probable cause.
Label: No Factor

Sentence 22: United States v. Sokolow, 490 U.S. 1, 7, 109 S.Ct. 1581, 104 L.Ed.2d 1 (1989).
Label: No Factor

Sentence 23: In assessing the existence of reasonable suspicion, we consider the totality of the circumstances.
Label: No Factor

Sentence 24: United States v. Arvizu, 534 U.S. 266, 273, 122 S.Ct. 744, 151 L.Ed.2d 740 (2002).
Label: No Factor

Sentence 25: Goss argues that the initial stop for his traffic infraction ended when Officer Keel-er approached his vehicle with an almost complete citation for Goss’s signature or shortly thereafter and that any extension of that stop occurred without reasonable suspicion.
Label: No Factor

Sentence 26: We disagree and reject Goss’s contention that Officer Keeler prolonged the initial, valid detention beyond its origi nal scope without reasonable suspicion raised by particularized objective factors.
Label: No Factor

Sentence 27: See Chavez-Valenzuela, 268 F.3d at 724 (holding that officers may expand their initial inquiry if they notice particularized, objective factors arousing their suspicion).
Label: No Factor

Sentence 28: When Officer Keeler returned to Goss’s rental car with the nearly complete citation, he knew: that Goss was a local resident driving a rental car; that the car contained numerous, strangely placed ah' fresheners, which might be used to mask the smell of narcotics; that the car contained a radar detector, which might be used to detect law enforcement presence; that the car was rented to a third party and Goss was not a listed driver; that Officer Keeler encountered the car on a road that drivers take when entering Fairbanks from Anchorage, a common drug-trafficking route; and that Goss had a history of some involvement related to drugs.
Label: Unusual Vehicle Ownership, Masking Agent, Suspicion Found

Sentence 29: Although each factor individually might be consistent with innocent travel, their collective presence gave rise to reasonable suspicion for Officer Keeler, particularly given his substantial law enforcement experience.
Label: Suspicion Found

Sentence 30: See Arvizu, 534 U.S. at 274-75, 122 S.Ct. 744 (holding that Terry precludes a “divide-and-conquer analysis” and that, while each of a series of acts might be innocent in itself, taken together they warranted further investigation); United States v. Crapser, 472 F.3d 1141, 1147-48 (9th Cir.2007) (holding that under the totality of the circumstances analysis, nervousness, possession of a pressure-cooker, staying in a motel room with a person using methamphetamine and taking several minutes to open the door created reasonable suspicion); United States v. Rojas-Millan, 234 F.3d 464, 470 (9th Cir.2000) (holding that the unusually strong odor of perfume emanating from the defendant’s car, which the officer suspected was intended to mask the smell of illegal drugs, contributed to the officer’s reasonable suspicion).
Label: Suspicion Found, Physical Appearance of Nervousness, Masking Agent

Sentence 31: Considering these factors in total, Officer Keeler already had reasonable suspicion to detain Goss briefly for additional questioning and to attempt to obtain consent to search the vehicle when Officer Keeler approached Goss with citation in hand.
Label: Suspicion Found

Sentence 32: During that questioning, then, subsequent discoveries such as Goss’s inability to recall his work phone number combined with his expensive-looking watch, and Goss’s reference to having previously been jailed, only heightened Officer Keeler’s suspicion, justifying his decision to extend the stop an additional eight minutes for a canine unit to arrive.
Label: Suspicion Found, Suspicious or Inconsistent Answers, Nervous Behavior or Appearance

Sentence 33: Further, Officer Keeler diligently and quickly took measures to confirm or dispel his reasonable suspicions.
Label: No Factor

Sentence 34: See United States v. Sharpe, 470 U.S. 675, 685, 105 S.Ct. 1568, 84 L.Ed.2d 605 (1985) (holding that common sense and ordinary human experience govern an evaluation of whether an officer exceeded the time reasonably needed to effectuate the purposes of the investigative stop).
Label: No Factor

Sentence 35: Because reasonable suspicion supported the brief extension of the traffic stop first for additional questioning and then to wait for the canine unit, and because once the dog alerted to drugs there was probable cause to search the vehicle, the fruit of that vehicle search was admissible, and the district court correctly denied Goss’s motion to suppress the evidence.
Label: Suspicion Found

Sentence 36: Admission of Prior Criminal History
Label: No Factor

Sentence 37: We also reject Goss’s argument that the district court abused its discretion by admitting evidence, during the trial, of Goss’s prior drug conviction under Federal Rules of Evidence (“FRE”) 403 and 404(b).
Label: No Factor

Sentence 38: We review for abuse of discretion the district court’s decision to admit evidence of prior crimes or bad acts under FRE 404(b).
Label: No Factor

Sentence 39: United States v. Plancarte-Alvarez, 366 F.3d 1058, 1062 (9th Cir.2004).
Label: No Factor

Sentence 40: FRE 404(b) sets forth exceptions to the general inadmissibility of propensity evidence, one of which is to prove knowledge, for which the district court allowed the evidence here.
Label: No Factor

Sentence 1: For the district court to have properly admitted the evidence of Goss’s prior drug conviction, the evidence must have met four criteria: 1) it tends to prove a material fact; 2) it is sufficient to support a finding that the defendant committed the extrinsic act; 3) it is not too remote in time from the charged crime; and 4) the extrinsic act is similar to the crime charged.
Label: No Factor

Sentence 2: See United States v. Vizcarra-Martinez, 66 F.3d 1006, 1013 (9th Cir.1995).
Label: No Factor

Sentence 3: First, the prior case is material to the current case because knowledge was an element of the crime that the government had to prove.
Label: No Factor

Sentence 4: See United States v. Arambula-Ruiz, 987 F.2d 599, 603 (9th Cir.1993) (holding that the defendant’s prior conviction for possession of illegal drugs with intent to distribute is relevant to demonstrate knowledge, which is a material element of the crime of drug possession under 21 U.S.C. § 841).
Label: Legal Indications of Drug Use

Sentence 5: Further, the fact that the car was rented by a third party put knowledge at issue by allowing Goss to be able to claim more plausibly that he did not know there were drugs in the car.
Label: Unusual Vehicle Ownership

Sentence 6: Second, Goss does not dispute that the evidence was sufficient to support a finding that he committed the extrinsic act.
Label: No Factor

Sentence 7: Third, as Goss concedes, his prior conviction was not too remote in time.
Label: No Factor

Sentence 8: Fourth, to assess similarity, we determine whether “the prior act was one which would tend to make the existence of the defendant’s knowledge more probable than it would be without the evidence.”
Label: No Factor

Sentence 9: Id. (internal quotation marks omitted).
Label: No Factor

Sentence 10: The similarity between the current and the prior incidents satisfies this test:
Label: No Factor

Sentence 11: In both instances, Goss was found in a third-party rental car containing a radar detector and air fresheners, and Goss claimed no knowledge of the drugs found in the car.
Label: Unusual Vehicle Ownership, Masking Agent

Sentence 12: In the prior case, the jury disbelieved a claim of ignorance similar to that which Goss made in this case.
Label: No Factor

Sentence 13: Evidence of this prior incident makes Goss’s knowledge of the drugs in the second third-party rental car more probable than it would have been without that evidence.
Label: No Factor

Sentence 14: Because each of the four criteria is met, we hold that the district court did not abuse its discretion in allowing evidence of Goss’s prior drug conviction under FRE 404(b) for the limited purpose of proving that Goss had knowledge that the vehicle contained cocaine.
Label: No Factor

Sentence 15: Finally, we reject Goss’s argument that the evidence, even if admissible under FRE 404(b) to prove knowledge, should be excluded under FRE 403 because it is more prejudicial than probative, see United States v. Lynch, 367 F.3d 1148, 1160 (9th Cir.2004) (per curiam), as should be concluded where the evidence creates a tendency to suggest a decision on an improper basis, see United States v. Allen, 341 F.3d 870, 886 (9th Cir.2003).
Label: No Factor

Sentence 16: Here, any prejudice that the evidence may have created does not substantially outweigh the evidence’s probative value as delineated above.
Label: No Factor

Sentence 17: Further, the district court gave the jury adequate limiting instructions about the prior drug conviction evidence.
Label: No Factor

Sentence 18: AFFIRMED.
Label: No Factor

Sentence 19: This disposition is not appropriate for publication and is not precedent except as provided by Ninth Circuit Rule 36-3.
Label: No Factor

Sentence 20: Because the parties are familiar with the facts and procedural history, we do not restate them here except as necessary to explain our disposition.
Label: No Factor

Sentence 21: . Goss argues that because Officer Keeler did not detect any odor coming from the air fresheners, their presence should not help to give rise to reasonable suspicion.
Label: No Factor

Sentence 22: However, their abundance and location were sufficient to contribute to Officer Keeler's reasonable suspicion.
Label: No Factor

Sentence 23: . Goss disputes the district court's finding that Officer Keeler knew that the rental car was rented to a third party.
Label: Unusual Vehicle Ownership

Sentence 24: The district court’s finding, which we review for clear error, United States v. Colin, 314 F.3d 439, 442 (9th Cir.2002), is not clearly erroneous because the rental car agreement that Goss had already provided Officer Keeler on its face states that the car was rented to a person that is not Goss, and it did not list Goss as an additional driver.
Label: Unusual Vehicle Ownership

Sentence 25: Officer Keeler testified that he reviewed the agreement while filling out the citation and noted that the car was not rented to Goss.
Label: Unusual Vehicle Ownership

Sentence 26: . Specifically, Officer Keeler had received an "affirmative” that Goss had previous case involvement or criminal history involving drugs, i.e., "3500” history, which could have indicated anything from interrogation in a previous criminal narcotics matter to a prior felony conviction.
Label: Legal Indications of Drug Use

Sentence 27: . ' The district court found that at the time Officer Keeler decided to hold Goss for a drug sniff of the vehicle, Goss had reported having previously had police contact relating to a weapons offense.
Label: No Factor

Sentence 28: This finding is clearly erroneous; the transcript of the stop reflects that when Officer Keeler determined to detain Goss for the canine sniff, Goss had only referenced previous jail time generally; only after Officer Keeler ordered the canine unit did Goss clarify, at Officer Keeler's prompting, that that incident had involved a firearm.
Label: No Factor

Sentence 29: However, the district court’s error does not change our calculus that Officer Keeler had reasonable suspicion when he decided to prolong Goss's detention briefly for the canine unit.
Label: Suspicion Found

Sentence 30: We reject Goss’s argument relying upon United States v. Garcia-Orozco, 997 F.2d 1302, 1304 (9th Cir.1993).
Label: No Factor

Sentence 31: In Garcia-Orozco, the defendant had previously been convicted only of resisting arrest, not of importation or possession of drugs, which the court found significant in concluding that the evidence of the drugs in the previous car—to which, the court noted, the defendant had no demonstrated connection—did not tend to prove a material point.
Label: No Factor

Sentence 32: By contrast here, in the previous incident there was such a demonstrated connection; Goss had been convicted of a drug offense in which the jury had found an adequate basis to conclude that Goss knew about the powder cocaine in the first car.
Label: No Factor

Sentence 33: Dissenting/Concuring: 'Not Available', Dissenting/Concuring 2: 'Not Available', Dissenting/Concuring 3: 'Not Available'
Label: No Factor

