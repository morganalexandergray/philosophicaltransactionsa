Sentence 1: Case Name: 'David Michael HILL, Appellant, v. The STATE of Texas, Appellee'
Label: No Factor

Sentence 2: Citation: '135 S.W.3d 267', Court Name: 'Texas Courts of Appeals'
Label: No Factor

Sentence 3: Decision Date YYYY-MM-DD: '2004-04-15'
Label: No Factor

Sentence 4: ID No. : 9238294, 'OPINION
Label: No Factor

Sentence 5: LESLIE BROCK YATES, Justice.
Label: No Factor

Sentence 6: Appellant David Michael Hill pleaded guilty to the offense of possession of more than five pounds but less than fifty pounds of marijuana after the trial court denied his pretrial motion to suppress the evidence.
Label: No Factor

Sentence 7: The trial court assessed punishment at ten years’ deferred adjudication probation and a $3,000 fine.
Label: No Factor

Sentence 8: In one point of error, appellant claims the trial court erred in denying his pretrial motion to suppress.
Label: No Factor

Sentence 9: We affirm.
Label: No Factor

Sentence 10: Background
Label: No Factor

Sentence 11: On the morning of May 24, 2001, Lawrence Lilly, Jr., a trooper with the Texas Department of Public Safety (“DPS”), stopped a vehicle on I — 10 in Chambers County for speeding and failure to signal a lane change.
Label: No Factor

Sentence 12: The vehicle had two occupants.
Label: No Factor

Sentence 13: Appellant was the driver of the vehicle.
Label: No Factor

Sentence 14: His brother, Van Hill, was the passenger.
Label: No Factor

Sentence 15: Based on appellant’s extreme nervousness and appellant’s and Van’s inconsistent stories and implausible explanation for their trip, Lilly asked for consent to search the vehicle.
Label: Nervous Behavior or Appearance, Suspicious or Inconsistent Answers

Sentence 16: Appellant initially consented to a search, but later withdrew his consent.
Label: Refused Consent

Sentence 17: Lilly then called a canine unit to the scene, and detained appellant and Van about eight minutes past the original purpose of the traffic stop until the canine unit arrived.
Label: No Factor

Sentence 18: After the canine alerted on appellant’s vehicle, DPS found about eight pounds of marijuana in the vehicle’s trunk.
Label: Vehicle Contents Suggest Drugs

Sentence 19: Appellant does not contest the reasonableness of the original traffic stop.
Label: No Factor

Sentence 20: The question on appeal is whether Trooper Lilly had cause to detain appellant after the original purpose of the traffic stop.
Label: No Factor

Sentence 21: STANDARD OF REVIEW
Label: No Factor

Sentence 22: Once the investigation of the conduct that initiated the traffic stop was concluded, continued detention of appellant was permitted only if there was reasonable suspicion to do so.
Label: No Factor

Sentence 23: Woods v. State, 956 S.W.2d 33, 35, 38 (Tex.Crim.App.1997).
Label: No Factor

Sentence 24: To demonstrate reasonable suspicion, the State had to present to the trial court specific articulable facts, which, when combined with rational inferences from those facts, led Trooper Lilly to reasonably suspect in light of his experience and knowledge that appellant had engaged, was engaging, or was soon to engage in criminal activity.
Label: Suspicion Found

Sentence 25: This standard is an objective one: there need only be an objective basis for the detention; the subjective intent of the trooper conducting the detention is irrelevant.
Label: No Factor

Sentence 26: Garcia v. State, 827 S.W.2d 937, 943-44 (Tex.Crim.App.1992).
Label: No Factor

Sentence 27: The reasonable suspicion determination is made by considering the totality of the circumstances.
Label: No Factor

Sentence 28: Garcia v. State, 43 S.W.3d 527, 530 (Tex.Crim.App.2001).
Label: No Factor

Sentence 29: In conducting this totality-of-the-circumstances determination, we use a bifurcated standard of review.
Label: No Factor

Sentence 30: We give almost total deference to the trial court’s determination of historical facts supported by the record and the application of law to fact questions that turn on credibility and demeanor, however, we review de novo application of law to fact questions that do not turn upon credibility and demeanor.
Label: No Factor

Sentence 31: Carmouche v. State, 10 S.W.3d 323, 327 (Tex.Crim.App.2000); Guzman v. State, 955 S.W.2d 85, 89 (Tex.Crim.App.1997).
Label: No Factor

Sentence 32: Accordingly, we view the evidence and all reasonable inferences therefrom in the light most favorable to the trial court’s ruling, and sustain the ruling if it is sufficiently supported by the evidence and is correct on any theory of law applicable to the case.
Label: No Factor

Sentence 33: Villarreal v. State, 935 S.W.2d 134, 138 (Tex.Crim.App.1996).
Label: No Factor

Sentence 34: Discussion
Label: No Factor

Sentence 35: At the hearing on the motion to suppress, the State introduced the testimony of Trooper Lilly and Trooper Ted Smith, a canine handler with DPS.
Label: No Factor

Sentence 36: The traffic stop and search of appellant’s vehicle was videotaped by a camera mounted in Lilly’s patrol vehicle.
Label: No Factor

Sentence 37: The videotape was also admitted into evidence by the State, and we have reviewed it as a part of our review of the record.
Label: No Factor

Sentence 38: Trooper Lilly, who had been working with DPS for six years as of the date of the hearing, testified that when he pulled appellant over on May 24, 2001, his intent was to write appellant citations for the two driving violations.
Label: No Factor

Sentence 39: After Lilly asked appellant to step in front of the patrol car, appellant’s hands shook tremendously when he handed his driver’s license over to the trooper.
Label: Physical Appearance of Nervousness

Sentence 40: Appellant hesitated when asked about where he had come from that morning, but then responded “Pasadena.”
Label: Suspicious or Inconsistent Answers

Sentence 1: Appellant told Lilly he and Van had come from Florida to the Houston area to buy a truck because they could get one a lot cheaper in Houston.
Label: Unusual Travel Plans

Sentence 2: They had driven from Florida, had spent one day in Houston, and were headed back to Florida.
Label: Unusual Travel Plans

Sentence 3: Appellant told Lilly that they had found a couple of trucks.
Label: Unusual Travel Plans

Sentence 4: Lilly thought it implausible that someone would drive from Florida to spend just one day in Houston to shop for a truck.
Label: Unusual Travel Plans

Sentence 5: Appellant said he thought they had spent the night at the Pasadena Inn. Appellant initially told Lilly that a friend of “ours” had loaned him the car for the trip, but when he could not recall the last name of the car’s owner, appellant said that the owner was actually a friend of Van. Lilly thought it was odd that appellant was driving a car, but did not know the last name of the car’s owner.
Label: Unusual Travel Plans, Motorist license or Identification

Sentence 6: Appellant was very fidgety and fiddled with a piece of paper the whole time he spoke with the trooper.
Label: Nervous Behavior or Appearance

Sentence 7: Lilly then walked over to Van, who had remained seated in the vehicle.
Label: No Factor

Sentence 8: When he approached the vehicle, Van started looking at a magazine, and never looked up from it — he made no eye contact with Lilly.
Label: Nervous Behavior or Appearance

Sentence 9: Van said he thought they were coming from Pasadena and had been there looking for trucks.
Label: Unusual Travel Plans

Sentence 10: Van said he did not know if they had found any trucks yet because they were still looking.
Label: Unusual Travel Plans

Sentence 11: Van said he thought they had stayed at the Pasadena Motor Inn the previous night.
Label: Unusual Travel Plans

Sentence 12: When asked where they were going, Van said they were going to Baytown, Beaumont, and all around the area.
Label: Unusual Travel Plans

Sentence 13: Trooper Lilly told Van that they were past Baytown.
Label: Unusual Travel Plans

Sentence 14: Van said that they were going to be looking around in the area that day and then head back to Florida if they found something.
Label: Unusual Travel Plans

Sentence 15: Van told Lilly that he could not find his driver’s license although Lilly saw Van flip past the license as they were talking.
Label: Motorist license or Identification

Sentence 16: Lilly noticed that while he was questioning Van, appellant paced back and forth nervously.
Label: Nervous Behavior or Appearance

Sentence 17: Trooper Lilly then went back over to appellant.
Label: No Factor

Sentence 18: He asked appellant if he and Van were headed back home, and appellant responded that they were going to stop in Beaumont.
Label: Unusual Travel Plans

Sentence 19: When Lilly asked for consent to search the vehicle, appellant looked back at the vehicle twice and seemed unsure how to answer.
Label: Refused Consent

Sentence 20: Appellant initially consented to the search, but sensing hesitation on appellant’s part, Lilly informed appellant that he did not have to consent to a search.
Label: Refused Consent

Sentence 21: Appellant then withdrew his consent.
Label: Refused Consent

Sentence 22: Lilly went to his patrol car and called the canine unit, but it did not respond.
Label: No Factor

Sentence 23: He contacted dispatch to run the driver’s license numbers of appellant and Van. Lilly then made contact with the canine unit, which arrived approximately eight minutes after dispatch notified Lilly that appellant and Van did not have any outstanding warrants.
Label: No Factor

Sentence 24: Appellant contends the videotape contradicts the testimony of Trooper Lilly.
Label: No Factor

Sentence 25: Specifically, appellant argues that on the videotape (1) neither his hands nor voice appear to shake; (2) he does not hesitate when asked where he was coming from; (3) he uses “trucks” in the plural and Van uses “truck” in the singular; (4)
Label: No Factor

Sentence 26: Van asks if he needed to get out of the car; and (5) he was not pacing nervously.
Label: Nervous Behavior or Appearance

Sentence 27: After viewing the videotape, we conclude the events as captured by the camera do not undermine Lilly’s testimony at the suppression hearing.
Label: No Factor

Sentence 28: Due to the very poor quality of the videotape, it is impossible to determine whether appellant’s hands were shaking during the traffic stop.
Label: No Factor

Sentence 29: Moreover, appellant’s hands are somewhat obstructed because of where Trooper Lilly was standing.
Label: No Factor

Sentence 30: It is also unclear whether appellant hesitates when asked from where he was coming.
Label: No Factor

Sentence 31: Appellant makes a response to Trooper Lilly directly following the question, but his response is inaudible due to traffic noise.
Label: No Factor

Sentence 32: When the noise subsides somewhat, appellant says “Pasadena.”
Label: Unusual Travel Plans

Sentence 33: On the tape, it is appellant who uses “trucks” and Van who uses “truck.”
Label: Unusual Travel Plans

Sentence 34: However, Lilly’s conclusion that appellant and Van made inconsistent statements about the purpose of their trip is not undermined because he incorrectly recalled which one of the vehicle’s occupants used the singular rather than the plural.
Label: Suspicious or Inconsistent Answers

Sentence 35: Van does ask Trooper Lilly if he needs to get out of the vehicle, but this fact does not contradict Trooper Lilly’s testimony that Van made no eye contact with him and stated that he could not find his driver’s license although Lilly saw him flip past it while they were talking.
Label: Nervous Behavior or Appearance, Motorist license or Identification

Sentence 36: Appellant does pace in place and back and forth in front of the patrol car while Trooper Lilly was speaking with Van.
Label: Nervous Behavior or Appearance

Sentence 37: We disagree with appellant’s contention that his movement was minimal.
Label: No Factor

Sentence 38: The videotape also shows that appellant looked back at the vehicle three times (not two times) when Trooper Lilly asked for consent to search.
Label: Refused Consent

Sentence 39: Moreover, the videotape captured remarks Lilly made to the canine handler when he arrived at the scene: “Stories....
Label: No Factor

Sentence 40: This guy’s so nervous ...
Label: Nervous Behavior or Appearance

Sentence 1: I wonder if he’s going to pass out.”
Label: No Factor

Sentence 2: These comments further support the testimony of Trooper Lilly that the level of nervousness he was observing was not the typical amount of nervousness exhibited during a traffic stop.
Label: Nervous Behavior or Appearance

Sentence 3: Trooper Lilly testified to many facts that developed a reasonable suspicion in his mind that appellant was engaging or was soon to engage in criminal activity.
Label: Suspicion Found

Sentence 4: See id.
Label: No Factor

Sentence 5: An officer is entitled to rely on all of the information obtained during the course of his contact with a suspect in developing articulable facts that would justify a continued investigatory detention.
Label: No Factor

Sentence 6: Razo v. State, 577 S.W.2d 709, 711 (Tex.Crim.App. [Panel Op.] 1979).
Label: No Factor

Sentence 7: Trooper Lilly said that (1) he thought it was odd that appellant, who was driving, did not know the last name of the vehicle’s owner; (2) appellant and Van were not consistent with regard to the number of trucks they planned to purchase or about the specific plans for the day of the traffic stop; (3) he thought it was implausible that someone would make a one-day trip from Florida to Houston to purchase a truck (or trucks); (4) appellant exhibited an extreme level of nervousness; (5)
Label: Unusual Vehicle Ownership, Suspicious or Inconsistent Answers, Unusual Travel Plans, Nervous Behavior or Appearance

Sentence 8: Van made no eye contract at all with him; and (6)
Label: Nervous Behavior or Appearance

Sentence 9: Van said he could not find his driver’s license even though Lilly saw him flip past it while they were talking.
Label: Motorist license or Identification

Sentence 10: It is not important that any of these facts when viewed alone may appear purely innocent or may not rise to the level of reasonable suspicion.
Label: No Factor

Sentence 11: See Telshow v. State, 964 S.W.2d 303, 306 (TexApp.-Houston [14th Disk] 1998, no pet.) (stating that “there may be instances when a person’s conduct, viewed in a vacuum, appears purely innocent, yet when viewed in the light of the totality of the circumstances, those actions give rise to reasonable suspicion”).
Label: No Factor

Sentence 12: Additionally, we note that, although reasonable suspicion must be based on articulable facts rather than an unpar-tieularized hunch, the level of suspicion required for a detention “is obviously less demanding than that for probable cause” and probable cause only requires “ ‘a fair probability that contraband or evidence of a crime will be found.’ ”
Label: No Factor

Sentence 13: United States v. Sokolow, 490 U.S. 1, 7, 109 S.Ct. 1581, 104 L.Ed.2d 1 (1989) (quoting Illinois v. Gates, 462 U.S. 213, 238, 103 S.Ct. 2317, 76 L.Ed.2d 527 (1983)) (“The Fourth Amendment requires ‘some minimal level of objective justification’ [for a detention] considerably less than proof of wrongdoing by a preponderance of the evidence.”) (quoting INS v. Delgado, 466 U.S. 210, 217, 104 S.Ct. 1758, 80 L.Ed.2d 247 (1984)).
Label: No Factor

Sentence 14: Based on our review of the totality of the circumstances, in light of the trooper’s experience and knowledge, we find Trooper Lilly corroborated enough facts to justify detention of appellant until the canine unit arrived at the scene.
Label: Suspicion Found

Sentence 15: We overrule appellant’s sole point of error, and affirm the trial court’s judgment.
Label: No Factor

Sentence 16: . Trooper Lilly testified the videotape accurately reflects the traffic stop, but noted that, because of the videotape’s poor quality, it does not completely capture the level of appellant’s nervousness, such as the shaking of appellant’s hands.
Label: Nervous Behavior or Appearance

Sentence 17: . Appellant relies on United States v. Dortch, 199 F.3d 193 (1999), and Davis v. State, 947 S.W.2d 240 (Tex.Crim.App.1997).
Label: No Factor

Sentence 18: The cases are distinguishable because in both cases the officers indicated to the defendants that they were free to leave the scene, but that their vehicles were being detained.
Label: No Factor

Sentence 19: Dortch, 199 F.3d at 196; Davis, 947 S.W.2d at 241.
Label: No Factor

Sentence 20: The courts in boffi cases found the instruction to each defendant that he could leave seriously undercut a finding of reasonable suspicion.
Label: No Factor

Sentence 21: Dortch, 199 F.3d at 199 (stating that, because the defendant remained at scene sifter he was told he could leave, the police could not rely on their assertion that the defendant appeared "as if he was looking for a place to run”); Davis, 947 S.W.2d at 241 (“Indeed, when viewed in an objective fashion, no known fact, or rational inferences from those facts, would support the conclusion that appellant was engaged in or soon would engage in criminal activity.
Label: No Factor

Sentence 22: The officers obviously made the same determination because they informed appellant that he was free to leave.”) (citations omitted).', 
Label: No Factor

Sentence 23: Dissenting/Concuring:  'Not Available',     Dissenting/Concuring 2:  'Not Available',     Dissenting/Concuring 3:  'Not Available'

