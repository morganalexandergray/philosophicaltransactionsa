TASK
In this task, we are attempting to label sentences to assess whether they contain important information.  These facts are tied to a specific legal problem which we have described below: 

-START LEGAL PROBLEM EXPLANATION-
We are interested in highway drug-interdiction. This occurs when a motorist is stopped by police for violating a traffic law and is subsequently detained based on an officer’s reasonable suspicion that the motorist is trafficking or possessing drugs.
An example of drug interdiction: John Smith, a motorist, is driving down interstate 95 in Miami Dade County, Florida with a brake light out and an occluded license plate. Officer Brown, who has been following Mr. Smith, initiates a traffic stop due to the light and the license plate. After Mr. Smith pulls over, Officer Brown observes Mr. Smith is moving around and appears to be reaching under his seat. After approaching the vehicle, Officer Brown notices that Mr. Smith is more nervous that someone would usually be when stopped for a traffic offense. He notices that Mr. Smith is sweating, shaking, and avoiding eye contact. Mr. Smith hands Officer Brown his license and registration, and vehicle rental agreement, which shows that Mr. Smith rented the vehicle in Philadelphia, and the car is due back there in 1 day. Officer Brown notices two cellphones in the center console, 1 prepaid, and 1 iPhone; he sees numerous cans of Redbull, and McDonald’s bags strewn about the vehicle; he notices a number of air fresheners hanging from the rearview mirror; he sees that instead of placing his luggage in the trunk, Mr. Smith has kept a small amount of luggage in the rear of the vehicle. Officer Brown asks Mr. Smith where he is coming from and where he is going. Mr. Smith states that he is coming from Washington D.C. and is headed to Arkansas to see family. When Officer Smith asks why, if he was headed to Arkansas to see family, he was in Miami, Mr. Smith states that he is actually seeing his girlfriend, who he cannot name, in Miami, before heading west to Arkansas to see his family. Based on the foregoing, Officer Brown believes that Mr. Smith is actually trafficking drugs, and detains him for 20 minutes until a drug dog can complete an open air sniff of the vehicle. Upon completion of the sniff, the dog indicates that there are drugs in the trunk of the vehicle. After opening the trunk, Officer Brown seizes 5kg of cocaine from the vehicle. Mr. Smith is arrested, and subsequently charged.
The legal question presented from these facts is whether Officer Brown had reasonable suspicion based upon articulable facts (his observations) that criminal activity was afoot. If so, then he could detain Mr. Smith for the time necessary to complete a canine sniff of the vehicle. If not, Mr. Smith’s constitutional rights have been violated due to the detention. We will be annotating cases that present the same legal problem. Although the facts (factors) of each case will be different to some degree (small or great), this is the legal problem that must be examined. There are certain kinds of facts that we are interested in identifying. Below we refer to these facts as factors.
-END LEGAL PROBLEM EXPLANATION-

-START INSTRUCTIONS-
YOU will assess sentences to and determine whether they belong to any of the following categories based on the content of the sentence and the descriptions below: 

1. Furtive Movement - Use this label if the driver or passenger in the vehicle makes a suspicious movement, such as reaching beneath a seat, or in a purse or bag, or around a waistband, or in a pocket, which is commonly an attempt to conceal contraband or a weapon.  This also includes attempting to evade custody such as taking a long time to pull the vehicle over.  Simple driving mistakes do not count under this factor.
2. Nervous Behavior or Appearance - Use this label if the motorist appears to be nervous, has shaking hands or a heavy heartbeat, or is sweating even though the temperature is cool.  Also use this label if the the motorist behaves in a nervous way, avoids making eye contact with the officer, focuses on a bag or compartment in the car, appears to be agitated, confronts the officer, gives the officer a curt response, volunteers too much information, or behaves in an overly friendly way toward the officer. 
3. Suspicious or Inconsistent Answers - Use this label if the driver made an answer to an officer that is evasive, nonsensical, inconsistent, contradictory, impossible, vague, incomplete, unusual, or untruthful.
4. Motorist license or Identification - Use this label if the motorist cannot provide the officer with a license or identification or if the license is invalid, revoked, fake, the wrong color, flimsy, or in someone else’s name. 
5. Driver Status - Use this label only if the driver of the vehicle is male, young, or not from the state in which the officer pulled the car over. 
6. Refused Consent - Use this label if the driver refused to consent to the officer’s request to search the automobile.
7. Legal Indications of Drug Use - Use this label if the motorist has an active arrest warrant for a drug related charge or if the motorist has been arrested for or convicted of a drug related offense in the past or if the officer knows that the motorist has abused, possessed, dealed, or trafficked in drugs in the past. 
8. Motorist's Appearance Related to Drug Use or Sale - Use this label if driver looks like they USE DRUGS such as needle track marks, rotten teeth, scabbing, bloodshot eyes, dilated pupils, unwashed hair, dirty clothes, body odor or dirty skin or if the driver is wearing suspicious clothing, such as expensive jewelry, expensive or luxury clothing, or clothing with images of drugs (e.g., marijuana leaves).
9. Possible Drug Route - Use this label if the driver’s route is from or to a city or area, which is known for drug trafficking or high crime rates, or if the driver stops the vehicle late at night or early in the morning in an area known for criminal activity. 
10. Unusual Travel Plans - Use this label if the motorist appears to be headed to a location that the motorist has already passed, is traveling on a road that does not lead to the stated destination, plans a trip that is too far to drive in a reasonable time (e.g., driving from Philadelphia to Miami in a single night), claims to be driving a long round trip in a one-day rental vehicle, or has other unusual travel plans.
11. Expensive Vehicle - Use this label if the motorist is driving a kind of vehicle associated with illicit drug use or trafficking such as a luxury or expensive vehicle, e.g., a BMW, Mercedes, Cadillac, or Range Rover.
12. Vehicle License Plate or Registration - Use this label if the vehicle's license plate is missing, shielded from view, or from out of state, or if the license plate or vehicle registration has expired.
13. Unusual Vehicle Ownership - Use this label if the vehicle is rented or if the vehicle is owned by someone not in the vehicle, unknown to the driver, or about whom the driver knows very little or claims to be a distant relative. 
14. Indicia of Hard Travel - Use this label if the motorist has been driving a great distance for a long time and is attempting to make as few stops as possible, or if the vehicle contained fast-food bags, lots of trash, energy drinks or substances designed to keep the consumer awake, such as Redbull, Five-Hour Energy, or Energize Capsules. 
15. Masking Agent - Use this label if the vehicle contained a substance or product used to mask the odor of drugs such as air fresheners (e.g., Little Trees, Febreze, Glade, etc.), scented dryer sheets or baby wipes, or strongly smelling tobacco products, cigars or cigarettes or other strong smells.
16. Vehicle Contents Suggest Drugs - This label SHOULD NOT be used for anything found after a canine has sniffed the car. Use this label if the vehicle smells of drug use (e.g., smells of raw or burnt marijuana or of chemicals such as meth or heroin) or contains drugs in plain view, or items used to ingest or use drugs such as pipes, syringes, needles, lighters, torches, drug paraphernalia, cigarette rolling papers (e.g., Raw or ZigZag brand rolling papers), marijuana cigarettes, joints, or blunts, vials, prescription bottles, or small glass containers used to hold drugs.  This label also applies if there are large amounts of cash or large bill denominations (e.g., $100 bills).
17. Suspicious Communications Device - Use this label if the officer observes suspicious communications devices such as multiple cell phones or a prepaid burner phone. 
18. Suspicious Storage - Use this label if only a small amount of luggage is visible given the stated nature of the trip, if the luggage is stored in the back of the cab instead of the trunk, if the vehicle has an unusual or secret storage compartment  or a car window that will not go down.
29. Suspicion Found - Use this label if the court deciding the case concludes, based on the facts present in the case, that the officer had reasonable suspicion to detain the suspect. 
20. Suspicion Not Found - Use this label if the court deciding the case concludes, based on the facts present in the case, that the officer did not have reasonable suspicion to detain the suspect.
21. No Factor - If none of the factors apply or the court is citing or quoting a legal rule, select this option.

You are also to follow these specific rules:

Typically, a sentence will describe a single factor, however, in some cases, a single sentence may include more than one factor.  If a sentence describes more than one factor, give a label for each factor in the sentence. 

Here are some specific rules you should follow:

1. Precepts or rules of law described by the court should not be labelled.  For example: "A police officer may extend the detention beyond the scope of a routine traffic stop if the driver consents or the officer has reasonable suspicion of criminal activity. Id. at 336."

2. The data is in the form of an appellate court opinion.  Conclusions reached by a lower or a trial court should not be labelled.  Sample language would be "The district court concluded that the officer had probable cause for the search".

3. The charges before the court are not to be considered Legal Indications of Drug Use.  For example: "The defendant is charged with possession with intent to distribute," should not be labeled.  However, "A record check revealed that the motorist had a conviction for drug possession" should be labelled as Legal Indication of Drug Use.

4. A sentence may be from a concurring or dissenting opinion. Do not annotate concurring or dissenting opinions even if they contain sentences describing factors.

5. Arguments by the parties should never be treated as a factor.  For example: "Gray argues that there was not reasonable suspicion for a prolonged detention".  Because this describes an argument, it is not a fact. Common words for argument are challenges, maintains, proffers, alleges. 

6. Sentences that contain solely a legal citation should be labelled as No Factor.  For example: "United States v. Oliver, 343 U.S. 900 (2019)"

7. Statements that describe a legal issue are not a factor.  For example: "The question before the court is whether the officer had reasonable suspicion to detain the motorist?"

8. Officer testimony can support the finding of a factor. 

You should apply a label for each sentence. Here are some examples: 

1. Sentence: Officer Guthrie testified that while the above exchanges were taking place, he noticed that the driver, Arturo Tapia, seemed nervous, and that his hands were shaking.
Label: Physical Appearance of Nervousness

2. Sentence: Upon reviewing the vehicle's documentation, Trooper Conrad discovered that the vehicle belonged to an absent third party, which, in his experience, raised his suspicion that the vehicle was being used for drug trafficking.
Label: Unusual Vehicle Ownership

3. Sentence: Typically, in my training and experience, the overwhelming smell of air fresheners in a rental vehicle is consistent with trying to mask the odor of controlled substances.
Label: Masking Agent, Unusual Vehicle Ownership
-END INSTRUCTIONS-

-START LABELLING-

-EXPECTED OUTPUT-
Sentence [Number]: [Sentence [number] contents]
Label: [label for sentence [number]]

Label the following sentences individually: 

Sentence 1: Case Name:  'STATE of North Carolina v. Samuel Anthony CAMPOLA, Defendant.', 
Sentence 2: Citation:  '812 S.E.2d 681',     Court Name:  'Court of Appeals of North Carolina', 
Sentence 3: Decision Date YYYY-MM-DD:  '2018-03-06', 
Sentence 4: ID No. :  12650399,     'INMAN, Judge.
Sentence 5: When a police officer initiates a traffic stop and, in the course of accomplishing the mission of the stop, develops reasonable suspicion that the driver or passenger is engaged in illegal drug activity, the officer may prolong the stop to investigate that suspicion without violating the passenger\'s Fourth Amendment rights.
Sentence 6: I. FACTUAL AND PROCEDURAL HISTORY
Sentence 7: Defendant, a passenger in a vehicle stopped for a traffic violation, was indicted for possession of heroin and possession of drug paraphernalia on 13 July 2015 after a search of the vehicle revealed the presence of the drug.
Sentence 8: Prior to trial, Defendant filed a motion to suppress all evidence obtained as a result of the traffic stop, contending that the police officer executing the stop had impermissibly and unconstitutionally extended the traffic stop without reasonable suspicion or probable cause.
Sentence 9: Following a hearing on the motion to suppress, the trial court orally denied the motion after making findings of fact and conclusions of law, and later entered a written order consistent with its oral ruling.
Sentence 10: In the course of trial, Defendant\'s counsel objected to the introduction of the evidence subject to the earlier motion and was overruled by the trial court.
Sentence 11: The jury found Defendant guilty on both charges, and the trial court entered its judgment on 1 September 2016.
Sentence 12: Defendant timely filed his notice of appeal on 8 September 2016.
Sentence 13: The findings in the trial court\'s written order are summarized as follows:
Sentence 14: On 26 November 2014, Officer Matthew Freeman ("Officer Freeman"), a patrol officer with the Charlotte-Mecklenburg Police Department ("CMPD"), was on patrol in a vehicle near Nations Ford Road in Charlotte, North Carolina.
Sentence 15: Officer Freeman had received training in the identification of drugs and had been a patrolman for almost six years, participating in 100 drug arrests.
Sentence 16: In the course of the patrol, Officer Freeman pulled into the parking lot of a Motel 6.
Sentence 17: He considered the location a high crime area.
Sentence 18: When Officer Freeman entered the parking lot, he saw two white males sitting in a green Honda.
Sentence 19: After Officer Freeman passed by, the Honda exited the parking lot at a high rate of speed.
Sentence 20: Officer Freeman followed the car out of the parking lot as it drove toward an intersection.
Sentence 21: At the intersection, the car turned right without yielding the right-of-way to oncoming traffic turning left through the intersection, nearly causing a collision.
Sentence 22: Officer Freeman turned on his emergency lights and siren and stopped the vehicle.
Sentence 23: Once the car stopped, Officer Freeman observed that it displayed a temporary license tag.
Sentence 24: He approached the driver\'s side and asked the driver for his license, registration, and proof of insurance, observing that the driver was more nervous than usual.
Sentence 25: The driver provided Officer Freeman with his insurance information, the car\'s title, and a South Carolina driver\'s license, which identified him as Matthew Matchin ("Matchin").
Sentence 26: When asked why they were at the motel, Matchin stated that he and his passenger did not go into a room there.
Sentence 27: The passenger did not have any identifying documents, but identified himself by name to Officer Freeman.
Sentence 28: Officer Freeman then returned to his patrol car to run the above information through the onboard computer.
Sentence 29: Once in his patrol car, Officer Freeman called for a back-up unit to assist him, as there were multiple occupants in the vehicle.
Sentence 30: While he waited for another officer to arrive, Officer Freeman entered the VIN number for the stopped vehicle through a 50-state database, as he did not have a state registration with which to search.
Sentence 31: This search took longer than a search using a state vehicle registration.
Sentence 32: As a result of the search, Officer Freeman determined that the vehicle was not stolen and that neither Matchin nor Defendant had any outstanding warrants.
Sentence 33: However, Officer Freeman found multiple prior drug arrests for both Matchin and Defendant.
Sentence 34: Shortly after the above searches were completed, and twelve minutes after the stop was initiated, another CMPD officer, Damon Weston ("Officer Weston"), arrived in response to Officer Freeman\'s earlier call for back-up.
Sentence 35: Officer Freeman spoke with Officer Weston on his arrival, and told him about the stop as well as the information gleaned from Matchin, Defendant, and the database searches.
Sentence 36: Officer Freeman told Officer Weston that he was going to issue Matchin a warning for his unsafe movement, but asked Officer Weston to approach Defendant.
Sentence 37: The officers approached the stopped vehicle together some fourteen minutes after the stop was initiated.
Sentence 38: Officer Freeman asked Matchin to step to the rear of the vehicle so that they could see the intersection where the illegal turn occurred while Officer Freeman explained his warning.
Sentence 39: Officer Freeman then gave Matchin a warning, returned the documents, and requested a search of the vehicle.
Sentence 40: Matchin declined the request.



TASK
In this task, we are attempting to label sentences to assess whether they contain important information.  These facts are tied to a specific legal problem which we have described below: 

-START LEGAL PROBLEM EXPLANATION-
We are interested in highway drug-interdiction. This occurs when a motorist is stopped by police for violating a traffic law and is subsequently detained based on an officer’s reasonable suspicion that the motorist is trafficking or possessing drugs.
An example of drug interdiction: John Smith, a motorist, is driving down interstate 95 in Miami Dade County, Florida with a brake light out and an occluded license plate. Officer Brown, who has been following Mr. Smith, initiates a traffic stop due to the light and the license plate. After Mr. Smith pulls over, Officer Brown observes Mr. Smith is moving around and appears to be reaching under his seat. After approaching the vehicle, Officer Brown notices that Mr. Smith is more nervous that someone would usually be when stopped for a traffic offense. He notices that Mr. Smith is sweating, shaking, and avoiding eye contact. Mr. Smith hands Officer Brown his license and registration, and vehicle rental agreement, which shows that Mr. Smith rented the vehicle in Philadelphia, and the car is due back there in 1 day. Officer Brown notices two cellphones in the center console, 1 prepaid, and 1 iPhone; he sees numerous cans of Redbull, and McDonald’s bags strewn about the vehicle; he notices a number of air fresheners hanging from the rearview mirror; he sees that instead of placing his luggage in the trunk, Mr. Smith has kept a small amount of luggage in the rear of the vehicle. Officer Brown asks Mr. Smith where he is coming from and where he is going. Mr. Smith states that he is coming from Washington D.C. and is headed to Arkansas to see family. When Officer Smith asks why, if he was headed to Arkansas to see family, he was in Miami, Mr. Smith states that he is actually seeing his girlfriend, who he cannot name, in Miami, before heading west to Arkansas to see his family. Based on the foregoing, Officer Brown believes that Mr. Smith is actually trafficking drugs, and detains him for 20 minutes until a drug dog can complete an open air sniff of the vehicle. Upon completion of the sniff, the dog indicates that there are drugs in the trunk of the vehicle. After opening the trunk, Officer Brown seizes 5kg of cocaine from the vehicle. Mr. Smith is arrested, and subsequently charged.
The legal question presented from these facts is whether Officer Brown had reasonable suspicion based upon articulable facts (his observations) that criminal activity was afoot. If so, then he could detain Mr. Smith for the time necessary to complete a canine sniff of the vehicle. If not, Mr. Smith’s constitutional rights have been violated due to the detention. We will be annotating cases that present the same legal problem. Although the facts (factors) of each case will be different to some degree (small or great), this is the legal problem that must be examined. There are certain kinds of facts that we are interested in identifying. Below we refer to these facts as factors.
-END LEGAL PROBLEM EXPLANATION-

-START INSTRUCTIONS-
YOU will assess sentences to and determine whether they belong to any of the following categories based on the content of the sentence and the descriptions below: 

1. Furtive Movement - Use this label if the driver or passenger in the vehicle makes a suspicious movement, such as reaching beneath a seat, or in a purse or bag, or around a waistband, or in a pocket, which is commonly an attempt to conceal contraband or a weapon.  This also includes attempting to evade custody such as taking a long time to pull the vehicle over.  Simple driving mistakes do not count under this factor.
2. Nervous Behavior or Appearance - Use this label if the motorist appears to be nervous, has shaking hands or a heavy heartbeat, or is sweating even though the temperature is cool.  Also use this label if the the motorist behaves in a nervous way, avoids making eye contact with the officer, focuses on a bag or compartment in the car, appears to be agitated, confronts the officer, gives the officer a curt response, volunteers too much information, or behaves in an overly friendly way toward the officer. 
3. Suspicious or Inconsistent Answers - Use this label if the driver made an answer to an officer that is evasive, nonsensical, inconsistent, contradictory, impossible, vague, incomplete, unusual, or untruthful.
4. Motorist license or Identification - Use this label if the motorist cannot provide the officer with a license or identification or if the license is invalid, revoked, fake, the wrong color, flimsy, or in someone else’s name. 
5. Driver Status - Use this label only if the driver of the vehicle is male, young, or not from the state in which the officer pulled the car over. 
6. Refused Consent - Use this label if the driver refused to consent to the officer’s request to search the automobile.
7. Legal Indications of Drug Use - Use this label if the motorist has an active arrest warrant for a drug related charge or if the motorist has been arrested for or convicted of a drug related offense in the past or if the officer knows that the motorist has abused, possessed, dealed, or trafficked in drugs in the past. 
8. Motorist's Appearance Related to Drug Use or Sale - Use this label if driver looks like they USE DRUGS such as needle track marks, rotten teeth, scabbing, bloodshot eyes, dilated pupils, unwashed hair, dirty clothes, body odor or dirty skin or if the driver is wearing suspicious clothing, such as expensive jewelry, expensive or luxury clothing, or clothing with images of drugs (e.g., marijuana leaves).
9. Possible Drug Route - Use this label if the driver’s route is from or to a city or area, which is known for drug trafficking or high crime rates, or if the driver stops the vehicle late at night or early in the morning in an area known for criminal activity. 
10. Unusual Travel Plans - Use this label if the motorist appears to be headed to a location that the motorist has already passed, is traveling on a road that does not lead to the stated destination, plans a trip that is too far to drive in a reasonable time (e.g., driving from Philadelphia to Miami in a single night), claims to be driving a long round trip in a one-day rental vehicle, or has other unusual travel plans.
11. Expensive Vehicle - Use this label if the motorist is driving a kind of vehicle associated with illicit drug use or trafficking such as a luxury or expensive vehicle, e.g., a BMW, Mercedes, Cadillac, or Range Rover.
12. Vehicle License Plate or Registration - Use this label if the vehicle's license plate is missing, shielded from view, or from out of state, or if the license plate or vehicle registration has expired.
13. Unusual Vehicle Ownership - Use this label if the vehicle is rented or if the vehicle is owned by someone not in the vehicle, unknown to the driver, or about whom the driver knows very little or claims to be a distant relative. 
14. Indicia of Hard Travel - Use this label if the motorist has been driving a great distance for a long time and is attempting to make as few stops as possible, or if the vehicle contained fast-food bags, lots of trash, energy drinks or substances designed to keep the consumer awake, such as Redbull, Five-Hour Energy, or Energize Capsules. 
15. Masking Agent - Use this label if the vehicle contained a substance or product used to mask the odor of drugs such as air fresheners (e.g., Little Trees, Febreze, Glade, etc.), scented dryer sheets or baby wipes, or strongly smelling tobacco products, cigars or cigarettes or other strong smells.
16. Vehicle Contents Suggest Drugs - This label SHOULD NOT be used for anything found after a canine has sniffed the car. Use this label if the vehicle smells of drug use (e.g., smells of raw or burnt marijuana or of chemicals such as meth or heroin) or contains drugs in plain view, or items used to ingest or use drugs such as pipes, syringes, needles, lighters, torches, drug paraphernalia, cigarette rolling papers (e.g., Raw or ZigZag brand rolling papers), marijuana cigarettes, joints, or blunts, vials, prescription bottles, or small glass containers used to hold drugs.  This label also applies if there are large amounts of cash or large bill denominations (e.g., $100 bills).
17. Suspicious Communications Device - Use this label if the officer observes suspicious communications devices such as multiple cell phones or a prepaid burner phone. 
18. Suspicious Storage - Use this label if only a small amount of luggage is visible given the stated nature of the trip, if the luggage is stored in the back of the cab instead of the trunk, if the vehicle has an unusual or secret storage compartment  or a car window that will not go down.
29. Suspicion Found - Use this label if the court deciding the case concludes, based on the facts present in the case, that the officer had reasonable suspicion to detain the suspect. 
20. Suspicion Not Found - Use this label if the court deciding the case concludes, based on the facts present in the case, that the officer did not have reasonable suspicion to detain the suspect.
21. No Factor - If none of the factors apply or the court is citing or quoting a legal rule, select this option.

You are also to follow these specific rules:

Typically, a sentence will describe a single factor, however, in some cases, a single sentence may include more than one factor.  If a sentence describes more than one factor, give a label for each factor in the sentence. 

Here are some specific rules you should follow:

1. Precepts or rules of law described by the court should not be labelled.  For example: "A police officer may extend the detention beyond the scope of a routine traffic stop if the driver consents or the officer has reasonable suspicion of criminal activity. Id. at 336."

2. The data is in the form of an appellate court opinion.  Conclusions reached by a lower or a trial court should not be labelled.  Sample language would be "The district court concluded that the officer had probable cause for the search".

3. The charges before the court are not to be considered Legal Indications of Drug Use.  For example: "The defendant is charged with possession with intent to distribute," should not be labeled.  However, "A record check revealed that the motorist had a conviction for drug possession" should be labelled as Legal Indication of Drug Use.

4. A sentence may be from a concurring or dissenting opinion. Do not annotate concurring or dissenting opinions even if they contain sentences describing factors.

5. Arguments by the parties should never be treated as a factor.  For example: "Gray argues that there was not reasonable suspicion for a prolonged detention".  Because this describes an argument, it is not a fact. Common words for argument are challenges, maintains, proffers, alleges. 

6. Sentences that contain solely a legal citation should be labelled as No Factor.  For example: "United States v. Oliver, 343 U.S. 900 (2019)"

7. Statements that describe a legal issue are not a factor.  For example: "The question before the court is whether the officer had reasonable suspicion to detain the motorist?"

8. Officer testimony can support the finding of a factor. 

You should apply a label for each sentence. Here are some examples: 

1. Sentence: Officer Guthrie testified that while the above exchanges were taking place, he noticed that the driver, Arturo Tapia, seemed nervous, and that his hands were shaking.
Label: Physical Appearance of Nervousness

2. Sentence: Upon reviewing the vehicle's documentation, Trooper Conrad discovered that the vehicle belonged to an absent third party, which, in his experience, raised his suspicion that the vehicle was being used for drug trafficking.
Label: Unusual Vehicle Ownership

3. Sentence: Typically, in my training and experience, the overwhelming smell of air fresheners in a rental vehicle is consistent with trying to mask the odor of controlled substances.
Label: Masking Agent, Unusual Vehicle Ownership
-END INSTRUCTIONS-

-START LABELLING-

-EXPECTED OUTPUT-
Sentence [Number]: [Sentence [number] contents]
Label: [label for sentence [number]]

Label the following sentences individually: 

Sentence 1: While Officer Freeman was speaking with Matchin, Officer Weston approached Defendant and observed a syringe cap in the driver\'s seat.
Sentence 2: Officer Weston asked Defendant to step out of the car and Defendant complied.
Sentence 3: At this time, Officer Weston observed a second syringe cap in the passenger\'s seat.
Sentence 4: Now four minutes into their respective conversations, Officer Weston approached Officer Freeman and informed him of the syringe caps.
Sentence 5: Officer Freeman asked Matchin if he was diabetic, and he responded that he was not.
Sentence 6: Officer Freeman then searched the vehicle, discovering two syringes and a spoon with a brown "liquidy" substance.
Sentence 7: The officers then arrested Matchin and Defendant.
Sentence 8: At the suppression hearing, the trial court received the benefit of testimony from Officer Freeman and Officer Weston, as well as documentary evidence in the form of a dash-cam video of the stop from Officer Freeman\'s patrol car.
Sentence 9: Officer Freeman testified that this portion of Nations Ford Road was part of his usual patrol, and that he had personally responded to a high number of drug arrests, shootings, and robberies in the area.
Sentence 10: Officer Weston also testified that the motels around Nations Ford Road were "high crime, high drug areas."
Sentence 11: Officer Freeman testified that, when he pulled into the Motel 6 parking lot and spotted the green Honda, he intended to get out of his vehicle to speak with its occupants.
Sentence 12: But, before he could park his vehicle, the two men looked up at Officer Freeman with "a kind of surprised look on their face[s], wide[-]eyed type of look" and then exited the parking lot in the car at "a high rate of speed."
Sentence 13: The dash-cam video shows Officer Freeman following the green Honda out of the parking lot and the Honda can be observed turning right at a red light without yielding to oncoming traffic turning left through the intersection, nearly causing a collision.
Sentence 14: The video\'s timestamp shows Officer Freeman stopped the Honda and exited his vehicle at 4:25 P.M.
Sentence 15: Officer Freeman testified that he saw the car had a temporary paper tag from Pennsylvania.
Sentence 16: He also testified that Matchin seemed "overly nervous, more than ... on a normal traffic stop, more shaking of the hands.
Sentence 17: Kind of not really directly answering [questions] ....
Sentence 18: Just kind of stumbling a bit about the answer."
Sentence 19: Officer Freeman also detailed the contents of his conversation with Matchin in his testimony, stating that Matchin claimed that he went into the Motel 6 to meet a friend in the lobby, although he could not remember the friend\'s name.
Sentence 20: Per the dash-cam video, Officer Freeman returned to his patrol car at 4:26 P.M., less than two minutes into the stop.
Sentence 21: Officer Freeman testified that he radioed for back-up upon returning to his vehicle, consistent with general safety and CMPD policy concerning traffic stops with multiple occupants.
Sentence 22: While he waited for another officer to arrive, Officer Freeman entered the VIN number for the stopped vehicle through a 50-state database, as he did not have a permanent state license plate number with which to search.
Sentence 23: This national database search alone took between five to eight minutes, longer than a search using a permanent license plate registered in a single state.
Sentence 24: Officer Freeman also ran Matchin\'s and Defendant\'s names through a local database of arrest and other records, followed by a search of a statewide database.
Sentence 25: These searches revealed multiple prior drug arrests for both Matchin and Defendant.
Sentence 26: Officer Freeman testified that his conduct up to this point in the stop, including the questioning of Matchin and Defendant, his database searches, and his request for back-up, were standard procedure in the course of a traffic stop involving multiple occupants.
Sentence 27: On the dash-cam video, chimes from Officer Freeman\'s onboard computer can be heard multiple times between 4:27 P.M., a minute after he returned to his patrol car, and 4:36 P.M. Officer Freeman testified that the chimes indicated the return of a result from one of his database searches.
Sentence 28: Less than a minute after the last chime played in the dash-cam excerpt, Officer Freeman can be heard talking in person with Officer Weston, and Officer Freeman testified that he was still searching for Defendant\'s information and receiving results from the statewide database when Officer Weston arrived on the scene.
Sentence 29: The conversation between the officers was captured on the dash-cam video played for the trial court.
Sentence 30: It begins with Officer Freeman stating that "the guy in the front passenger seat is named Samuel Campola.
Sentence 31: I\'ve heard that name before."
Sentence 32: After providing Defendant\'s prior arrest history to Officer Weston, Officer Freeman then describes his arrival at the Motel 6, where "as soon as they see me [Officer Freeman], his eyes get real big and [they] just take off."
Sentence 33: Officer Freeman is next heard describing the vehicle\'s failure to yield to oncoming traffic, and the officers discuss how to resolve the stop.
Sentence 34: Officer Freeman provides Officer Weston with Matchin\'s arrest history, and then reiterates that he had "heard of Samuel Campola before" and that Defendant\'s physical appearance indicated he was a heroin user.
Sentence 35: He then tells Officer Weston his suspicion that "they [Matchin and Defendant] were either buying or selling over there [at the Motel 6.]"
Sentence 36: Officers Freeman and Weston next agree that Officer Freeman will approach the driver, ask him to exit the vehicle, and issue him a warning while Officer Weston speaks with Defendant.
Sentence 37: The officers agree on the course of action, and leave the vehicle at 4:39 P.M.
Sentence 38: The video shows the officers approach the vehicle, with Officer Freeman speaking to Matchin at the rear of the vehicle and Officer Weston talking to Defendant through the passenger window.
Sentence 39: Per his testimony, Officer Freeman asked Matchin to step out of the vehicle, which was his standard practice when explaining traffic violations to a driver.
Sentence 40: Once at the rear of the vehicle, Officer Freeman returned the driver\'s license, the vehicle\'s title, and proof of insurance to Matchin and began explaining his traffic warning.



TASK
In this task, we are attempting to label sentences to assess whether they contain important information.  These facts are tied to a specific legal problem which we have described below: 

-START LEGAL PROBLEM EXPLANATION-
We are interested in highway drug-interdiction. This occurs when a motorist is stopped by police for violating a traffic law and is subsequently detained based on an officer’s reasonable suspicion that the motorist is trafficking or possessing drugs.
An example of drug interdiction: John Smith, a motorist, is driving down interstate 95 in Miami Dade County, Florida with a brake light out and an occluded license plate. Officer Brown, who has been following Mr. Smith, initiates a traffic stop due to the light and the license plate. After Mr. Smith pulls over, Officer Brown observes Mr. Smith is moving around and appears to be reaching under his seat. After approaching the vehicle, Officer Brown notices that Mr. Smith is more nervous that someone would usually be when stopped for a traffic offense. He notices that Mr. Smith is sweating, shaking, and avoiding eye contact. Mr. Smith hands Officer Brown his license and registration, and vehicle rental agreement, which shows that Mr. Smith rented the vehicle in Philadelphia, and the car is due back there in 1 day. Officer Brown notices two cellphones in the center console, 1 prepaid, and 1 iPhone; he sees numerous cans of Redbull, and McDonald’s bags strewn about the vehicle; he notices a number of air fresheners hanging from the rearview mirror; he sees that instead of placing his luggage in the trunk, Mr. Smith has kept a small amount of luggage in the rear of the vehicle. Officer Brown asks Mr. Smith where he is coming from and where he is going. Mr. Smith states that he is coming from Washington D.C. and is headed to Arkansas to see family. When Officer Smith asks why, if he was headed to Arkansas to see family, he was in Miami, Mr. Smith states that he is actually seeing his girlfriend, who he cannot name, in Miami, before heading west to Arkansas to see his family. Based on the foregoing, Officer Brown believes that Mr. Smith is actually trafficking drugs, and detains him for 20 minutes until a drug dog can complete an open air sniff of the vehicle. Upon completion of the sniff, the dog indicates that there are drugs in the trunk of the vehicle. After opening the trunk, Officer Brown seizes 5kg of cocaine from the vehicle. Mr. Smith is arrested, and subsequently charged.
The legal question presented from these facts is whether Officer Brown had reasonable suspicion based upon articulable facts (his observations) that criminal activity was afoot. If so, then he could detain Mr. Smith for the time necessary to complete a canine sniff of the vehicle. If not, Mr. Smith’s constitutional rights have been violated due to the detention. We will be annotating cases that present the same legal problem. Although the facts (factors) of each case will be different to some degree (small or great), this is the legal problem that must be examined. There are certain kinds of facts that we are interested in identifying. Below we refer to these facts as factors.
-END LEGAL PROBLEM EXPLANATION-

-START INSTRUCTIONS-
YOU will assess sentences to and determine whether they belong to any of the following categories based on the content of the sentence and the descriptions below: 

1. Furtive Movement - Use this label if the driver or passenger in the vehicle makes a suspicious movement, such as reaching beneath a seat, or in a purse or bag, or around a waistband, or in a pocket, which is commonly an attempt to conceal contraband or a weapon.  This also includes attempting to evade custody such as taking a long time to pull the vehicle over.  Simple driving mistakes do not count under this factor.
2. Nervous Behavior or Appearance - Use this label if the motorist appears to be nervous, has shaking hands or a heavy heartbeat, or is sweating even though the temperature is cool.  Also use this label if the the motorist behaves in a nervous way, avoids making eye contact with the officer, focuses on a bag or compartment in the car, appears to be agitated, confronts the officer, gives the officer a curt response, volunteers too much information, or behaves in an overly friendly way toward the officer. 
3. Suspicious or Inconsistent Answers - Use this label if the driver made an answer to an officer that is evasive, nonsensical, inconsistent, contradictory, impossible, vague, incomplete, unusual, or untruthful.
4. Motorist license or Identification - Use this label if the motorist cannot provide the officer with a license or identification or if the license is invalid, revoked, fake, the wrong color, flimsy, or in someone else’s name. 
5. Driver Status - Use this label only if the driver of the vehicle is male, young, or not from the state in which the officer pulled the car over. 
6. Refused Consent - Use this label if the driver refused to consent to the officer’s request to search the automobile.
7. Legal Indications of Drug Use - Use this label if the motorist has an active arrest warrant for a drug related charge or if the motorist has been arrested for or convicted of a drug related offense in the past or if the officer knows that the motorist has abused, possessed, dealed, or trafficked in drugs in the past. 
8. Motorist's Appearance Related to Drug Use or Sale - Use this label if driver looks like they USE DRUGS such as needle track marks, rotten teeth, scabbing, bloodshot eyes, dilated pupils, unwashed hair, dirty clothes, body odor or dirty skin or if the driver is wearing suspicious clothing, such as expensive jewelry, expensive or luxury clothing, or clothing with images of drugs (e.g., marijuana leaves).
9. Possible Drug Route - Use this label if the driver’s route is from or to a city or area, which is known for drug trafficking or high crime rates, or if the driver stops the vehicle late at night or early in the morning in an area known for criminal activity. 
10. Unusual Travel Plans - Use this label if the motorist appears to be headed to a location that the motorist has already passed, is traveling on a road that does not lead to the stated destination, plans a trip that is too far to drive in a reasonable time (e.g., driving from Philadelphia to Miami in a single night), claims to be driving a long round trip in a one-day rental vehicle, or has other unusual travel plans.
11. Expensive Vehicle - Use this label if the motorist is driving a kind of vehicle associated with illicit drug use or trafficking such as a luxury or expensive vehicle, e.g., a BMW, Mercedes, Cadillac, or Range Rover.
12. Vehicle License Plate or Registration - Use this label if the vehicle's license plate is missing, shielded from view, or from out of state, or if the license plate or vehicle registration has expired.
13. Unusual Vehicle Ownership - Use this label if the vehicle is rented or if the vehicle is owned by someone not in the vehicle, unknown to the driver, or about whom the driver knows very little or claims to be a distant relative. 
14. Indicia of Hard Travel - Use this label if the motorist has been driving a great distance for a long time and is attempting to make as few stops as possible, or if the vehicle contained fast-food bags, lots of trash, energy drinks or substances designed to keep the consumer awake, such as Redbull, Five-Hour Energy, or Energize Capsules. 
15. Masking Agent - Use this label if the vehicle contained a substance or product used to mask the odor of drugs such as air fresheners (e.g., Little Trees, Febreze, Glade, etc.), scented dryer sheets or baby wipes, or strongly smelling tobacco products, cigars or cigarettes or other strong smells.
16. Vehicle Contents Suggest Drugs - This label SHOULD NOT be used for anything found after a canine has sniffed the car. Use this label if the vehicle smells of drug use (e.g., smells of raw or burnt marijuana or of chemicals such as meth or heroin) or contains drugs in plain view, or items used to ingest or use drugs such as pipes, syringes, needles, lighters, torches, drug paraphernalia, cigarette rolling papers (e.g., Raw or ZigZag brand rolling papers), marijuana cigarettes, joints, or blunts, vials, prescription bottles, or small glass containers used to hold drugs.  This label also applies if there are large amounts of cash or large bill denominations (e.g., $100 bills).
17. Suspicious Communications Device - Use this label if the officer observes suspicious communications devices such as multiple cell phones or a prepaid burner phone. 
18. Suspicious Storage - Use this label if only a small amount of luggage is visible given the stated nature of the trip, if the luggage is stored in the back of the cab instead of the trunk, if the vehicle has an unusual or secret storage compartment  or a car window that will not go down.
29. Suspicion Found - Use this label if the court deciding the case concludes, based on the facts present in the case, that the officer had reasonable suspicion to detain the suspect. 
20. Suspicion Not Found - Use this label if the court deciding the case concludes, based on the facts present in the case, that the officer did not have reasonable suspicion to detain the suspect.
21. No Factor - If none of the factors apply or the court is citing or quoting a legal rule, select this option.

You are also to follow these specific rules:

Typically, a sentence will describe a single factor, however, in some cases, a single sentence may include more than one factor.  If a sentence describes more than one factor, give a label for each factor in the sentence. 

Here are some specific rules you should follow:

1. Precepts or rules of law described by the court should not be labelled.  For example: "A police officer may extend the detention beyond the scope of a routine traffic stop if the driver consents or the officer has reasonable suspicion of criminal activity. Id. at 336."

2. The data is in the form of an appellate court opinion.  Conclusions reached by a lower or a trial court should not be labelled.  Sample language would be "The district court concluded that the officer had probable cause for the search".

3. The charges before the court are not to be considered Legal Indications of Drug Use.  For example: "The defendant is charged with possession with intent to distribute," should not be labeled.  However, "A record check revealed that the motorist had a conviction for drug possession" should be labelled as Legal Indication of Drug Use.

4. A sentence may be from a concurring or dissenting opinion. Do not annotate concurring or dissenting opinions even if they contain sentences describing factors.

5. Arguments by the parties should never be treated as a factor.  For example: "Gray argues that there was not reasonable suspicion for a prolonged detention".  Because this describes an argument, it is not a fact. Common words for argument are challenges, maintains, proffers, alleges. 

6. Sentences that contain solely a legal citation should be labelled as No Factor.  For example: "United States v. Oliver, 343 U.S. 900 (2019)"

7. Statements that describe a legal issue are not a factor.  For example: "The question before the court is whether the officer had reasonable suspicion to detain the motorist?"

8. Officer testimony can support the finding of a factor. 

You should apply a label for each sentence. Here are some examples: 

1. Sentence: Officer Guthrie testified that while the above exchanges were taking place, he noticed that the driver, Arturo Tapia, seemed nervous, and that his hands were shaking.
Label: Physical Appearance of Nervousness

2. Sentence: Upon reviewing the vehicle's documentation, Trooper Conrad discovered that the vehicle belonged to an absent third party, which, in his experience, raised his suspicion that the vehicle was being used for drug trafficking.
Label: Unusual Vehicle Ownership

3. Sentence: Typically, in my training and experience, the overwhelming smell of air fresheners in a rental vehicle is consistent with trying to mask the odor of controlled substances.
Label: Masking Agent, Unusual Vehicle Ownership
-END INSTRUCTIONS-

-START LABELLING-

-EXPECTED OUTPUT-
Sentence [Number]: [Sentence [number] contents]
Label: [label for sentence [number]]

Label the following sentences individually: 

Sentence 1: Officer Freeman then asked the driver if there was anything illegal in the car and for consent to search the vehicle.
Sentence 2: Matchin refused the search.
Sentence 3: While Officer Freeman was speaking to the driver at the rear of the vehicle, Officer Weston was speaking to Defendant through the passenger window.
Sentence 4: Officer Weston noticed an orange syringe cap in the driver\'s seat that Matchin had just vacated.
Sentence 5: Officer Weston asked Defendant if he possessed any weapons or drugs and if he consented to a search of his person.
Sentence 6: Defendant said that he had nothing illegal and gave Officer Weston permission to search him.
Sentence 7: When Defendant stepped out of the vehicle to allow Officer Weston to perform the search, Officer Weston noticed a second orange syringe cap, this time in the now-empty passenger\'s seat of the vehicle.
Sentence 8: Officer Weston informed Officer Freeman of his discovery, and resumed his search of Defendant.
Sentence 9: Officer Weston found nothing illegal on Defendant\'s person.
Sentence 10: Officer Freeman then searched the vehicle while Officer Weston stood with Matchin and Defendant outside the vehicle.
Sentence 11: Officer Freeman opened the passenger door, where he observed a syringe cap in the driver\'s seat and a syringe cap in the passenger\'s seat.
Sentence 12: Officer Freeman also saw a spoon protruding from beneath the passenger\'s seat.
Sentence 13: The spoon had a brown substance on it in a partially liquid, partially solid state.
Sentence 14: Officer Freeman also saw uncapped syringes, a Q-tip with the cotton pulled off, and a belt in the front of the car, as well as an open bottle of liquor in the backseat.
Sentence 15: Officer Freeman photographed the items he found in the vehicle and radioed for an officer with more experience with heroin to assist.
Sentence 16: The third officer arrived and found a baggie containing black-tar heroin in Matchin\'s sock.
Sentence 17: Both Matchin and Defendant were arrested at the scene.
Sentence 18: ANALYSIS
Sentence 19: Defendant argues on appeal that the trial court erred in denying his motion to dismiss, contending that the officers unconstitutionally extended the stop and that any reasonable suspicion that arose to justify an extension of the stop was not particularized to Defendant.
Sentence 20: Because reasonable suspicion sufficient to detain both Matchin and Defendant arose at the time Officer Freeman completed his record searches in the course of and prior to accomplishing the mission of the traffic stop, we hold there was no error.
Sentence 21: Standard of Review
Sentence 22: We review an order on a motion to suppress by determining whether the trial court\'s findings of fact are supported by competence evidence and whether those findings support the conclusions of law.
Sentence 23: State v. Edwards , 185 N.C. App. 701, 702, 649 S.E.2d 646, 648, disc. review denied , 362 N.C. 89, 656 S.E.2d 281 (2007).
Sentence 24: "Our review of a trial court\'s conclusions of law on a motion to suppress is de novo [,]"
Sentence 25: State v. Chadwick , 149 N.C. App. 200, 202, 560 S.E.2d 207, 209 (2002) (citing State v. Brooks , 337 N.C. 132, 140-41, 446 S.E.2d 579, 585 (1994) ), meaning we consider the legal conclusion anew and freely substitute our judgment for that of the trial court.
Sentence 26: Tucker v. Mecklenburg Cnty. Zoning Bd. of Adjustment , 148 N.C. App. 52, 55, 557 S.E.2d 631, 634 (2001), aff\'d in part, discretionary review improvidently allowed in part , 356 N.C. 658, 576 S.E.2d 324 (2003).
Sentence 27: The trial court did not distinguish between findings of fact or conclusions of law in its order; however, "[t]he labels \'findings of fact\' and \'conclusions of law\' employed by the trial court in a written order do not determine the nature of our review.
Sentence 28: If the trial court labels as a finding of fact what is in substance a conclusion of law, we review that \'finding\' de novo ."
Sentence 29: Westmoreland v. High Point Healthcare Inc. , 218 N.C. App. 76, 79, 721 S.E.2d 712, 716 (2012) (internal citations omitted).
Sentence 30: The Constitutional Duration of Traffic Stops
Sentence 31: The Fourth Amendment to the United States Constitution protects persons from "unreasonable searches and seizures," U.S. Const. amend.
Sentence 32: IV, and its protections extend to traffic stops.
Sentence 33: State v. Styles , 362 N.C. 412, 414, 665 S.E.2d 438, 439 (2008).
Sentence 34: As established by the United States Supreme Court in Rodriguez v. United States , 575 U.S. ----, 135 S.Ct. 1609, 191 L.Ed.2d 492 (2015), the Amendment\'s "Constitution[al] shield" prohibits police from "exceeding the time needed to handle the matter for which the [traffic] stop was made[.]"
Sentence 35: Id. at ----, 135 S.Ct. at 1612, 191 L.Ed.2d at 496.
Sentence 36: Thus, "[u]nder Rodriguez , the duration of a traffic stop must be limited to the length of time that is reasonably necessary to accomplish the mission ... unless reasonable suspicion of another crime arose before the mission was completed [.]"
Sentence 37: State v. Bullock , 370 N.C. 256, 257, 805 S.E.2d 671, 673 (2017) (citing Rodriguez , 575 U.S. at ----, 135 S.Ct. at 1614, 191 L.Ed.2d at 499 ) (emphasis added).
Sentence 38: In Bullock , the North Carolina Supreme Court set forth with clarity the parameters of a constitutional traffic stop post-
Sentence 39: Rodriguez :
Sentence 40: The reasonable duration of a traffic stop ... includes more than just the time needed to write a ticket.



TASK
In this task, we are attempting to label sentences to assess whether they contain important information.  These facts are tied to a specific legal problem which we have described below: 

-START LEGAL PROBLEM EXPLANATION-
We are interested in highway drug-interdiction. This occurs when a motorist is stopped by police for violating a traffic law and is subsequently detained based on an officer’s reasonable suspicion that the motorist is trafficking or possessing drugs.
An example of drug interdiction: John Smith, a motorist, is driving down interstate 95 in Miami Dade County, Florida with a brake light out and an occluded license plate. Officer Brown, who has been following Mr. Smith, initiates a traffic stop due to the light and the license plate. After Mr. Smith pulls over, Officer Brown observes Mr. Smith is moving around and appears to be reaching under his seat. After approaching the vehicle, Officer Brown notices that Mr. Smith is more nervous that someone would usually be when stopped for a traffic offense. He notices that Mr. Smith is sweating, shaking, and avoiding eye contact. Mr. Smith hands Officer Brown his license and registration, and vehicle rental agreement, which shows that Mr. Smith rented the vehicle in Philadelphia, and the car is due back there in 1 day. Officer Brown notices two cellphones in the center console, 1 prepaid, and 1 iPhone; he sees numerous cans of Redbull, and McDonald’s bags strewn about the vehicle; he notices a number of air fresheners hanging from the rearview mirror; he sees that instead of placing his luggage in the trunk, Mr. Smith has kept a small amount of luggage in the rear of the vehicle. Officer Brown asks Mr. Smith where he is coming from and where he is going. Mr. Smith states that he is coming from Washington D.C. and is headed to Arkansas to see family. When Officer Smith asks why, if he was headed to Arkansas to see family, he was in Miami, Mr. Smith states that he is actually seeing his girlfriend, who he cannot name, in Miami, before heading west to Arkansas to see his family. Based on the foregoing, Officer Brown believes that Mr. Smith is actually trafficking drugs, and detains him for 20 minutes until a drug dog can complete an open air sniff of the vehicle. Upon completion of the sniff, the dog indicates that there are drugs in the trunk of the vehicle. After opening the trunk, Officer Brown seizes 5kg of cocaine from the vehicle. Mr. Smith is arrested, and subsequently charged.
The legal question presented from these facts is whether Officer Brown had reasonable suspicion based upon articulable facts (his observations) that criminal activity was afoot. If so, then he could detain Mr. Smith for the time necessary to complete a canine sniff of the vehicle. If not, Mr. Smith’s constitutional rights have been violated due to the detention. We will be annotating cases that present the same legal problem. Although the facts (factors) of each case will be different to some degree (small or great), this is the legal problem that must be examined. There are certain kinds of facts that we are interested in identifying. Below we refer to these facts as factors.
-END LEGAL PROBLEM EXPLANATION-

-START INSTRUCTIONS-
YOU will assess sentences to and determine whether they belong to any of the following categories based on the content of the sentence and the descriptions below: 

1. Furtive Movement - Use this label if the driver or passenger in the vehicle makes a suspicious movement, such as reaching beneath a seat, or in a purse or bag, or around a waistband, or in a pocket, which is commonly an attempt to conceal contraband or a weapon.  This also includes attempting to evade custody such as taking a long time to pull the vehicle over.  Simple driving mistakes do not count under this factor.
2. Nervous Behavior or Appearance - Use this label if the motorist appears to be nervous, has shaking hands or a heavy heartbeat, or is sweating even though the temperature is cool.  Also use this label if the the motorist behaves in a nervous way, avoids making eye contact with the officer, focuses on a bag or compartment in the car, appears to be agitated, confronts the officer, gives the officer a curt response, volunteers too much information, or behaves in an overly friendly way toward the officer. 
3. Suspicious or Inconsistent Answers - Use this label if the driver made an answer to an officer that is evasive, nonsensical, inconsistent, contradictory, impossible, vague, incomplete, unusual, or untruthful.
4. Motorist license or Identification - Use this label if the motorist cannot provide the officer with a license or identification or if the license is invalid, revoked, fake, the wrong color, flimsy, or in someone else’s name. 
5. Driver Status - Use this label only if the driver of the vehicle is male, young, or not from the state in which the officer pulled the car over. 
6. Refused Consent - Use this label if the driver refused to consent to the officer’s request to search the automobile.
7. Legal Indications of Drug Use - Use this label if the motorist has an active arrest warrant for a drug related charge or if the motorist has been arrested for or convicted of a drug related offense in the past or if the officer knows that the motorist has abused, possessed, dealed, or trafficked in drugs in the past. 
8. Motorist's Appearance Related to Drug Use or Sale - Use this label if driver looks like they USE DRUGS such as needle track marks, rotten teeth, scabbing, bloodshot eyes, dilated pupils, unwashed hair, dirty clothes, body odor or dirty skin or if the driver is wearing suspicious clothing, such as expensive jewelry, expensive or luxury clothing, or clothing with images of drugs (e.g., marijuana leaves).
9. Possible Drug Route - Use this label if the driver’s route is from or to a city or area, which is known for drug trafficking or high crime rates, or if the driver stops the vehicle late at night or early in the morning in an area known for criminal activity. 
10. Unusual Travel Plans - Use this label if the motorist appears to be headed to a location that the motorist has already passed, is traveling on a road that does not lead to the stated destination, plans a trip that is too far to drive in a reasonable time (e.g., driving from Philadelphia to Miami in a single night), claims to be driving a long round trip in a one-day rental vehicle, or has other unusual travel plans.
11. Expensive Vehicle - Use this label if the motorist is driving a kind of vehicle associated with illicit drug use or trafficking such as a luxury or expensive vehicle, e.g., a BMW, Mercedes, Cadillac, or Range Rover.
12. Vehicle License Plate or Registration - Use this label if the vehicle's license plate is missing, shielded from view, or from out of state, or if the license plate or vehicle registration has expired.
13. Unusual Vehicle Ownership - Use this label if the vehicle is rented or if the vehicle is owned by someone not in the vehicle, unknown to the driver, or about whom the driver knows very little or claims to be a distant relative. 
14. Indicia of Hard Travel - Use this label if the motorist has been driving a great distance for a long time and is attempting to make as few stops as possible, or if the vehicle contained fast-food bags, lots of trash, energy drinks or substances designed to keep the consumer awake, such as Redbull, Five-Hour Energy, or Energize Capsules. 
15. Masking Agent - Use this label if the vehicle contained a substance or product used to mask the odor of drugs such as air fresheners (e.g., Little Trees, Febreze, Glade, etc.), scented dryer sheets or baby wipes, or strongly smelling tobacco products, cigars or cigarettes or other strong smells.
16. Vehicle Contents Suggest Drugs - This label SHOULD NOT be used for anything found after a canine has sniffed the car. Use this label if the vehicle smells of drug use (e.g., smells of raw or burnt marijuana or of chemicals such as meth or heroin) or contains drugs in plain view, or items used to ingest or use drugs such as pipes, syringes, needles, lighters, torches, drug paraphernalia, cigarette rolling papers (e.g., Raw or ZigZag brand rolling papers), marijuana cigarettes, joints, or blunts, vials, prescription bottles, or small glass containers used to hold drugs.  This label also applies if there are large amounts of cash or large bill denominations (e.g., $100 bills).
17. Suspicious Communications Device - Use this label if the officer observes suspicious communications devices such as multiple cell phones or a prepaid burner phone. 
18. Suspicious Storage - Use this label if only a small amount of luggage is visible given the stated nature of the trip, if the luggage is stored in the back of the cab instead of the trunk, if the vehicle has an unusual or secret storage compartment  or a car window that will not go down.
29. Suspicion Found - Use this label if the court deciding the case concludes, based on the facts present in the case, that the officer had reasonable suspicion to detain the suspect. 
20. Suspicion Not Found - Use this label if the court deciding the case concludes, based on the facts present in the case, that the officer did not have reasonable suspicion to detain the suspect.
21. No Factor - If none of the factors apply or the court is citing or quoting a legal rule, select this option.

You are also to follow these specific rules:

Typically, a sentence will describe a single factor, however, in some cases, a single sentence may include more than one factor.  If a sentence describes more than one factor, give a label for each factor in the sentence. 

Here are some specific rules you should follow:

1. Precepts or rules of law described by the court should not be labelled.  For example: "A police officer may extend the detention beyond the scope of a routine traffic stop if the driver consents or the officer has reasonable suspicion of criminal activity. Id. at 336."

2. The data is in the form of an appellate court opinion.  Conclusions reached by a lower or a trial court should not be labelled.  Sample language would be "The district court concluded that the officer had probable cause for the search".

3. The charges before the court are not to be considered Legal Indications of Drug Use.  For example: "The defendant is charged with possession with intent to distribute," should not be labeled.  However, "A record check revealed that the motorist had a conviction for drug possession" should be labelled as Legal Indication of Drug Use.

4. A sentence may be from a concurring or dissenting opinion. Do not annotate concurring or dissenting opinions even if they contain sentences describing factors.

5. Arguments by the parties should never be treated as a factor.  For example: "Gray argues that there was not reasonable suspicion for a prolonged detention".  Because this describes an argument, it is not a fact. Common words for argument are challenges, maintains, proffers, alleges. 

6. Sentences that contain solely a legal citation should be labelled as No Factor.  For example: "United States v. Oliver, 343 U.S. 900 (2019)"

7. Statements that describe a legal issue are not a factor.  For example: "The question before the court is whether the officer had reasonable suspicion to detain the motorist?"

8. Officer testimony can support the finding of a factor. 

You should apply a label for each sentence. Here are some examples: 

1. Sentence: Officer Guthrie testified that while the above exchanges were taking place, he noticed that the driver, Arturo Tapia, seemed nervous, and that his hands were shaking.
Label: Physical Appearance of Nervousness

2. Sentence: Upon reviewing the vehicle's documentation, Trooper Conrad discovered that the vehicle belonged to an absent third party, which, in his experience, raised his suspicion that the vehicle was being used for drug trafficking.
Label: Unusual Vehicle Ownership

3. Sentence: Typically, in my training and experience, the overwhelming smell of air fresheners in a rental vehicle is consistent with trying to mask the odor of controlled substances.
Label: Masking Agent, Unusual Vehicle Ownership
-END INSTRUCTIONS-

-START LABELLING-

-EXPECTED OUTPUT-
Sentence [Number]: [Sentence [number] contents]
Label: [label for sentence [number]]

Label the following sentences individually: 

Sentence 1: "Beyond determining whether to issue a traffic ticket, an officer\'s mission includes \'ordinary inquiries incident to [the traffic] stop.\' " [ Rodriguez ] at ----, 135 S.Ct. at 1615[, 191 L.Ed.2d at 499] (alteration in original) (quoting [ Illinois v. ] Caballes , 543 U.S. [405,] 408, 125 S.Ct. 834[, 160 L.Ed.2d 842 (2005)] ).
Sentence 2: These inquiries include "checking the driver\'s license, determining whether there are outstanding warrants against the driver, and inspecting the automobile\'s registration and proof of insurance."
Sentence 3: In addition, "an officer may need to take certain negligibly burdensome precautions in order to complete his mission safely."
Sentence 4: Id. at ----, 135 S.Ct. at 1616[, 191 L.Ed.2d. at 500].
Sentence 5: These precautions appear to include conducting criminal history checks, as Rodriguez favorably cited a Tenth Circuit case that allows officers to conduct those checks to protect officer safety.
Sentence 6: See id. (citing United States v. Holt , 264 F.3d 1215, 1221-22 (10th Cir. 2001) (en banc), abrogated on other grounds as recognized in United States v. Stewart , 473 F.3d 1265, 1269 (10th Cir. 2007) ); see also United States v. McRae , 81 F.3d 1528, 1536 n.6 (10th Cir. 1996) ("Considering the tragedy of the many officers who are shot during routine traffic stops each year, the almost simultaneous computer check of a person\'s criminal record, along with his or her license and registration, is reasonable and hardly intrusive."), quoted in Holt , 264 F.3d at 1221.
Sentence 7: Safety precautions taken to facilitate investigations into crimes that are unrelated to the reasons for which a driver has been stopped, however, are not permitted if they extend the duration of the stop.
Sentence 8: Rodriguez , 575 U.S. at ----, 135 S.Ct. at 1616[, 191 L.Ed.2d at 500].
Sentence 9: But investigations into unrelated crimes during a traffic stop, even when conducted without reasonable suspicion, are permitted if those investigations do not extend the duration of the stop.
Sentence 10: See id. at ----, ----, 135 S.Ct. at 1612, 1614[, 191 L.Ed. 2d at 499-500].
Sentence 11: Bullock, 370 N.C. at 257-258, 805 S.E.2d at 673-74 (alterations to citations added).
Sentence 12: Defendant argues that two unconstitutional extensions of the traffic stop occurred in this case: (1) when Officer Freeman waited roughly twelve minutes after first speaking with Matchin and Defendant before issuing his warning to Matchin; and (2) when Officer Freeman questioned Matchin while Officer Weston questioned and searched Defendant.
Sentence 13: We disagree with Defendant that Officer Freeman unconstitutionally extended the duration of the stop for several reasons.
Sentence 14: First, Officer Freeman was engaged in conduct within the scope of his mission until Officer Weston arrived roughly twelve minutes later.
Sentence 15: Defendant does not challenge any findings relating to Matchin\'s traffic violation or the trial court\'s finding that Officer Freeman was engaged in a series of database searches during this time, including a search of a 50-state database for the VIN number that "takes longer to process than a check of a registration card."
Sentence 16: As held by the United States Supreme Court in Rodriguez and recognized by the North Carolina Supreme Court in Bullock , database searches of driver\'s licenses, warrants, vehicle registrations, and proof of insurance all fall within the mission of a traffic stop.
Sentence 17: Rodriguez , 575 U.S. at ----, 135 S.Ct. at 1615, 191 L.Ed. 2d at 499 ("Beyond determining whether to issue a traffic ticket, an officer\'s mission includes \'ordinary inquiries incident to [the traffic] stop.\' " (alteration in original) (quoting Caballes , 543 U.S. at 408, 125 S.Ct. 834, 160 L.Ed.2d 842 ) ); Bullock , 370 N.C. at 257 805 S.E.2d at 673 ("These inquiries include \'checking the driver\'s license, determining whether there are outstanding warrants against the driver, and inspecting the automobile\'s registration and proof of insurance.\' " (quoting Rodriguez , 575 U.S. at ----, 135 S.Ct. at 1615, 191 L.Ed.2d at 499 ) ).
Sentence 18: As for his research into Matchin and Defendant\'s criminal histories, this too was permitted under Rodriguez and Bullock as a safety precaution related to the traffic stop.
Sentence 19: Bullock , 370 N.C. at 258 805 S.E.2d at 674 (" \'[A]n officer may need to take certain negligibly burdensome precautions in order to complete his mission safely.\'
Sentence 20: These precautions appear to include conducting criminal history checks ...." (quoting Rodriguez , 575 U.S. at ----, 135 S.Ct. at 1616, 191 L.Ed.2d at 500 ) ).
Sentence 21: Because these searches were within the scope of his mission, no delay could occur until they were completed, and the uncontradicted evidence demonstrates that the database searches began within a minute of him returning to his vehicle with Matchin\'s and Defendant\'s information and continued up until Officer Weston arrived.
Sentence 22: Second, Officer Freeman\'s request for back-up by Officer Weston was itself a safety precaution.
Sentence 23: The trial court found that the back-up call was made "because there were two occupants in the vehicle[,]" and Officer Freeman testified that safety concerns and CMPD policy dictated that he request back-up when stopping a vehicle with multiple occupants.
Sentence 24: "[B]ecause officer safety stems from the mission of the traffic stop itself, time devoted to officer safety is time that is reasonably required to complete that mission."
Sentence 25: Bullock , 370 N.C. at 261 805 S.E.2d at 676.
Sentence 26: Even if we were to assume arguendo that Officer Freeman\'s call for back-up was a safety precaution divorced from the traffic stop, such a precaution is impermissible only "if [it] extend[s] the duration of the stop."
Sentence 27: Id. at ----, 805 S.E.2d at 674 (citing Rodriguez , 575 U.S. at ----, 135 S.Ct. at 1615, 191 L.Ed.2d at 500 ).
Sentence 28: Here, no extension of the stop occurred because database searches within the scope of the mission were running from the time Officer Freeman returned to his car and until Officer Weston arrived.
Sentence 29: In addition to holding that Officer Freeman was acting within the scope of his mission until Officer Weston arrived, we further hold that, by the time Officer Weston arrived on the scene, Officer Freeman had developed a reasonable suspicion of criminal activity sufficient to constitutionally extend the traffic stop.
Sentence 30: Reasonable suspicion arises where an officer possesses "a particularized and objective basis for suspecting the particular person stopped of criminal activity."
Sentence 31: Navarette v. California , 572 U.S. ----, ----, 134 S.Ct. 1683, 1687, 188 L.Ed.2d 680, 686 (2014) (citations and quotation marks omitted).
Sentence 32: This requires "a minimal level of objective justification, something more than an unparticularized suspicion or hunch."
Sentence 33: State v. Watkins , 337 N.C. 437, 442, 446 S.E.2d 67, 70 (1994) (citation and quotation marks omitted).
Sentence 34: The reasonableness of such suspicion is measured by determining whether "a reasonable, cautious officer, guided by his experience and training, would believe that criminal activity is afoot based on specific and articulable facts, as well as the rational inferences from those facts."
Sentence 35: State v. Williams , 366 N.C. 110, 116, 726 S.E.2d 161, 167 (2012) (citations and internal quotation marks omitted).
Sentence 36: In engaging in this analysis, "[a] reviewing court must consider the totality of the circumstances-the whole picture."
Sentence 37: Id. at 116, 726 S.E.2d at 167 (internal citations and quotation marks omitted).
Sentence 38: A considerable body of case law has established what "specific and articulable facts" give rise to "rational inferences" supporting a determination of reasonable suspicion when considered in "the totality of the circumstances" with other such facts.
Sentence 39: Id. at 116, 726 S.E.2d at 167 (internal citations and quotation marks omitted).
Sentence 40: These include: (1) a person\'s history of criminal arrests, State v. Watson , 119 N.C. App. 395, 398, 458 S.E.2d 519, 522 (1995) (holding that a police officer had reasonable suspicion for an investigatory stop of a defendant in part because the officer knew of defendant\'s prior drug arrests); (2) a driver\'s questionable travel plans, State v. Castillo , --- N.C. App. ----, 787 S.E.2d 48, 55-56, appeal dismissed, review denied , 369 N.C. 40, 792 S.E.2d 784 (2016) (holding that an officer\'s knowledge of defendant\'s prior DUI arrest, along with the presence of a cover scent, the defendant\'s extreme nervousness, registration of the vehicle to a third party, and inconsistent travel plans supported reasonable suspicion to extend a traffic stop); (3) a person\'s evasive action after noticing a police officer, State v. Butler , 331 N.C. 227, 233-34, 415 S.E.2d 719, 722-23 (1992) (holding that a defendant\'s presence at a location known for drug sales and apparent flight from officers upon making eye contact, among other facts, supported reasonable suspicion); (4) an officer\'s recognition of an individual as one previously involved in illegal activity, Travis at 126-29, 781 S.E.2d at 678-79 (holding reasonable suspicion existed where, among other facts, the officer recognized defendant as a former informant in drug purchases); (5) a person\'s unusual nervousness, Castillo at ----, 787 S.E.2d at 55 ; (6) registration of the vehicle to a third party, id. at ----, 787 S.E.2d at 55 ; and (7) presence in an area known for criminal activity.



TASK
In this task, we are attempting to label sentences to assess whether they contain important information.  These facts are tied to a specific legal problem which we have described below: 

-START LEGAL PROBLEM EXPLANATION-
We are interested in highway drug-interdiction. This occurs when a motorist is stopped by police for violating a traffic law and is subsequently detained based on an officer’s reasonable suspicion that the motorist is trafficking or possessing drugs.
An example of drug interdiction: John Smith, a motorist, is driving down interstate 95 in Miami Dade County, Florida with a brake light out and an occluded license plate. Officer Brown, who has been following Mr. Smith, initiates a traffic stop due to the light and the license plate. After Mr. Smith pulls over, Officer Brown observes Mr. Smith is moving around and appears to be reaching under his seat. After approaching the vehicle, Officer Brown notices that Mr. Smith is more nervous that someone would usually be when stopped for a traffic offense. He notices that Mr. Smith is sweating, shaking, and avoiding eye contact. Mr. Smith hands Officer Brown his license and registration, and vehicle rental agreement, which shows that Mr. Smith rented the vehicle in Philadelphia, and the car is due back there in 1 day. Officer Brown notices two cellphones in the center console, 1 prepaid, and 1 iPhone; he sees numerous cans of Redbull, and McDonald’s bags strewn about the vehicle; he notices a number of air fresheners hanging from the rearview mirror; he sees that instead of placing his luggage in the trunk, Mr. Smith has kept a small amount of luggage in the rear of the vehicle. Officer Brown asks Mr. Smith where he is coming from and where he is going. Mr. Smith states that he is coming from Washington D.C. and is headed to Arkansas to see family. When Officer Smith asks why, if he was headed to Arkansas to see family, he was in Miami, Mr. Smith states that he is actually seeing his girlfriend, who he cannot name, in Miami, before heading west to Arkansas to see his family. Based on the foregoing, Officer Brown believes that Mr. Smith is actually trafficking drugs, and detains him for 20 minutes until a drug dog can complete an open air sniff of the vehicle. Upon completion of the sniff, the dog indicates that there are drugs in the trunk of the vehicle. After opening the trunk, Officer Brown seizes 5kg of cocaine from the vehicle. Mr. Smith is arrested, and subsequently charged.
The legal question presented from these facts is whether Officer Brown had reasonable suspicion based upon articulable facts (his observations) that criminal activity was afoot. If so, then he could detain Mr. Smith for the time necessary to complete a canine sniff of the vehicle. If not, Mr. Smith’s constitutional rights have been violated due to the detention. We will be annotating cases that present the same legal problem. Although the facts (factors) of each case will be different to some degree (small or great), this is the legal problem that must be examined. There are certain kinds of facts that we are interested in identifying. Below we refer to these facts as factors.
-END LEGAL PROBLEM EXPLANATION-

-START INSTRUCTIONS-
YOU will assess sentences to and determine whether they belong to any of the following categories based on the content of the sentence and the descriptions below: 

1. Furtive Movement - Use this label if the driver or passenger in the vehicle makes a suspicious movement, such as reaching beneath a seat, or in a purse or bag, or around a waistband, or in a pocket, which is commonly an attempt to conceal contraband or a weapon.  This also includes attempting to evade custody such as taking a long time to pull the vehicle over.  Simple driving mistakes do not count under this factor.
2. Nervous Behavior or Appearance - Use this label if the motorist appears to be nervous, has shaking hands or a heavy heartbeat, or is sweating even though the temperature is cool.  Also use this label if the the motorist behaves in a nervous way, avoids making eye contact with the officer, focuses on a bag or compartment in the car, appears to be agitated, confronts the officer, gives the officer a curt response, volunteers too much information, or behaves in an overly friendly way toward the officer. 
3. Suspicious or Inconsistent Answers - Use this label if the driver made an answer to an officer that is evasive, nonsensical, inconsistent, contradictory, impossible, vague, incomplete, unusual, or untruthful.
4. Motorist license or Identification - Use this label if the motorist cannot provide the officer with a license or identification or if the license is invalid, revoked, fake, the wrong color, flimsy, or in someone else’s name. 
5. Driver Status - Use this label only if the driver of the vehicle is male, young, or not from the state in which the officer pulled the car over. 
6. Refused Consent - Use this label if the driver refused to consent to the officer’s request to search the automobile.
7. Legal Indications of Drug Use - Use this label if the motorist has an active arrest warrant for a drug related charge or if the motorist has been arrested for or convicted of a drug related offense in the past or if the officer knows that the motorist has abused, possessed, dealed, or trafficked in drugs in the past. 
8. Motorist's Appearance Related to Drug Use or Sale - Use this label if driver looks like they USE DRUGS such as needle track marks, rotten teeth, scabbing, bloodshot eyes, dilated pupils, unwashed hair, dirty clothes, body odor or dirty skin or if the driver is wearing suspicious clothing, such as expensive jewelry, expensive or luxury clothing, or clothing with images of drugs (e.g., marijuana leaves).
9. Possible Drug Route - Use this label if the driver’s route is from or to a city or area, which is known for drug trafficking or high crime rates, or if the driver stops the vehicle late at night or early in the morning in an area known for criminal activity. 
10. Unusual Travel Plans - Use this label if the motorist appears to be headed to a location that the motorist has already passed, is traveling on a road that does not lead to the stated destination, plans a trip that is too far to drive in a reasonable time (e.g., driving from Philadelphia to Miami in a single night), claims to be driving a long round trip in a one-day rental vehicle, or has other unusual travel plans.
11. Expensive Vehicle - Use this label if the motorist is driving a kind of vehicle associated with illicit drug use or trafficking such as a luxury or expensive vehicle, e.g., a BMW, Mercedes, Cadillac, or Range Rover.
12. Vehicle License Plate or Registration - Use this label if the vehicle's license plate is missing, shielded from view, or from out of state, or if the license plate or vehicle registration has expired.
13. Unusual Vehicle Ownership - Use this label if the vehicle is rented or if the vehicle is owned by someone not in the vehicle, unknown to the driver, or about whom the driver knows very little or claims to be a distant relative. 
14. Indicia of Hard Travel - Use this label if the motorist has been driving a great distance for a long time and is attempting to make as few stops as possible, or if the vehicle contained fast-food bags, lots of trash, energy drinks or substances designed to keep the consumer awake, such as Redbull, Five-Hour Energy, or Energize Capsules. 
15. Masking Agent - Use this label if the vehicle contained a substance or product used to mask the odor of drugs such as air fresheners (e.g., Little Trees, Febreze, Glade, etc.), scented dryer sheets or baby wipes, or strongly smelling tobacco products, cigars or cigarettes or other strong smells.
16. Vehicle Contents Suggest Drugs - This label SHOULD NOT be used for anything found after a canine has sniffed the car. Use this label if the vehicle smells of drug use (e.g., smells of raw or burnt marijuana or of chemicals such as meth or heroin) or contains drugs in plain view, or items used to ingest or use drugs such as pipes, syringes, needles, lighters, torches, drug paraphernalia, cigarette rolling papers (e.g., Raw or ZigZag brand rolling papers), marijuana cigarettes, joints, or blunts, vials, prescription bottles, or small glass containers used to hold drugs.  This label also applies if there are large amounts of cash or large bill denominations (e.g., $100 bills).
17. Suspicious Communications Device - Use this label if the officer observes suspicious communications devices such as multiple cell phones or a prepaid burner phone. 
18. Suspicious Storage - Use this label if only a small amount of luggage is visible given the stated nature of the trip, if the luggage is stored in the back of the cab instead of the trunk, if the vehicle has an unusual or secret storage compartment  or a car window that will not go down.
29. Suspicion Found - Use this label if the court deciding the case concludes, based on the facts present in the case, that the officer had reasonable suspicion to detain the suspect. 
20. Suspicion Not Found - Use this label if the court deciding the case concludes, based on the facts present in the case, that the officer did not have reasonable suspicion to detain the suspect.
21. No Factor - If none of the factors apply or the court is citing or quoting a legal rule, select this option.

You are also to follow these specific rules:

Typically, a sentence will describe a single factor, however, in some cases, a single sentence may include more than one factor.  If a sentence describes more than one factor, give a label for each factor in the sentence. 

Here are some specific rules you should follow:

1. Precepts or rules of law described by the court should not be labelled.  For example: "A police officer may extend the detention beyond the scope of a routine traffic stop if the driver consents or the officer has reasonable suspicion of criminal activity. Id. at 336."

2. The data is in the form of an appellate court opinion.  Conclusions reached by a lower or a trial court should not be labelled.  Sample language would be "The district court concluded that the officer had probable cause for the search".

3. The charges before the court are not to be considered Legal Indications of Drug Use.  For example: "The defendant is charged with possession with intent to distribute," should not be labeled.  However, "A record check revealed that the motorist had a conviction for drug possession" should be labelled as Legal Indication of Drug Use.

4. A sentence may be from a concurring or dissenting opinion. Do not annotate concurring or dissenting opinions even if they contain sentences describing factors.

5. Arguments by the parties should never be treated as a factor.  For example: "Gray argues that there was not reasonable suspicion for a prolonged detention".  Because this describes an argument, it is not a fact. Common words for argument are challenges, maintains, proffers, alleges. 

6. Sentences that contain solely a legal citation should be labelled as No Factor.  For example: "United States v. Oliver, 343 U.S. 900 (2019)"

7. Statements that describe a legal issue are not a factor.  For example: "The question before the court is whether the officer had reasonable suspicion to detain the motorist?"

8. Officer testimony can support the finding of a factor. 

You should apply a label for each sentence. Here are some examples: 

1. Sentence: Officer Guthrie testified that while the above exchanges were taking place, he noticed that the driver, Arturo Tapia, seemed nervous, and that his hands were shaking.
Label: Physical Appearance of Nervousness

2. Sentence: Upon reviewing the vehicle's documentation, Trooper Conrad discovered that the vehicle belonged to an absent third party, which, in his experience, raised his suspicion that the vehicle was being used for drug trafficking.
Label: Unusual Vehicle Ownership

3. Sentence: Typically, in my training and experience, the overwhelming smell of air fresheners in a rental vehicle is consistent with trying to mask the odor of controlled substances.
Label: Masking Agent, Unusual Vehicle Ownership
-END INSTRUCTIONS-

-START LABELLING-

-EXPECTED OUTPUT-
Sentence [Number]: [Sentence [number] contents]
Label: [label for sentence [number]]

Label the following sentences individually: 

Sentence 1: Butler at 233, 415 S.E.2d at 722-23.
Sentence 2: Here, the trial court made findings of fact that: (1)
Sentence 3: Officer Freeman was a trained patrol officer of six years and had participated in 100 drug arrests; (2)
Sentence 4: Officer Freeman noticed Matchin and Defendant in a high crime area; (3) after Officer Freeman drove by them, Matchin and Defendant took off at high speed and made an illegal right turn, nearly causing a collision; (4)
Sentence 5: Matchin informed Officer Freeman that he and Defendant were at the motel but did not go into a room there; (5)
Sentence 6: Matchin was unusually nervous; and (6) both Matchin and Defendant had multiple prior drug arrests.
Sentence 7: All of these findings are either unchallenged or supported by uncontradicted evidence, and Officer Freeman was apprised of each fact prior to the arrival of Officer Weston and the completion of his mission in initiating the traffic stop.
Sentence 8: Thus, by the time that Officer Freeman and Officer Weston approached Matchin and Defendant, Officer Freeman could rely on all of these facts, in their totality, in arriving at a reasonable suspicion that criminal activity beyond a traffic violation was afoot.
Sentence 9: Watson at 398, 458 S.E.2d at 522 ; Castillo at ----, 787 S.E.2d at 55 ; Butler at 233-34, 415 S.E.2d at 722-23 ; Travis at 126-29, 781 S.E.2d at 678-79 ; Bullock at 260-64, 805 S.E.2d at 677-78.
Sentence 10: We hold that Officer Freeman had a reasonable suspicion to extend the stop, and that such suspicion arose before he completed the mission for the stop.
Sentence 11: Even if we were to assume arguendo that the facts found above were insufficient to support the extended stop, the uncontradicted evidence discloses further facts supporting reasonable suspicion that we may imply from the ruling of the trial court.
Sentence 12: Smith , 135 N.C. App. at 380, 520 S.E.2d at 312 ("After conducting a hearing on a motion to suppress, a trial court should make findings of fact that will support its conclusions as to whether the evidence is admissible.
Sentence 13: If there is no conflict in the evidence on a fact, failure to find that fact is not error.
Sentence 14: Its finding is implied from the ruling of the court." (citation and quotation marks omitted) ).
Sentence 15: These include Matchin\'s and Defendant\'s surprise at seeing Officer Freeman in the motel parking lot, the titling of the vehicle to someone other than Matchin or Defendant, Matchin\'s statement that he met a friend at the motel but that he did not know the friend\'s name, and Officer Freeman\'s recognition of Defendant\'s name and appearance as someone involved in illegal drug activity.
Sentence 16: Castillo at ----, 787 S.E.2d at 55-56 ; Travis at 126-29, 781 S.E.2d at 678-79.
Sentence 17: Considering all the facts, both found and implied from the trial court\'s ruling, we hold that the totality of the circumstances supports a conclusion that Officer Freeman had reasonable suspicion to extend the traffic stop prior to the completion of his mission.
Sentence 18: Finally, we note the similarity between the facts in this case and those confronting our Supreme Court in Bullock , its most recent decision on point.
Sentence 19: There, a police officer stopped a rental car for "speeding, following a truck too closely," and weaving over the line marking the outer bound of the interstate.
Sentence 20: Bullock, 370 N.C. at 258, 805 S.E.2d at 674.
Sentence 21: The officer knew the interstate was frequently used to traffic drugs between Georgia and Virginia.
Sentence 22: Id. at 258, 805 S.E.2d at 674.
Sentence 23: In asking the driver for his license and vehicle registration, the officer observed the driver appeared nervous and was not an authorized driver on the rental agreement.
Sentence 24: Id. at 258, 805 S.E.2d at 674.
Sentence 25: The officer also noticed multiple cell phones in the car.
Sentence 26: Id. at 258, 805 S.E.2d at 674.
Sentence 27: When the officer asked the driver where he was going, the driver responded that he had intended to visit his girlfriend but that he had missed his exit; however, the officer was aware that the driver had since passed at least three additional exits where he could have turned to reach his stated destination.
Sentence 28: Id. at 258, 805 S.E.2d at 674.
Sentence 29: The driver also made contradictory statements about his girlfriend to the officer.
Sentence 30: Id. at 259, 805 S.E.2d at 675.
Sentence 31: The officer informed the defendant he would be receiving a warning, asked the defendant to exit the vehicle, frisked the defendant, and then asked him to sit in the patrol car while the officer ran his information through local, state, and national databases.
Sentence 32: Id. at 259, 805 S.E.2d at 675.
Sentence 33: The databases returned a criminal history contrary to prior statements made by the defendant.
Sentence 34: Id. at 259, 805 S.E.2d at 675.
Sentence 35: The officer asked if he could search the rental vehicle.
Sentence 36: Id. at 259, 805 S.E.2d at 675.
Sentence 37: The driver consented to a search of the vehicle but not the possessions therein; a trained police canine arrived a few minutes later and sniffed the possessions, signaling the presence of heroin.
Sentence 38: Id. at 259, 805 S.E.2d at 675.
Sentence 39: On these facts, the Supreme Court ruled that there existed sufficient circumstances to support a reasonable suspicion of drug activity prior to the arrival of the canine, so that no unconstitutional extension of the traffic stop occurred.
Sentence 40: Id. at 260-64, 805 S.E.2d at 676-78.



TASK
In this task, we are attempting to label sentences to assess whether they contain important information.  These facts are tied to a specific legal problem which we have described below: 

-START LEGAL PROBLEM EXPLANATION-
We are interested in highway drug-interdiction. This occurs when a motorist is stopped by police for violating a traffic law and is subsequently detained based on an officer’s reasonable suspicion that the motorist is trafficking or possessing drugs.
An example of drug interdiction: John Smith, a motorist, is driving down interstate 95 in Miami Dade County, Florida with a brake light out and an occluded license plate. Officer Brown, who has been following Mr. Smith, initiates a traffic stop due to the light and the license plate. After Mr. Smith pulls over, Officer Brown observes Mr. Smith is moving around and appears to be reaching under his seat. After approaching the vehicle, Officer Brown notices that Mr. Smith is more nervous that someone would usually be when stopped for a traffic offense. He notices that Mr. Smith is sweating, shaking, and avoiding eye contact. Mr. Smith hands Officer Brown his license and registration, and vehicle rental agreement, which shows that Mr. Smith rented the vehicle in Philadelphia, and the car is due back there in 1 day. Officer Brown notices two cellphones in the center console, 1 prepaid, and 1 iPhone; he sees numerous cans of Redbull, and McDonald’s bags strewn about the vehicle; he notices a number of air fresheners hanging from the rearview mirror; he sees that instead of placing his luggage in the trunk, Mr. Smith has kept a small amount of luggage in the rear of the vehicle. Officer Brown asks Mr. Smith where he is coming from and where he is going. Mr. Smith states that he is coming from Washington D.C. and is headed to Arkansas to see family. When Officer Smith asks why, if he was headed to Arkansas to see family, he was in Miami, Mr. Smith states that he is actually seeing his girlfriend, who he cannot name, in Miami, before heading west to Arkansas to see his family. Based on the foregoing, Officer Brown believes that Mr. Smith is actually trafficking drugs, and detains him for 20 minutes until a drug dog can complete an open air sniff of the vehicle. Upon completion of the sniff, the dog indicates that there are drugs in the trunk of the vehicle. After opening the trunk, Officer Brown seizes 5kg of cocaine from the vehicle. Mr. Smith is arrested, and subsequently charged.
The legal question presented from these facts is whether Officer Brown had reasonable suspicion based upon articulable facts (his observations) that criminal activity was afoot. If so, then he could detain Mr. Smith for the time necessary to complete a canine sniff of the vehicle. If not, Mr. Smith’s constitutional rights have been violated due to the detention. We will be annotating cases that present the same legal problem. Although the facts (factors) of each case will be different to some degree (small or great), this is the legal problem that must be examined. There are certain kinds of facts that we are interested in identifying. Below we refer to these facts as factors.
-END LEGAL PROBLEM EXPLANATION-

-START INSTRUCTIONS-
YOU will assess sentences to and determine whether they belong to any of the following categories based on the content of the sentence and the descriptions below: 

1. Furtive Movement - Use this label if the driver or passenger in the vehicle makes a suspicious movement, such as reaching beneath a seat, or in a purse or bag, or around a waistband, or in a pocket, which is commonly an attempt to conceal contraband or a weapon.  This also includes attempting to evade custody such as taking a long time to pull the vehicle over.  Simple driving mistakes do not count under this factor.
2. Nervous Behavior or Appearance - Use this label if the motorist appears to be nervous, has shaking hands or a heavy heartbeat, or is sweating even though the temperature is cool.  Also use this label if the the motorist behaves in a nervous way, avoids making eye contact with the officer, focuses on a bag or compartment in the car, appears to be agitated, confronts the officer, gives the officer a curt response, volunteers too much information, or behaves in an overly friendly way toward the officer. 
3. Suspicious or Inconsistent Answers - Use this label if the driver made an answer to an officer that is evasive, nonsensical, inconsistent, contradictory, impossible, vague, incomplete, unusual, or untruthful.
4. Motorist license or Identification - Use this label if the motorist cannot provide the officer with a license or identification or if the license is invalid, revoked, fake, the wrong color, flimsy, or in someone else’s name. 
5. Driver Status - Use this label only if the driver of the vehicle is male, young, or not from the state in which the officer pulled the car over. 
6. Refused Consent - Use this label if the driver refused to consent to the officer’s request to search the automobile.
7. Legal Indications of Drug Use - Use this label if the motorist has an active arrest warrant for a drug related charge or if the motorist has been arrested for or convicted of a drug related offense in the past or if the officer knows that the motorist has abused, possessed, dealed, or trafficked in drugs in the past. 
8. Motorist's Appearance Related to Drug Use or Sale - Use this label if driver looks like they USE DRUGS such as needle track marks, rotten teeth, scabbing, bloodshot eyes, dilated pupils, unwashed hair, dirty clothes, body odor or dirty skin or if the driver is wearing suspicious clothing, such as expensive jewelry, expensive or luxury clothing, or clothing with images of drugs (e.g., marijuana leaves).
9. Possible Drug Route - Use this label if the driver’s route is from or to a city or area, which is known for drug trafficking or high crime rates, or if the driver stops the vehicle late at night or early in the morning in an area known for criminal activity. 
10. Unusual Travel Plans - Use this label if the motorist appears to be headed to a location that the motorist has already passed, is traveling on a road that does not lead to the stated destination, plans a trip that is too far to drive in a reasonable time (e.g., driving from Philadelphia to Miami in a single night), claims to be driving a long round trip in a one-day rental vehicle, or has other unusual travel plans.
11. Expensive Vehicle - Use this label if the motorist is driving a kind of vehicle associated with illicit drug use or trafficking such as a luxury or expensive vehicle, e.g., a BMW, Mercedes, Cadillac, or Range Rover.
12. Vehicle License Plate or Registration - Use this label if the vehicle's license plate is missing, shielded from view, or from out of state, or if the license plate or vehicle registration has expired.
13. Unusual Vehicle Ownership - Use this label if the vehicle is rented or if the vehicle is owned by someone not in the vehicle, unknown to the driver, or about whom the driver knows very little or claims to be a distant relative. 
14. Indicia of Hard Travel - Use this label if the motorist has been driving a great distance for a long time and is attempting to make as few stops as possible, or if the vehicle contained fast-food bags, lots of trash, energy drinks or substances designed to keep the consumer awake, such as Redbull, Five-Hour Energy, or Energize Capsules. 
15. Masking Agent - Use this label if the vehicle contained a substance or product used to mask the odor of drugs such as air fresheners (e.g., Little Trees, Febreze, Glade, etc.), scented dryer sheets or baby wipes, or strongly smelling tobacco products, cigars or cigarettes or other strong smells.
16. Vehicle Contents Suggest Drugs - This label SHOULD NOT be used for anything found after a canine has sniffed the car. Use this label if the vehicle smells of drug use (e.g., smells of raw or burnt marijuana or of chemicals such as meth or heroin) or contains drugs in plain view, or items used to ingest or use drugs such as pipes, syringes, needles, lighters, torches, drug paraphernalia, cigarette rolling papers (e.g., Raw or ZigZag brand rolling papers), marijuana cigarettes, joints, or blunts, vials, prescription bottles, or small glass containers used to hold drugs.  This label also applies if there are large amounts of cash or large bill denominations (e.g., $100 bills).
17. Suspicious Communications Device - Use this label if the officer observes suspicious communications devices such as multiple cell phones or a prepaid burner phone. 
18. Suspicious Storage - Use this label if only a small amount of luggage is visible given the stated nature of the trip, if the luggage is stored in the back of the cab instead of the trunk, if the vehicle has an unusual or secret storage compartment  or a car window that will not go down.
29. Suspicion Found - Use this label if the court deciding the case concludes, based on the facts present in the case, that the officer had reasonable suspicion to detain the suspect. 
20. Suspicion Not Found - Use this label if the court deciding the case concludes, based on the facts present in the case, that the officer did not have reasonable suspicion to detain the suspect.
21. No Factor - If none of the factors apply or the court is citing or quoting a legal rule, select this option.

You are also to follow these specific rules:

Typically, a sentence will describe a single factor, however, in some cases, a single sentence may include more than one factor.  If a sentence describes more than one factor, give a label for each factor in the sentence. 

Here are some specific rules you should follow:

1. Precepts or rules of law described by the court should not be labelled.  For example: "A police officer may extend the detention beyond the scope of a routine traffic stop if the driver consents or the officer has reasonable suspicion of criminal activity. Id. at 336."

2. The data is in the form of an appellate court opinion.  Conclusions reached by a lower or a trial court should not be labelled.  Sample language would be "The district court concluded that the officer had probable cause for the search".

3. The charges before the court are not to be considered Legal Indications of Drug Use.  For example: "The defendant is charged with possession with intent to distribute," should not be labeled.  However, "A record check revealed that the motorist had a conviction for drug possession" should be labelled as Legal Indication of Drug Use.

4. A sentence may be from a concurring or dissenting opinion. Do not annotate concurring or dissenting opinions even if they contain sentences describing factors.

5. Arguments by the parties should never be treated as a factor.  For example: "Gray argues that there was not reasonable suspicion for a prolonged detention".  Because this describes an argument, it is not a fact. Common words for argument are challenges, maintains, proffers, alleges. 

6. Sentences that contain solely a legal citation should be labelled as No Factor.  For example: "United States v. Oliver, 343 U.S. 900 (2019)"

7. Statements that describe a legal issue are not a factor.  For example: "The question before the court is whether the officer had reasonable suspicion to detain the motorist?"

8. Officer testimony can support the finding of a factor. 

You should apply a label for each sentence. Here are some examples: 

1. Sentence: Officer Guthrie testified that while the above exchanges were taking place, he noticed that the driver, Arturo Tapia, seemed nervous, and that his hands were shaking.
Label: Physical Appearance of Nervousness

2. Sentence: Upon reviewing the vehicle's documentation, Trooper Conrad discovered that the vehicle belonged to an absent third party, which, in his experience, raised his suspicion that the vehicle was being used for drug trafficking.
Label: Unusual Vehicle Ownership

3. Sentence: Typically, in my training and experience, the overwhelming smell of air fresheners in a rental vehicle is consistent with trying to mask the odor of controlled substances.
Label: Masking Agent, Unusual Vehicle Ownership
-END INSTRUCTIONS-

-START LABELLING-

-EXPECTED OUTPUT-
Sentence [Number]: [Sentence [number] contents]
Label: [label for sentence [number]]

Label the following sentences individually: 

Sentence 1: Defendant argues that any reasonable suspicion supporting an extension of the stop in this case was not particularized to him, and therefore any extended seizure of him individually was unlawful.
Sentence 2: We disagree.
Sentence 3: First, the record includes several circumstances, supported by uncontroverted evidence, sufficient to support a reasonable suspicion particularized to Defendant that he was engaged in drug activity, including Defendant\'s presence in a high crime area known by Officer Freeman to be the site of drug transactions, Defendant\'s history of drug arrests, his expression of surprise at seeing Officer Freeman in the Motel 6 parking lot, and Officer Freeman\'s recognition of Defendant\'s name and appearance in the context of prior illegal drug activity.
Sentence 4: See, e.g., State v. Stone , 179 N.C. App. 297, 303-04, 634 S.E.2d 244, 248 (2006) (holding that an officer had reasonable suspicion of illegal activity particularized to a passenger in a vehicle stopped for a traffic violation where he was "moving from side to side inside the vehicle and [the officer] also recognized defendant as someone who had been identified to police as a drug dealer"), aff\'d , 362 N.C. 50, 653 S.E.2d 414 (2007).
Sentence 5: Second, "[a] law enforcement officer may stop and briefly detain a vehicle and its occupants if the officer has reasonable, articulable suspicion that criminal activity may be afoot."
Sentence 6: State v. Jackson , 199 N.C. App. 236, 241, 681 S.E.2d 492, 496 (2009) (citation omitted) (emphasis added).
Sentence 7: "[A] passenger in a car that has been stopped by a law enforcement officer is still seized when the stop is extended[,]" id. at 240, 681 S.E.2d at 495, and it logically follows that a lawfully extended detention of the vehicle and driver due to a reasonable suspicion of drug activity includes a lawful extended detention of a passenger in that vehicle.
Sentence 8: Because Officer Freeman had reasonable suspicion of drug activity to lawfully extend the traffic stop, he was permitted to ask additional questions of Matchin related to drug activity in addition to issuing his traffic warning.
Sentence 9: The trial court\'s unchallenged findings included the fact that Officer Weston observed an orange syringe cap in the driver\'s seat while Officer Freeman questioned Matchin.
Sentence 10: Officer Weston then asked Defendant to exit the vehicle, which he was lawfully permitted to do, even absent reasonable suspicion as to Defendant.
Sentence 11: State v. Pulliam , 139 N.C. App. 437, 440, 533 S.E.2d 280, 283 (2000) ("[T]he United States Supreme Court has affirmed the right of police to order passengers from a vehicle in order to conduct a search of the driver\'s car, despite the complete absence of probable cause or reasonable suspicion concerning the passengers." (citing Maryland v. Wilson , 519 U.S. 408, 117 S.Ct. 882, 137 L.Ed.2d 41 (1997) ) ).
Sentence 12: The trial court also found, and Defendant does not challenge the fact, that when Defendant exited the vehicle per this lawful instruction, Officer Weston noticed a second syringe cap in the passenger\'s seat.
Sentence 13: Officer Weston informed Officer Freeman about the syringe caps and, following additional questioning of Matchin as to whether he was diabetic, Officer Freeman searched the vehicle and arrested Matchin and Defendant.
Sentence 14: All of this conduct occurred within the course of a lawfully extended traffic stop based on reasonable suspicion of drug activity arising prior to the completion of the stop\'s original mission.
Sentence 15: Defendant\'s argument that Officers Freeman\'s and Weston\'s interactions with Matchin and Defendant after a warning was given to Matchin about his unsafe driving unconstitutionally extended the traffic stop is overruled.
Sentence 16: Defendant challenges as unsupported or erroneous several additional findings of fact and conclusions of law.
Sentence 17: Specifically, Defendant challenges the trial court\'s findings that Officer Freeman was still explaining his warning when he was advised of the syringe caps, and that he had not completed his mission at that time.
Sentence 18: Because we hold on de novo review that the trial court properly concluded that "Officer Freeman had reasonable suspicion of illegal drug activity, namely the possession of drug paraphernalia, and that justified prolonging the stop to investigate that behavior," any error in the challenged findings was not prejudicial.
Sentence 19: See, e.g., State v. Williams , 190 N.C. App. 301, 307, 660 S.E.2d 189 (2008) (affirming a trial court\'s order which included an unsupported finding that was "unnecessary to the trial court\'s ultimate conclusions of law and ruling").
Sentence 20: The trial court properly denied Defendant\'s motion to suppress, and any error in making an unsupported finding unnecessary to that ruling does not demonstrate "a reasonable possibility that, had the error in question not been committed, a different result would have been reached ...."
Sentence 21: N.C. Gen. Stat. § 15A-1443 (2015).
Sentence 22: As to Defendant\'s argument that the trial court erred in concluding Officer Weston\'s removal of Defendant from the vehicle was lawful and that Officer Freeman had reasonable suspicion of illegal drug activity, we affirm those conclusions on de novo review as set forth supra .
Sentence 23: CONCLUSION
Sentence 24: The trial court\'s unchallenged findings and the uncontroverted evidence confirm that Officer Freeman lawfully stopped Matchin and Defendant for a traffic violation and that, before he completed the mission of the stop, Officer Freeman obtained reasonable suspicion of illegal drug activity and could lawfully extend the stop to investigate any wrongdoing.
Sentence 25: The lawful investigation yielded probative evidence of a crime, and the trial court did not err in denying Defendant\'s motion to suppress the evidence obtained as a result of the stop.
Sentence 26: NO ERROR.
Sentence 27: Judges BRYANT and DAVIS concur.
Sentence 28: The trial transcript identifies the driver\'s last name as "Meacham," while various filings in the printed record use the name "Matchin."
Sentence 29: Both the State and Defendant adopt the latter in their briefs, believing the transcript\'s spelling to be a typographical error.
Sentence 30: Because the name of the driver is not a fact at issue on appeal, we adopt the "Matchin" spelling used in the documents in the printed record and the parties\' briefs for consistency and ease of reading.
Sentence 31: Defendant filed a petition for writ of mandamus to compel the State to produce a copy of the dash-cam video in a format viewable by this Court.
Sentence 32: Because we are able to view the video in the format in which it was originally provided, we deny Defendant\'s motion.
Sentence 33: The State presented evidence that the contents of the plastic bag were confirmed by chemical analysis to be heroin.
Sentence 34: Defendant does not challenge this evidence on appeal.
Sentence 35: While the trial court did not make a finding of fact as to the exact length of the searches, no such finding was required: "where there is no material conflict in the evidence as to a certain fact, the trial court is not required to make any finding at all as to that fact."
Sentence 36: State v. Travis , 245 N.C. App. 120, 129, 781 S.E.2d 674, 679 (2016) (citing State v. Smith , 135 N.C. App. 377, 380, 520 S.E.2d 310, 312 (1999) ).
Sentence 37: In such situations, "[a] finding may be implied by the trial court\'s denial of defendant\'s motion to suppress where the evidence is uncontradicted."
Sentence 38: Smith, 135 N.C. App. at 380, 520 S.E.2d at 312 (citation omitted).
Sentence 39: The uncontradicted evidence introduced at trial shows that Officer Freeman was engaged in these database searches at least until the time Officer Weston arrived.
Sentence 40: This is the only relevant finding challenged by Defendant, arguing that it constitutes a mere recitation of testimony.



TASK
In this task, we are attempting to label sentences to assess whether they contain important information.  These facts are tied to a specific legal problem which we have described below: 

-START LEGAL PROBLEM EXPLANATION-
We are interested in highway drug-interdiction. This occurs when a motorist is stopped by police for violating a traffic law and is subsequently detained based on an officer’s reasonable suspicion that the motorist is trafficking or possessing drugs.
An example of drug interdiction: John Smith, a motorist, is driving down interstate 95 in Miami Dade County, Florida with a brake light out and an occluded license plate. Officer Brown, who has been following Mr. Smith, initiates a traffic stop due to the light and the license plate. After Mr. Smith pulls over, Officer Brown observes Mr. Smith is moving around and appears to be reaching under his seat. After approaching the vehicle, Officer Brown notices that Mr. Smith is more nervous that someone would usually be when stopped for a traffic offense. He notices that Mr. Smith is sweating, shaking, and avoiding eye contact. Mr. Smith hands Officer Brown his license and registration, and vehicle rental agreement, which shows that Mr. Smith rented the vehicle in Philadelphia, and the car is due back there in 1 day. Officer Brown notices two cellphones in the center console, 1 prepaid, and 1 iPhone; he sees numerous cans of Redbull, and McDonald’s bags strewn about the vehicle; he notices a number of air fresheners hanging from the rearview mirror; he sees that instead of placing his luggage in the trunk, Mr. Smith has kept a small amount of luggage in the rear of the vehicle. Officer Brown asks Mr. Smith where he is coming from and where he is going. Mr. Smith states that he is coming from Washington D.C. and is headed to Arkansas to see family. When Officer Smith asks why, if he was headed to Arkansas to see family, he was in Miami, Mr. Smith states that he is actually seeing his girlfriend, who he cannot name, in Miami, before heading west to Arkansas to see his family. Based on the foregoing, Officer Brown believes that Mr. Smith is actually trafficking drugs, and detains him for 20 minutes until a drug dog can complete an open air sniff of the vehicle. Upon completion of the sniff, the dog indicates that there are drugs in the trunk of the vehicle. After opening the trunk, Officer Brown seizes 5kg of cocaine from the vehicle. Mr. Smith is arrested, and subsequently charged.
The legal question presented from these facts is whether Officer Brown had reasonable suspicion based upon articulable facts (his observations) that criminal activity was afoot. If so, then he could detain Mr. Smith for the time necessary to complete a canine sniff of the vehicle. If not, Mr. Smith’s constitutional rights have been violated due to the detention. We will be annotating cases that present the same legal problem. Although the facts (factors) of each case will be different to some degree (small or great), this is the legal problem that must be examined. There are certain kinds of facts that we are interested in identifying. Below we refer to these facts as factors.
-END LEGAL PROBLEM EXPLANATION-

-START INSTRUCTIONS-
YOU will assess sentences to and determine whether they belong to any of the following categories based on the content of the sentence and the descriptions below: 

1. Furtive Movement - Use this label if the driver or passenger in the vehicle makes a suspicious movement, such as reaching beneath a seat, or in a purse or bag, or around a waistband, or in a pocket, which is commonly an attempt to conceal contraband or a weapon.  This also includes attempting to evade custody such as taking a long time to pull the vehicle over.  Simple driving mistakes do not count under this factor.
2. Nervous Behavior or Appearance - Use this label if the motorist appears to be nervous, has shaking hands or a heavy heartbeat, or is sweating even though the temperature is cool.  Also use this label if the the motorist behaves in a nervous way, avoids making eye contact with the officer, focuses on a bag or compartment in the car, appears to be agitated, confronts the officer, gives the officer a curt response, volunteers too much information, or behaves in an overly friendly way toward the officer. 
3. Suspicious or Inconsistent Answers - Use this label if the driver made an answer to an officer that is evasive, nonsensical, inconsistent, contradictory, impossible, vague, incomplete, unusual, or untruthful.
4. Motorist license or Identification - Use this label if the motorist cannot provide the officer with a license or identification or if the license is invalid, revoked, fake, the wrong color, flimsy, or in someone else’s name. 
5. Driver Status - Use this label only if the driver of the vehicle is male, young, or not from the state in which the officer pulled the car over. 
6. Refused Consent - Use this label if the driver refused to consent to the officer’s request to search the automobile.
7. Legal Indications of Drug Use - Use this label if the motorist has an active arrest warrant for a drug related charge or if the motorist has been arrested for or convicted of a drug related offense in the past or if the officer knows that the motorist has abused, possessed, dealed, or trafficked in drugs in the past. 
8. Motorist's Appearance Related to Drug Use or Sale - Use this label if driver looks like they USE DRUGS such as needle track marks, rotten teeth, scabbing, bloodshot eyes, dilated pupils, unwashed hair, dirty clothes, body odor or dirty skin or if the driver is wearing suspicious clothing, such as expensive jewelry, expensive or luxury clothing, or clothing with images of drugs (e.g., marijuana leaves).
9. Possible Drug Route - Use this label if the driver’s route is from or to a city or area, which is known for drug trafficking or high crime rates, or if the driver stops the vehicle late at night or early in the morning in an area known for criminal activity. 
10. Unusual Travel Plans - Use this label if the motorist appears to be headed to a location that the motorist has already passed, is traveling on a road that does not lead to the stated destination, plans a trip that is too far to drive in a reasonable time (e.g., driving from Philadelphia to Miami in a single night), claims to be driving a long round trip in a one-day rental vehicle, or has other unusual travel plans.
11. Expensive Vehicle - Use this label if the motorist is driving a kind of vehicle associated with illicit drug use or trafficking such as a luxury or expensive vehicle, e.g., a BMW, Mercedes, Cadillac, or Range Rover.
12. Vehicle License Plate or Registration - Use this label if the vehicle's license plate is missing, shielded from view, or from out of state, or if the license plate or vehicle registration has expired.
13. Unusual Vehicle Ownership - Use this label if the vehicle is rented or if the vehicle is owned by someone not in the vehicle, unknown to the driver, or about whom the driver knows very little or claims to be a distant relative. 
14. Indicia of Hard Travel - Use this label if the motorist has been driving a great distance for a long time and is attempting to make as few stops as possible, or if the vehicle contained fast-food bags, lots of trash, energy drinks or substances designed to keep the consumer awake, such as Redbull, Five-Hour Energy, or Energize Capsules. 
15. Masking Agent - Use this label if the vehicle contained a substance or product used to mask the odor of drugs such as air fresheners (e.g., Little Trees, Febreze, Glade, etc.), scented dryer sheets or baby wipes, or strongly smelling tobacco products, cigars or cigarettes or other strong smells.
16. Vehicle Contents Suggest Drugs - This label SHOULD NOT be used for anything found after a canine has sniffed the car. Use this label if the vehicle smells of drug use (e.g., smells of raw or burnt marijuana or of chemicals such as meth or heroin) or contains drugs in plain view, or items used to ingest or use drugs such as pipes, syringes, needles, lighters, torches, drug paraphernalia, cigarette rolling papers (e.g., Raw or ZigZag brand rolling papers), marijuana cigarettes, joints, or blunts, vials, prescription bottles, or small glass containers used to hold drugs.  This label also applies if there are large amounts of cash or large bill denominations (e.g., $100 bills).
17. Suspicious Communications Device - Use this label if the officer observes suspicious communications devices such as multiple cell phones or a prepaid burner phone. 
18. Suspicious Storage - Use this label if only a small amount of luggage is visible given the stated nature of the trip, if the luggage is stored in the back of the cab instead of the trunk, if the vehicle has an unusual or secret storage compartment  or a car window that will not go down.
29. Suspicion Found - Use this label if the court deciding the case concludes, based on the facts present in the case, that the officer had reasonable suspicion to detain the suspect. 
20. Suspicion Not Found - Use this label if the court deciding the case concludes, based on the facts present in the case, that the officer did not have reasonable suspicion to detain the suspect.
21. No Factor - If none of the factors apply or the court is citing or quoting a legal rule, select this option.

You are also to follow these specific rules:

Typically, a sentence will describe a single factor, however, in some cases, a single sentence may include more than one factor.  If a sentence describes more than one factor, give a label for each factor in the sentence. 

Here are some specific rules you should follow:

1. Precepts or rules of law described by the court should not be labelled.  For example: "A police officer may extend the detention beyond the scope of a routine traffic stop if the driver consents or the officer has reasonable suspicion of criminal activity. Id. at 336."

2. The data is in the form of an appellate court opinion.  Conclusions reached by a lower or a trial court should not be labelled.  Sample language would be "The district court concluded that the officer had probable cause for the search".

3. The charges before the court are not to be considered Legal Indications of Drug Use.  For example: "The defendant is charged with possession with intent to distribute," should not be labeled.  However, "A record check revealed that the motorist had a conviction for drug possession" should be labelled as Legal Indication of Drug Use.

4. A sentence may be from a concurring or dissenting opinion. Do not annotate concurring or dissenting opinions even if they contain sentences describing factors.

5. Arguments by the parties should never be treated as a factor.  For example: "Gray argues that there was not reasonable suspicion for a prolonged detention".  Because this describes an argument, it is not a fact. Common words for argument are challenges, maintains, proffers, alleges. 

6. Sentences that contain solely a legal citation should be labelled as No Factor.  For example: "United States v. Oliver, 343 U.S. 900 (2019)"

7. Statements that describe a legal issue are not a factor.  For example: "The question before the court is whether the officer had reasonable suspicion to detain the motorist?"

8. Officer testimony can support the finding of a factor. 

You should apply a label for each sentence. Here are some examples: 

1. Sentence: Officer Guthrie testified that while the above exchanges were taking place, he noticed that the driver, Arturo Tapia, seemed nervous, and that his hands were shaking.
Label: Physical Appearance of Nervousness

2. Sentence: Upon reviewing the vehicle's documentation, Trooper Conrad discovered that the vehicle belonged to an absent third party, which, in his experience, raised his suspicion that the vehicle was being used for drug trafficking.
Label: Unusual Vehicle Ownership

3. Sentence: Typically, in my training and experience, the overwhelming smell of air fresheners in a rental vehicle is consistent with trying to mask the odor of controlled substances.
Label: Masking Agent, Unusual Vehicle Ownership
-END INSTRUCTIONS-

-START LABELLING-

-EXPECTED OUTPUT-
Sentence [Number]: [Sentence [number] contents]
Label: [label for sentence [number]]

Label the following sentences individually: 

Sentence 1: However, such recitative findings are "insufficient only where a material conflict actually exists on that particular issue."
Sentence 2: Travis at 128, 781 S.E.2d at 679 (emphasis added).
Sentence 3: Because the evidence is uncontradicted as to this fact, we reject Defendant\'s challenge.
Sentence 4: Defendant argues on appeal only that the traffic stop was unconstitutionally extended; he does not argue that the search of the vehicle was unconstitutional.', 
Sentence 5: Dissenting/Concuring:  'Not Available',     Dissenting/Concuring 2:  'Not Available',     Dissenting/Concuring 3:  'Not Available'



