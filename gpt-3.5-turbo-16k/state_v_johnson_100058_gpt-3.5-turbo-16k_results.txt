Sentence 1: Case Name: 'Abner Dale JOHNSON, Appellant v. STATE of Arkansas, Appellee'
Label: No Factor

Sentence 2: Citation: '392 S.W.3d 897', Court Name: 'Arkansas Court of Appeals'
Label: No Factor

Sentence 3: Decision Date YYYY-MM-DD: '2012-02-22'
Label: No Factor

Sentence 4: ID No. : 7095723, 'JOHN B. ROBBINS, Judge.
Label: No Factor

Sentence 5: | Appellant Abner Dale Johnson entered a conditional guilty plea to possession of methamphetamine, possession of drug paraphernalia, driving while intoxicated, refusal to submit to a chemical test, and having a broken tail light, for which he received three years’ probation.
Label: No Factor

Sentence 6: Upon entering the conditional plea, Mr. Johnson reserved in writing the right to appeal and challenge the trial court’s denial of his motion to suppress evidence pursuant to Rule 24.3(b) of the Arkansas Rules of Criminal Procedure.
Label: No Factor

Sentence 7: In this appeal, Mr. Johnson argues that his motion to suppress the incriminating evidence should have been granted because the police officer illegally detained him after the legitimate purpose of the traffic stop had ended in violation of Rule 3.1 of the Arkansas Rules of Criminal Procedure.
Label: No Factor

Sentence 8: We affirm.
Label: No Factor

Sentence 9: Officer Chris Jones of the Carroll County Sheriffs Department testified at the suppression hearing.
Label: No Factor

Sentence 10: Officer Jones testified that he was on duty at 2:20 a.m. on December |26, 2010, when he observed a vehicle traveling on Highway 103 with a broken tail light.
Label: Vehicle License Plate or Registration

Sentence 11: Officer Jones also received information from another officer via radio that the vehicle had passed him on the highway and failed to dim its lights.
Label: No Factor

Sentence 12: Officer Jones initiated his blue lights and stopped the vehicle for these violations.
Label: No Factor

Sentence 13: Officer Jones testified that after he made the stop he approached the driver’s side of the car.
Label: No Factor

Sentence 14: Mr. Johnson was driving and a woman named Ms. Scofield was riding as a passenger.
Label: No Factor

Sentence 15: Officer Jones indicated that he was familiar with Mr. Jones because he had stopped him several times before, and that he had stopped him within the past month for the same broken tail light.
Label: No Factor

Sentence 16: According to Officer Jones, Mr. Johnson was talkative and “easy to get along with” the previous times he stopped him, but on this occasion he exhibited completely different behavior.
Label: Nervous Behavior or Appearance

Sentence 17: Officer Jones testified that while he made contact with Mr. Johnson at the driver’s side door, Mr. Johnson looked straight ahead and would not make eye contact.
Label: Nervous Behavior or Appearance

Sentence 18: Officer Jones said that “his hands were shaking, and his whole demeanor had changed.”
Label: Physical Appearance of Nervousness

Sentence 19: Officer Jones identified himself and, after going back and speaking with another officer, he asked Mr. Johnson for identification, registration, and insurance.
Label: Motorist license or Identification

Sentence 20: Mr. Johnson handed Officer Jones identification, and Officer Jones ran a check and found that his driver’s license was valid.
Label: No Factor

Sentence 21: Upon request, Ms. Scofield also produced a valid driver’s license.
Label: No Factor

Sentence 22: After that, Officer Jones asked dispatch for outstanding warrants but evidently found none.
Label: No Factor

Sentence 23: Officer Jones testified that he did not remember if there had been any convictions, but he knew that Mr. Johnson had prior drug problems.
Label: Legal Indications of Drug Use

Sentence 24: Officer Jones believed that past drug abuse had caused Mr. Johnson to have a heart 13attack.
Label: No Factor

Sentence 25: He further testified that Ms. Scofield had a history with drugs and had been arrested within the past couple of months for possession of a controlled substance.
Label: Legal Indications of Drug Use

Sentence 26: Officer Jones said that there had been reports of drug activity along Highway 103, although he acknowledged that he was not there that night because of drugs in the area and that there was probably drug activity along every road in the county.
Label: No Factor

Sentence 27: Officer Jones asked Mr. Johnson to step out of the car, and Mr. Johnson complied but did not make eye contact and was violently shaking.
Label: Nervous Behavior or Appearance

Sentence 28: Officer Jones acknowledged that it was very cold that night (about fifteen to twenty degrees) but said that Mr. Johnson appeared nervous and looked more nervous the more they talked.
Label: Nervous Behavior or Appearance

Sentence 29: Officer Jones asked both passengers what they were doing that night, and they both responded that they were out riding country roads.
Label: Unusual Travel Plans

Sentence 30: Officer Jones thought it very strange to be riding back roads when it was below freezing.
Label: Unusual Travel Plans

Sentence 31: He testified that Mr. Johnson and Ms. Scofield gave stories that were inconsistent, but he could not remember what the inconsistencies were.
Label: Suspicious or Inconsistent Answers

Sentence 32: Officer Jones asked if there was anything illegal in the car, and Mr. Johnson said not to his knowledge.
Label: Suspicious or Inconsistent Answers

Sentence 33: Officer Jones asked for consent to look inside the car but Mr. Johnson refused.
Label: Refused Consent

Sentence 34: At 2:33 a.m., which was thirteen minutes into the stop, Officer Jones called Officer Zimmerman, a canine officer, and requested a canine sniff of appellant’s car.
Label: No Factor

Sentence 35: At that point Officer Jones had not determined whether he was going to ticket Mr. Johnson, and he said he probably would have just issued a warning had no other incriminating evidence been found.
Label: No Factor

Sentence 36: Officer Jones stated, “I felt like I needed more because of what was there.”
Label: No Factor

Sentence 37: |4Officer Zimmerman testified that he was not working that night and that when he received the call from Officer Jones he was at home.
Label: No Factor

Sentence 38: After getting dressed and getting the dog, Officer Zimmerman left his house about five minutes later.
Label: No Factor

Sentence 39: He arrived at the scene at 2:52 a.m., which was thirty-two minutes after the initial stop.
Label: No Factor

Sentence 40: After he arrived, Officer Zimmerman conducted a canine sniff, and the canine alerted to drugs in the vehicle, resulting in Mr. Johnson’s arrest.
Label: Vehicle Contents Suggest Drugs

Sentence 1: On appeal, Mr. Johnson argues that his motion to suppress should have been granted because the legitimate purpose of the stop had ended and his continued detention was unlawful under the provisions of Ark. R.Crim. P. 3.1 and the Fourth Amendment of the United States Constitution.
Label: No Factor

Sentence 2: Rule 3.1 provides:
Label: No Factor

Sentence 3: A law enforcement officer lawfully present in any place may, in the performance of his duties, stop and detain any person who he reasonably suspects is committing, has committed, or is about to commit (1) a felony, or (2) a misdemeanor involving danger of forcible injury to persons or of appropriation of or damage to property, if such action is reasonably necessary either to obtain or verify the identification of the person or to determine the lawfulness of his conduct.
Label: No Factor

Sentence 4: An officer acting under this rule may require the person to remain in or near such place in the officer’s presence for a period of not more than fifteen (15) minutes or for such time as is reasonable under the circumstances.
Label: No Factor

Sentence 5: At the end of such period the person detained shall be released without further restraint, or arrested and charged with an offense.
Label: No Factor

Sentence 6: Mr. Johnson submits that the purpose of the traffic stop had ended at 2:33 a.m. and that there was no reasonable suspicion for his detention beyond that time.
Label: No Factor

Sentence 7: Because the canine sniff detecting the drugs occurred nineteen minutes after that, Mr. Johnson argues that the incriminating evidence was illegally obtained and should have been suppressed.
Label: No Factor

Sentence 8: In reviewing a trial court’s denial of a motion to suppress evidence, we conduct a de novo review based on the totality of the circumstances, reviewing findings of historical facts [sfor clear error and determining whether those facts give rise to reasonable suspicion or probable cause, giving due weight to inferences drawn by the trial court and proper deference to the trial court’s findings.
Label: No Factor

Sentence 9: Yarbrough v. State, 370 Ark. 31, 257 S.W.3d 50 (2007).
Label: No Factor

Sentence 10: We reverse only if the trial court’s ruling is clearly against the preponderance of the evidence.
Label: No Factor

Sentence 11: In this case, the initial stop of Mr. Johnson’s car was legal, and he does not contest that issue on appeal.
Label: No Factor

Sentence 12: Our supreme court has stated that a law-enforcement officer, as part of a valid traffic stop, may detain a traffic offender while completing certain routine tasks, such as computerized checks of the vehicle’s registration and the driver’s license and criminal history, and the writing up of a citation or warning.
Label: No Factor

Sentence 13: Sims v. State, 356 Ark. 507, 157 S.W.3d 530 (2004).
Label: No Factor

Sentence 14: During this process, the officer may ask the motorist routine questions such as his destination, the purpose of the trip, or whether the officer may search the vehicle, and he may act on whatever information is volunteered.
Label: No Factor

Sentence 15: However, after these routine checks are completed, unless the officer has a reasonably articulable suspicion for believing that criminal activity is afoot, continued detention of the driver can become unreasonable.
Label: No Factor

Sentence 16: In Sims, the supreme court held that the legitimate purpose of the traffic stop ended after the officer handed back the driver’s license and registration along with a warning ticket.
Label: No Factor

Sentence 17: We agree with Mr. Johnson’s assertion that the purpose of the traffic stop was over thirteen minutes after the stop when Officer Jones called for the canine officer.
Label: No Factor

Sentence 18: This is because, at that time, Officer Jones had completed the routine tasks associated with the stop and, absent reasonable suspicion, the officer was required to issue a citation or warning if necessary and discontinue the detention.
Label: No Factor

Sentence 19: However, we conclude that Officer Jones had | ^reasonable suspicion to detain Mr. Johnson pursuant to Rule 3.1 of the Arkansas Rules of Criminal Procedure.
Label: Suspicion Found

Sentence 20: Rule 3.1 requires the officer to possess reasonable suspicion that the person is committing, has committed, or is about to commit a felony or misdemeanor involving danger to persons or property.
Label: No Factor

Sentence 21: Malone v. State, 364 Ark. 256, 217 S.W.3d 810 (2005).
Label: No Factor

Sentence 22: The officer must develop reasonable suspicion to detain before the legitimate purpose of the traffic stop has ended.
Label: No Factor

Sentence 23: Whether there is reasonable suspicion depends on whether, under the totality of the circumstances, the police have specific, particularized, and articula-ble reasons indicating that the person may be involved in criminal activity.
Label: No Factor

Sentence 24: Laime v. State, 347 Ark. 142, 60 S.W.3d 464 (2001).
Label: No Factor

Sentence 25: In holding that there was reasonable suspicion for Mr. Johnson’s continued detention, we are guided by our supreme court’s recent decision in Menne v. State, 2012 Ark. 37, 386 S.W.3d 451.
Label: No Factor

Sentence 26: In that case, the supreme court held that the factors that combined to give the officer reasonable suspicion that Ms. Menne was engaged in criminal activity were (1) one month earlier, he had stopped the same vehicle and arrested Ms. Menne’s passenger for DWI and possession of marijuana; (2) during a criminal history check, the officer discovered that Ms. Menne had previously been arrested; (3) the officer had information from a local police department that Ms. Menne was suspected of drug dealing; (4)
Label: No Factor

Sentence 27: Ms. Menne was nervous; and (5) the time of night.
Label: Nervous Behavior or Appearance

Sentence 28: The supreme court stated that while one of these factors may not have been enough to lead to reasonable suspicion, viewing the totality of the circumstances, the trial court did not err in denying the suppression motion.
Label: No Factor

Sentence 29: Arkansas Code Annotated section |716-81-203 specifically mentions the demeanor of the suspect, knowledge of the suspect’s background and character, time of night, and information received from third parties as factors to be considered by law-enforcement officers to determine grounds for reasonable suspicion.
Label: No Factor

Sentence 30: Ark.Code Ann. § 16-81-203(1), (3), (6), (9) (Repl.2005); Menne, supra.
Label: No Factor

Sentence 31: There is no requirement under the statute that a police officer need to have personally observed any or all of these factors.
Label: No Factor

Sentence 32: Menne, supra.
Label: No Factor

Sentence 33: In the present case, during the legitimate purpose of the traffic stop, Officer Jones observed that Mr. Johnson exhibited completely different behavior than during previous encounters, refusing to make eye contact and exhibiting increased nervousness the longer they talked.
Label: Nervous Behavior or Appearance

Sentence 34: The stop occurred at 2:20 a.m., and there were inconsistencies in Mr. Johnson’s and his passenger’s versions of what they were doing that morning.
Label: Suspicious or Inconsistent Answers

Sentence 35: Officer Jones testified that he knew that Mr. Johnson had prior drug problems, and that he believed Mr. Johnson’s previous drug abuse had resulted in a heart attack.
Label: Legal Indications of Drug Use

Sentence 36: Finally, the officer had knowledge that Mr. Johnson’s passenger had a history with drugs and had recently been arrested for possession of a controlled substance.
Label: Legal Indications of Drug Use

Sentence 37: Viewing the totality of the circumstances, we hold that these factors combined to provide reasonable suspicion to continue the detention after the original purpose of the stop was complete.
Label: Suspicion Found

Sentence 38: Mr. Johnson argues in the alternative that, even if there was a sufficient basis for his continued detention, it exceeded the scope of Rule 3.1 because that rule provides that a suspect may be detained for fifteen minutes.
Label: No Factor

Sentence 39: In this case, Officer Jones detained Mr. Johnson | sfor nineteen minutes from the time the canine was requested until the canine officer arrived, in addition to the thirteen minutes he conducted the traffic stop.
Label: No Factor

Sentence 40: We do not agree that the length of the detention violated Rule 3.1.
Label: No Factor

Sentence 1: According to the plain language of the rule, the alternative time period allowed the officer to detain appellant for “such time as [was] reasonable under the circumstances” and was not restricted to a specific number of minutes.
Label: No Factor

Sentence 2: Yarbrough, supra.
Label: No Factor

Sentence 3: In Omar v. State, 99 Ark.App. 436, 262 S.W.3d 195 (2007), we held that the canine arrived without undue delay and that a thirty-seven-minute detention was not unreasonable.
Label: No Factor

Sentence 4: Similarly, the circumstances of this case demonstrated that the canine officer gave prompt attention to Officer Jones’s request and arrived without undue delay just nineteen minutes later.
Label: No Factor

Sentence 5: We hold that the duration of the detention was reasonable under the circumstances.
Label: No Factor

Sentence 6: We affirm the trial court’s denial of Mr. Johnson’s motion to suppress the evidence seized as a result of his detention and the canine sniff of his truck, because that ruling is not clearly against the preponderance of the evidence.
Label: No Factor

Sentence 7: Affirmed.
Label: No Factor

Sentence 8: WYNNE and ABRAMSON, JJ., agree.', 
Label: No Factor

Sentence 9: Dissenting/Concuring: 'Not Available', Dissenting/Concuring 2: 'Not Available', Dissenting/Concuring 3: 'Not Available'
Label: No Factor

