Sentence 1: Case Name: 'STATE of Arizona, Appellant, v. Anthony Jerome WOODS, Appellee'
Label: No Factor

Sentence 2: Citation: '236 Ariz. 527', Court Name: 'Arizona Court of Appeals'
Label: No Factor

Sentence 3: Decision Date YYYY-MM-DD: '2015-02-03'
Label: No Factor

Sentence 4: ID No. : 4032152, 'OPINION
Label: No Factor

Sentence 5: HOWE, Judge:
Label: No Factor

Sentence 6: The State of Arizona appeals the superior court’s grant of Anthony Jerome Woods’s motion to suppress evidence of marijuana packages discovered in his car.
Label: No Factor

Sentence 7: The superior court ruled that a police officer did not have reasonable suspicion to detain Woods for a narcotics dog sniff of his car despite Woods’s extensive criminal history of drag transportation and the officer’s testimony that circumstances indicated that Woods’s actions were suspicious.
Label: Suspicion Not Found

Sentence 8: Upon our de novo review whether the undisputed facts constitute reasonable suspicion, we hold that the police officer had reasonable suspicion to detain Woods for the dog sniff.
Label: Suspicion Found

Sentence 9: We therefore reverse the superior court’s ruling and remand for further proceedings.
Label: No Factor

Sentence 10: FACTS AND PROCEDURAL HISTORY
Label: No Factor

Sentence 11: At the time of the evidentiary hearing, Officer McWhirter had served the Arizona Department of Public Safety as a patrol officer for more than 11 years.
Label: No Factor

Sentence 12: He had more than “200 some hours” of classroom training on drug interdiction and spent two months assigned to the Casa Grande drug canine unit riding with canine officers and “specifically working interdictions.”
Label: No Factor

Sentence 13: During his career, he had personally seized “a lot of drag loads” and “a lot of human smuggling loads.”
Label: No Factor

Sentence 14: In 2010 alone, he interdicted 1,500 pounds of marijuana and 14 pounds of cocaine and seized “between 50 and 75 vehicles” for human smuggling.
Label: No Factor

Sentence 15: ¶ 3 At 5:45 a.m. on November 23, 2010, Officer McWhirter stopped Woods on Interstate 10 in Chandler for swerving his car and traveling at varying speeds.
Label: No Factor

Sentence 16: The officer approached Woods to obtain his driver’s license and vehicle registration, which Woods provided, along with a rental car agreement.
Label: No Factor

Sentence 17: When the officer asked Woods where he was going, Woods stated that he was going to visit a friend in Phoenix who had cancer.
Label: No Factor

Sentence 18: Woods added that he was taking his friend to “rehab,” but could not identify which hospital or the type of rehabilitation.
Label: Suspicious or Inconsistent Answers

Sentence 19: Woods’s answers “confused” and “perplexed” Officer McWhirter and made him suspicious.
Label: Nervous Behavior or Appearance

Sentence 20: Seeing no personal belongings in the car, Officer McWhirter asked Woods if he planned to stay in Phoenix.
Label: No Factor

Sentence 21: Woods stated that he did not.
Label: No Factor

Sentence 22: The officer then ran a records cheek, which revealed that Woods had “a very, very big rap sheet with drugs” and “an extremely extensive background” of transporting and manufacturing drugs in Chicago.
Label: Legal Indications of Drug Use

Sentence 23: ¶ 5 Officer McWhirter then asked Woods for consent to search his car, and Woods agreed to the search and signed a consent form.
Label: Refused Consent

Sentence 24: The officer discovered two plain and unaddressed cardboard shipping boxes in the trunk.
Label: Vehicle Contents Suggest Drugs

Sentence 25: The boxes were sealed with tape and had a “very solid weight,” weighing between five and ten pounds.
Label: Vehicle Contents Suggest Drugs

Sentence 26: The officer believed that the boxes were consistent with packages used for transporting drugs.
Label: Vehicle Contents Suggest Drugs

Sentence 27: When the officer asked Woods about the contents of the boxes, Woods replied that they were “Christmas presents” that he was going to ship once he was in Phoenix.
Label: Suspicious or Inconsistent Answers

Sentence 28: He asked Woods why the boxes “didn’t have any address labels or anything” and were “just completely plain.”
Label: Suspicious or Inconsistent Answers

Sentence 29: Woods “didn’t have a good reason why they weren’t labeled” and merely said that he was going to do it in Phoenix.
Label: Suspicious or Inconsistent Answers

Sentence 30: These statements and the discovery of the boxes further raised Officer McWhirter’s suspicions about Woods’s activity.
Label: Suspicion Found

Sentence 31: He asked if he could open the packages, but Woods refused.
Label: Refused Consent

Sentence 32: ¶ 6 Officer McWhirter then requested that a narcotics dog be brought to the scene.
Label: No Factor

Sentence 33: No city police canine unit was on duty that early in the morning; the closest canine unit was in Maricopa.
Label: No Factor

Sentence 34: When that unit arrived about 40 minutes later, the narcotics dog sniffed the ear and alerted on the trunk and bit one of the boxes.
Label: Vehicle Contents Suggest Drugs

Sentence 35: A search of the boxes revealed marijuana.
Label: Vehicle Contents Suggest Drugs

Sentence 36: The State subsequently charged Woods with one count of sale or transportation of marijuana and alleged that Woods had several historical prior convictions and committed the offense while on community supervision release.
Label: No Factor

Sentence 37: ¶ 7 Woods moved to suppress evidence of the marijuana.
Label: No Factor

Sentence 38: Athough he did not contest the validity of the initial stop, he argued that once he refused to allow the officer to search the boxes, reasonable suspicion did not exist to detain him until the narcotics dog arrived.
Label: Refused Consent

Sentence 39: He also argued the length of his detention awaiting the narcotics dog was unreasonable.
Label: No Factor

Sentence 1: At the subsequent evidentiary hearing, the superior court heard testimony from Officer McWhirter about the stop and the search.
Label: No Factor

Sentence 2: The superior court suppressed the evidence.
Label: No Factor

Sentence 3: Athough the court found that the initial stop and subsequent search of the car pursuant to Woods’s consent were lawful, it ruled that once Woods refused to allow Officer McWhirter to search the boxes, Officer McWhirter had no information “to suggest a basis for reasonable suspicion as to the transportation of illegal substances.”
Label: Suspicion Not Found

Sentence 4: The court acknowledged that Officer McWhirter believed that “the consistency and density of the boxes w[ere] consistent with his experience with packaging of illegal substances,” but without any other evidence found that “his beliefs were far more akin to speculation than reasonable suspicion.”
Label: Suspicion Not Found

Sentence 5: The court found that the time of year — late November — and the location of the boxes — the car’s trunk— were consistent with Woods’s statement that the boxes were Christmas gifts.
Label: No Factor

Sentence 6: The court noted that “but for” the discovery of Woods’s prior criminal history of drug activity, “the officer would not have found anything to be suspicious about the packages.”
Label: Legal Indications of Drug Use

Sentence 7: ¶ 9 Following the suppression ruling, the State dismissed the charges and timely appealed.
Label: No Factor

Sentence 8: DISCUSSION
Label: No Factor

Sentence 9: ¶ 10 The State argues that the superi- or court erred by ruling that Officer McWhirter did not have reasonable suspicion to detain Woods to obtain a dog sniff of his rental car.
Label: Suspicion Not Found

Sentence 10: In reviewing a superior court’s ruling that a detention and consequent search violated the Fourth Amendment, we defer to the superior court’s factual findings, but review de novo mixed questions of law and fact and the superior court’s ultimate legal conclusions about whether the totality of the circumstances warranted an investigative detention and whether its duration was reasonable.
Label: No Factor

Sentence 11: Ornelas v. United States, 517 U.S. 690, 699, 116 S.Ct. 1657, 134 L.Ed.2d 911 (1996); State v. Teagle, 217 Ariz. 17, 22 ¶ 19, 170 P.3d 266, 271 (App.2007).
Label: No Factor

Sentence 12: ¶ 11 A police officer may make a limited investigatory stop if the officer has an “articulable, reasonable suspicion” that “the suspect is involved in criminal activity.”
Label: Suspicion Found

Sentence 13: Teagle, 217 Ariz. at 22-23 ¶ 20, 170 P.3d at 271-72.
Label: No Factor

Sentence 14: “By definition, reasonable suspicion is something short of probable cause.”
Label: No Factor

Sentence 15: State v. O’Meara, 198 Ariz. 294, 296 ¶ 10, 9 P.3d 325, 327 (2000).
Label: No Factor

Sentence 16: While law enforcement must have more than a simple hunch or an “inchoate and unpartieularized suspicion,” reasonable suspicion requires a “minimal level of objective justification” and is “considerably less than proof of wrongdoing by a preponderance of the evidence.”
Label: No Factor

Sentence 17: Teagle, 217 Ariz. at 24 ¶¶ 25-26, 170 P.3d at 273.
Label: No Factor

Sentence 18: “In deciding whether the police have a particularized and objective basis for suspecting that a person is engaged in criminal activity, we look at the “whole picture,’ or the ‘totality of the circumstances,’ ” O’Meara, 198 Ariz. at 295 ¶ 7, 9 P.3d at 326.
Label: No Factor

Sentence 19: Considering the totality of the circumstances permits officers to draw on their specialized training — as well as their common sense knowledge about human behavior — to form their particularized and articulable basis for a stop.
Label: No Factor

Sentence 20: Teagle, 217 Ariz. at 24 ¶26, 170 P.3d at 273.
Label: No Factor

Sentence 21: “There is a ‘gestalt’ to the totality of the circumstances test.”
Label: No Factor

Sentence 22: O’Meara, 198 Ariz. at 296 ¶ 10, 9 P.3d at 327.
Label: No Factor

Sentence 23: ¶ 12 A suspect’s criminal history is part of the totality of the circumstances.
Label: No Factor

Sentence 24: It informs an officer’s judgment about whether criminal activity may be afoot and “may cast a suspicious light on ... seemingly innocent behavior.”
Label: No Factor

Sentence 25: United States v. Simpson, 609 F.3d 1140, 1147 (10th Cir.2010); see also United States v. Chamberlin, 644 F.2d 1262, 1265 (9th Cir.1980); State v. Lee, 265 Neb. 663, 658 N.W.2d 669, 678 (2003).
Label: No Factor

Sentence 26: Although such history cannot alone establish reasonable suspicion to support detention, United States v. Cotterman, 709 F.3d 952, 968 (9th Cir.2013), “[i]n conjunction with other factors, criminal history contributes powerfully to the reasonable suspicion calculus,” United States v. White, 584 F.3d 935, 951 (10th Cir.2009).
Label: Legal Indications of Drug Use

Sentence 27: Accordingly, a suspect’s criminal history is part of the “totality of the circumstances” that informs an officer’s reasonable suspicion of criminal activity.
Label: No Factor

Sentence 28: In reviewing whether reasonable suspicion existed under the totality of the circumstances, “we accord deference to a trained law enforcement officer’s ability to distinguish between innocent and suspicious actions.”
Label: No Factor

Sentence 29: Teagle, 217 Ariz. at 24 ¶ 26, 170 P.3d at 273.
Label: No Factor

Sentence 30: Police officers have specialized training and experience that allows them to make inferences from and deductions about cumulative information that “might well elude an untrained person.”
Label: No Factor

Sentence 31: United States v. Arvizu, 534 U.S. 266, 273, 122 S.Ct. 744, 151 L.Ed.2d 740 (2002) (quoting United States v. Cortez, 449 U.S. 411, 418, 101 S.Ct. 690, 66 L.Ed.2d 621 (1981)).
Label: No Factor

Sentence 32: The facts as a police officer observes them “must be seen and weighed ... as understood by those versed in the field of law enforcement.”
Label: No Factor

Sentence 33: Cortez, 449 U.S. at 418, 101 S.Ct. 690; see also Ornelas, 517 U.S. at 695, 116 S.Ct. 1657 (stating that reasonable suspicion and probable cause “are commonsense, nontechnical conceptions that deal with ‘the factual and practical considerations of everyday life on which reasonable and prudent men, not legal technicians, act’ ”) (quoting Illinois v. Gates, 462 U.S. 213, 231, 103 S.Ct. 2317, 76 L.Ed.2d 527 (1983)).
Label: No Factor

Sentence 34: ¶ 14 According proper deference to Officer McWhirter’s expertise and experience and examining the totality of the circumstances of his encounter with Woods, we find that Officer McWhirter had reasonable suspicion to detain Woods until the narcotics dog arrived.
Label: Suspicion Found

Sentence 35: Officer McWhirter had extensive expertise and experience in detecting the transportation of drugs.
Label: No Factor

Sentence 36: He had served as a DPS patrol officer for more than 11 years and had personally seized “a lot” of drug and human smuggling loads.
Label: No Factor

Sentence 37: In one year, he had interdicted 1,500 pounds of marijuana.
Label: No Factor

Sentence 38: ¶ 15 Using his expertise and experience, Officer McWhirter had particularized and objective reasons for suspecting that Woods was transporting illegal drugs.
Label: Suspicion Found

Sentence 39: Woods was driving a rental ear with no personal belongings.
Label: Unusual Vehicle Ownership

Sentence 40: His explanations for his trip so early in the morning — in one breath stating that he was going to visit his friend who had cancer and then in the next stating that he was taking his friend for “rehab” — were confusing and contradictory.
Label: Suspicious or Inconsistent Answers

Sentence 1: Woods had an extensive criminal history of transporting illegal drugs.
Label: Legal Indications of Drug Use

Sentence 2: In the trunk of the ear, Woods had two unlabeled boxes taped shut that had solid weights that were consistent with drug packages.
Label: Vehicle Contents Suggest Drugs

Sentence 3: These facts gave Officer McWhirter reason to suspect that Woods may be transporting illegal drugs and justified detaining Woods until the narcotics dog arrived.
Label: Suspicion Found

Sentence 4: We review de novo the legal issue whether the facts as the superior court found them constitute reasonable suspicion.
Label: No Factor

Sentence 5: Orne-las, 517 U.S. at 699, 116 S.Ct. 1657.
Label: No Factor

Sentence 6: As the superior court noted in its ruling, the facts were undisputed; the question was what the facts meant.
Label: No Factor

Sentence 7: The superior court ruled that in its view, Officer McWhirter’s beliefs about the meaning of the facts “were far more akin to speculation than reasonable suspicion.”
Label: No Factor

Sentence 8: That is the ultimate legal conclusion, however.
Label: No Factor

Sentence 9: Upon our de novo review of the record and considering that Woods was using a rental car with no personal belongings inside, provided confusing explanations about the purpose of his trip, had an extensive criminal history of drug transportation, and had two unlabeled taped boxes in the trunk of his ear that had a weight and density consistent with drug packages, we find that under the totality of the circumstances, Officer McWhirter had reasonable suspicion to detain Woods until the narcotics dog arrived.
Label: Unusual Vehicle Ownership, Suspicious or Inconsistent Answers, Legal Indications of Drug Use, Vehicle Contents Suggest Drugs, Suspicion Found

Sentence 10: We therefore reverse the superior court’s ruling suppressing the evidence.
Label: No Factor

Sentence 11: Because the superior court did not rule on Woods’s motion that the length of his detention was unreasonable, we remand to the superior court for further proceedings.
Label: No Factor

Sentence 12: CONCLUSION
Label: No Factor

Sentence 13: ¶ 18 For these reasons, we reverse the ruling suppressing the evidence and remand for proceedings consistent with this opinion.
Label: No Factor

Sentence 14: . Woods did not file an answering brief.
Label: No Factor

Sentence 15: "When a debatable issue is raised on [appeal], the failure to file an answering brief generally constitutes a confession of error.”
Label: No Factor

Sentence 16: Gibbons v. Indus.
Label: No Factor

Sentence 17: Comm’n of Ariz., 197 Ariz. 108, 111 ¶ 8, 3 P.3d 1028, 1031 (App.1999).
Label: No Factor

Sentence 18: We may, however, exercise our "discretion to waive this general rule to address a purely legal issue.”
Label: No Factor

Sentence 19: Because “[t]his case presents such an issue,” we address the merits of the State's appeal.
Label: No Factor

Sentence 20: Id.'
Label: No Factor

Sentence 21: Dissenting/Concuring: 'Not Available', Dissenting/Concuring 2: 'Not Available', Dissenting/Concuring 3: 'Not Available'
Label: No Factor

