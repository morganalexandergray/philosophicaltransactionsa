Sentence 1: Case Name: 'UNITED STATES of America, Plaintiff-Appellee, v. Michael Curtis WILLIAMS, Defendant-Appellant'
Label: No Factor

Sentence 2: Citation: '403 F.3d 1203', Court Name: 'United States Court of Appeals for the Tenth Circuit'
Label: No Factor

Sentence 3: Decision Date YYYY-MM-DD: '2005-04-18'
Label: No Factor

Sentence 4: ID No. : 9021500, 'BRACK, District Judge.
Label: No Factor

Sentence 5: Defendant-Appellee Michael Curtis Williams appeals the district court’s denial of his motion to suppress evidence based on violations of the Fourth Amendment in connection with the search of his vehicle and the scope of his detention.
Label: No Factor

Sentence 6: The district court found that the search and detention were justified because there was an objectively reasonable suspicion of illegal activity.
Label: Suspicion Found

Sentence 7: We exercise jurisdiction pursuant to 28 U.S.C. § 1291 and affirm.
Label: No Factor

Sentence 8: Factual Background
Label: No Factor

Sentence 9: On January 7, 2004, Mr. Williams was driving eastbound on Interstate 40 when OMahoma Highway Patrol Trooper Cody Hyde observed Mr. Williams driving without a seat belt and violating the posted speed limit.
Label: No Factor

Sentence 10: Mr. Williams was traveling with three other individuals.
Label: No Factor

Sentence 11: Mr. Williams exited the interstate and was pulled over shortly thereafter.
Label: No Factor

Sentence 12: Trooper Hyde asked Mr. Williams to step out of the car and join him in the patrol car.
Label: No Factor

Sentence 13: Mr. Williams was extremely nervous throughout the encounter.
Label: Nervous Behavior or Appearance

Sentence 14: Mr. Williams’ hands were shaking, his voice was cracking, he could not sit still, and his heart was beating so fast that Trooper Hyde was able to see his chest jerk.
Label: Physical Appearance of Nervousness

Sentence 15: Mr. Williams admitted to Trooper Hyde that he had exited the interstate to avoid the traffic stop.
Label: Suspicious or Inconsistent Answers

Sentence 16: Trooper Hyde asked Mr. Williams where he and his passengers had been and where they were going.
Label: Suspicious or Inconsistent Answers

Sentence 17: Mr. Williams identified all of the passengers in the van, although he knew one passenger only as “Larry.”
Label: Suspicious or Inconsistent Answers

Sentence 18: Mr. Williams stated that they had been visiting family in Shawnee, Oklahoma for a few days and that they were on their way home to Tennessee.
Label: Unusual Travel Plans

Sentence 19: Trooper Hyde then left Mr. Williams in the patrol ear and went to speak with the passengers in the vehicle.
Label: No Factor

Sentence 20: The passenger identified as Mr. Williams’ girlfriend and the passenger known as “Larry” (later identified as Lawrence Louis Gutierrez, Jr. and charged as a co-defendant) indicated that they had been to Phoenix, Arizona for approximately one week to pick up “Larry,” and that they were on their way to Tennessee.
Label: Unusual Travel Plans

Sentence 21: Trooper Hyde returned to the patrol car and again questioned Mr. Williams about his travel history.
Label: No Factor

Sentence 22: Mr. Williams stated that he might have picked up “Larry” in Oklahoma.
Label: Suspicious or Inconsistent Answers

Sentence 23: Mr. Williams continued to appear extremely nervous and was breathing rapidly.
Label: Nervous Behavior or Appearance

Sentence 24: Trooper Hyde gave Mr. Williams his insurance card and told him he was free to leave.
Label: No Factor

Sentence 25: Trooper Hyde, however, asked some additional questions as Mr. Williams exited the patrol car.
Label: No Factor

Sentence 26: According to Trooper Hyde, Mr. Williams appeared as if he were about to run.
Label: Furtive Movement

Sentence 27: Trooper Hyde asked for consent to perform a canine sniff on the van and Mr. Williams refused.
Label: Refused Consent

Sentence 28: Shortly thereafter, Trooper Hyde ordered the passengers out of the vehicle and Mr. Williams back into the patrol car.
Label: No Factor

Sentence 29: A canine sniff was performed on the exterior of Mr. Williams’ vehicle.
Label: No Factor

Sentence 30: The canine alerted to the presence of drugs in the vehicle.
Label: Vehicle Contents Suggest Drugs

Sentence 31: Trooper Hyde then searched the vehicle and discovered a gun and a bag of methamphetamine hidden in the interior of the vehicle.
Label: Vehicle Contents Suggest Drugs

Sentence 32: Mr. Williams and his passengers were arrested.
Label: No Factor

Sentence 33: Mr. Williams was indicted for possession with intent to distribute over 500 grams of methamphetamine, carrying a firearm in relation to a drug trafficking crime, possession of a firearm in furtherance of a drug trafficking crime, and being a felon in possession of a firearm in violation of 21 U.S.C. §§ 841(a)(1), 841(b)(1)(A), 18 U.S.C. §§ 2, 922(g)(1), 924(c)(1)(A)(i), and (c)(1)(C)(i).
Label: Legal Indications of Drug Use

Sentence 34: Mr. Williams filed a motion to suppress the evidence, which was referred to a United States magistrate judge.
Label: No Factor

Sentence 35: After holding an evidentiary hearing on February 12, 2004, the magistrate judge recommended that the motion be denied.
Label: No Factor

Sentence 36: Mr. Williams filed timely objections.
Label: No Factor

Sentence 37: On March 19, 2004, the district judge issued an order adopting the magistrate judge’s recommendation and denying the motion to suppress.
Label: No Factor

Sentence 38: Mr. Williams challenges the district court’s determination that the detention was justified; he does not challenge the validity of the initial stop.
Label: Suspicion Found

Sentence 39: The Government does not argue that Mr. Williams consented to the search of his vehicle.
Label: No Factor

Sentence 40: Discussion
Label: No Factor

Sentence 1: When reviewing an order denying a motion to suppress, we accept the district court’s factual findings unless they are clearly erroneous, and view the evidence in the light most favorable to the district court’s ruling.
Label: No Factor

Sentence 2: United States v. Zabalza, 346 F.3d 1255, 1257-1258 (10th Cir.2003).
Label: No Factor

Sentence 3: The credibility of witnesses, the weight to be given evidence, and the reasonable inferences drawn from the evidence fall within the province of the district court.
Label: No Factor

Sentence 4: United States v. Kimoana, 383 F.3d 1215, 1220 (10th Cir.2004).
Label: No Factor

Sentence 5: The ultimate determination of reasonableness under the Fourth Amendment is a question of law reviewed de novo.
Label: No Factor

Sentence 6: Zabalza, 346 F.3d at 1258.
Label: No Factor

Sentence 7: The Fourth Amendment prohibits unreasonable searches and seizures by the Government.
Label: No Factor

Sentence 8: U.S. Const, amend.
Label: No Factor

Sentence 9: Its protections extend to brief investigatory stops of persons or vehicles that fall short of traditional arrest.
Label: No Factor

Sentence 10: United States v. Arvizu, 534 U.S. 266, 273, 122 S.Ct. 744, 151 L.Ed.2d 740 (2002).
Label: No Factor

Sentence 11: A routine traffic stop constitutes an investigative detention and is examined under the principles announced in Terry v. Ohio, 392 U.S. 1, 19-20, 88 S.Ct. 1868, 20 L.Ed.2d 889 (1968).
Label: No Factor

Sentence 12: The first inquiry under Terry is whether the stop was justified at its inception.
Label: No Factor

Sentence 13: “[A] traffic stop is valid under the Fourth Amendment if the stop is based on an observed traffic violation or if the police officer has reasonable articulable suspicion that a traffic or equipment violation has occurred or is occurring.”
Label: No Factor

Sentence 14: United States v. Botero-Ospina, 71 F.3d 783, 787 (10th Cir.1995) (en banc).
Label: No Factor

Sentence 15: Mr. Williams does not challenge the validity of the initial stop.
Label: No Factor

Sentence 16: Trooper Hyde was justified in stopping Mr. Williams because he observed that Williams was speeding and not wearing his seatbelt.
Label: No Factor

Sentence 17: The second Terry inquiry is whether the officer’s conduct during the detention was reasonably related in scope to the circumstances which justified the initial stop.
Label: No Factor

Sentence 18: Terry, 392 U.S. at 20, 88 S.Ct. 1868.
Label: No Factor

Sentence 19: An officer may detain a motorist for questioning unrelated to the initial traffic stop if he has an objectively reasonable and articulable suspicion that illegal activity has occurred, or the driver voluntarily consents to further questioning.
Label: No Factor

Sentence 20: See United States v. Galindo-Gonzales, 142 F.3d 1217, 1221 (10th Cir.1998).
Label: No Factor

Sentence 21: It is undisputed that Mr. Williams did not consent to any search.
Label: No Factor

Sentence 22: The question is whether Trooper Hyde had an objectively reasonable and articulable suspicion of illegal activity that would justify prolonging the detention.
Label: No Factor

Sentence 23: See United States v. Williams, 271 F.3d 1262, 1268 (10th Cir.2001) (recognizing that the refusal to consent to search cannot be part of the reasonable suspicion calculus, but rather “our analysis turns on whether sufficient and specific articulable facts existed which, when considered together, provided the officer with reasonable suspicion of criminal activity before he asked for consent to search the vehicle”).
Label: No Factor

Sentence 24: The district court relied on the following factual findings to support its conclusion that the detention was justified by reasonable suspicion.
Label: No Factor

Sentence 25: Mr. Williams was extremely nervous during his encounter with Trooper Hyde; his hands were shaking, his voice was cracking, he could not sit still, and his heart was beating so fast that Trooper Hyde was able to see his chest jerk.
Label: Nervous Behavior or Appearance

Sentence 26: Mr. Williams admitted that he exited the interstate to avoid the traffic stop.
Label: Suspicious or Inconsistent Answers

Sentence 27: Mr. Williams and his passengers gave inconsistent stories when asked where they were coming from and how long they had been together.
Label: Suspicious or Inconsistent Answers

Sentence 28: When Mr. Williams exited the patrol car, Mr. Williams appeared as if he were about to run.
Label: Furtive Movement

Sentence 29: Considered in the light most favorable to the district court’s ruling, these findings of fact are not clearly erroneous.
Label: No Factor

Sentence 30: Mr. Williams argues that, when viewed one-by-one, the factors did not give rise to reasonable suspicion.
Label: No Factor

Sentence 31: The Supreme Court has expressly rejected this sort of “divide-and-conquer” analysis; a court may not evaluate and reject each factor in isolation.
Label: No Factor

Sentence 32: United States v. Arvizu, 584 U.S. at 274, 122 S.Ct. 744.
Label: No Factor

Sentence 33: When determining whether there was reasonable suspicion, a court must look to the “totality of the circumstances” to see whether the officer had a “particularized and objective basis for suspecting legal wrongdoing.”
Label: No Factor

Sentence 34: Arvizu, 534 U.S. at 273, 122 S.Ct. 744.
Label: No Factor

Sentence 35: The fact that Mr. Williams offered explanations for the suspicious circumstances is immaterial.
Label: No Factor

Sentence 36: A law enforcement officer may rely upon his training and experience without inquiring of a defendant as to innocent explanations.
Label: No Factor

Sentence 37: See Arvizu, 534 U.S. at 273, 122 S.Ct. 744.
Label: No Factor

Sentence 38: A court should accord deference to an officer’s ability to distinguish between innocent and suspicious actions.
Label: No Factor

Sentence 39: United States v. Gandara-Salinas, 327 F.3d 1127, 1130 (10th Cir.2003).
Label: No Factor

Sentence 40: Although reasonable suspicion may not be based upon a refusal of consent to a search, see Williams, 271 F.3d at 1268, the objective facts known to Trooper Hyde support reasonable suspicion prior to the refusal.
Label: No Factor

Sentence 1: See Whren v. United States, 517 U.S. 806, 813, 116 S.Ct. 1769, 135 L.Ed.2d 89 (1996).
Label: No Factor

Sentence 2: Although refusal to consent may not augment factors supporting reasonable suspicion, neither does it negate those observations made prior to the refusal.
Label: Refused Consent

Sentence 3: During the lawful detention, Trooper Hyde retrieved a trained canine from his police car and conducted a canine search on the exterior of Williams’ vehicle.
Label: No Factor

Sentence 4: A canine sniff on the exterior of a vehicle during a lawful traffic stop does not implicate legitimate privacy interests.
Label: No Factor

Sentence 5: Illinois v. Caballes, — U.S. -, 125 S.Ct. 834, 838, 160 L.Ed.2d 842 (2005).
Label: No Factor

Sentence 6: The canine alerted to the presence of drugs in the vehicle.
Label: Vehicle Contents Suggest Drugs

Sentence 7: A canine alert gives rise to probable cause to search a vehicle.
Label: No Factor

Sentence 8: United States v. Rosborough, 366 F.3d 1145, 1152 (10th Cir.2004).
Label: No Factor

Sentence 9: The search revealed the methamphetamine and the gun.
Label: Vehicle Contents Suggest Drugs

Sentence 10: Based on the totality of the circumstances as found by the district court, Trooper Hyde had a particularized and objective basis for suspecting legal wrongdoing.
Label: Suspicion Found

Sentence 11: Because the stop and detention were based upon reasonable suspicion, and the canine sniff provided probable cause for the search, they did not violate the Fourth Amendment.
Label: Suspicion Found

Sentence 12: Conclusion
Label: No Factor

Sentence 13: We AFFIRM the decision of the district court.', 
Label: No Factor

Sentence 14: Dissenting/Concuring: 'Not Available', Dissenting/Concuring 2: 'Not Available', Dissenting/Concuring 3: 'Not Available'
Label: No Factor

