Sentence 1: Case Name: 'UNITED STATES of America, Plaintiff, v. Scott HIGHT, Defendant'
Label: No Factor

Sentence 2: Citation: '127 F. Supp. 3d 1126', Court Name: 'United States District Court for the District of Colorado'
Label: No Factor

Sentence 3: Decision Date YYYY-MM-DD: '2015-06-29'
Label: No Factor

Sentence 4: ID No. : 4091197, "MEMORANDUM OPINION AND ORDER
Label: No Factor

Sentence 5: Babcock, District Judge.
Label: No Factor

Sentence 6: This case comes before me on Defendant Scott Hight’s Motion to Suppress [Doc. # 35] and Supplemental Motion to Suppress [Doc. # 41], in which he seeks suppression of the evidence that officers discovered in his rental truck during a traffic stop on February 4, 2015.
Label: No Factor

Sentence 7: I have reviewed the motions; the government’s opposition thereto [Doc. # 42]; and the evidence and argument presented at the hearing on June 19, 2015.
Label: No Factor

Sentence 8: As I explain below, I GRANT the motions on three independent grounds.
Label: No Factor

Sentence 9: First, the duration of the traffic stop was measurably extended by matters not tied to the infraction for which Defendant was stopped and thus became unlawful.
Label: No Factor

Sentence 10: Evidence discovered during the subsequent search is fruit of this illegality and must be suppressed.
Label: No Factor

Sentence 11: Second, Defendant’s consent to a search of the truck was not voluntary.
Label: No Factor

Sentence 12: Third, there was no probable cause or consent to search the sealed boxes in the bed of the truck in which drugs were found.
Label: No Factor

Sentence 13: The government has not shown that the inevitable discovery doctrine applies to excuse this lack of probable cause or consent.
Label: No Factor

Sentence 14: Defendant is charged in a one-count indictment with possession with intent to distribute 1 kilogram or more of a mixture or substance containing a detectable amount of heroin, 500 grams or more of a mixture or substance containing a detectable amount of methamphetamine, and 500 grams or more of a mixture or substance containing a detectable amount of cocaine, in violation of 21 U.S.C. §§ 841(a)(1), (b)(1)(A)(i) & (vin), and (b)(1)CB)(ii)(II).
Label: No Factor

Sentence 15: At the hearing, the government called Colorado State Patrol Trooper Jeffrey Chmielew-ski to testify.
Label: No Factor

Sentence 16: I observed the testimony of Trooper Chmielewski closely and found him to be a highly credible witness.
Label: No Factor

Sentence 17: The government also introduced a videotape of the stop and a “consent to search” form.
Label: No Factor

Sentence 18: Defendant introduced no additional testimony or exhibits.
Label: No Factor

Sentence 19: The parties’ counsel indicated that they generally agree on the facts, and neither party has identified any significant factual disputes.
Label: No Factor

Sentence 20: Based on the foregoing, I make the following findings of fact.
Label: No Factor

Sentence 21: On February 4, 2015, at 11:25 p.m., Trooper Chmielewski conducted a traffic stop of a white Ford F-150 pickup truck that Defendant was driving eastbound on Interstate 70.
Label: No Factor

Sentence 22: Defendant was approaching the Eisenhower Tunnel.
Label: No Factor

Sentence 23: The weather was cold, and the road was covered with snow.
Label: No Factor

Sentence 24: Trooper Chmielewski had observed that Defendant’s high beam headlights appeared to be on even though he was within a certain distance of other vehicles on the road, in violation of state statute.
Label: No Factor

Sentence 25: See Colo. Rev. Stat. § 42-4-217.
Label: No Factor

Sentence 26: Trooper Chmielewski also observed certain driving behavior that he testified “surprised” him: Defendant, who was driving in the center lane, moved into the right lane, where the trooper was driving, got behind the trooper, and slowed down.
Label: No Factor

Sentence 27: Trooper Chmielewski acknowledged, however, that drivers generally change their driving patterns when officers are nearby, that they will hesitate to exceed the speed limit in order to pass an officer, and that Defendant might have hesitated to pass the trooper due to the snow on the road.
Label: No Factor

Sentence 28: The stop occurred in a “staging area” at one of the corners of the tunnel.
Label: No Factor

Sentence 29: Trooper Chmielewski introduced himself and asked for Defendant’s driver’s license, vehicle registration, and insurance.
Label: Motorist license or Identification

Sentence 30: Defendant told the trooper that the truck was a rental vehicle.
Label: Unusual Vehicle Ownership

Sentence 31: The trooper asked to see the rental agreement in lieu of registration and insurance.
Label: Vehicle License Plate or Registration

Sentence 32: Defendant provided a rental agreement for a different vehicle.
Label: Unusual Vehicle Ownership

Sentence 33: The trooper asked for the correct agreement.
Label: Vehicle License Plate or Registration

Sentence 34: Defendant had four or five rental agreements in the vehicle and was unable to immediately produce the correct agreement.
Label: Unusual Vehicle Ownership

Sentence 35: The trooper observed that the cargo area of the truck was “fully loaded.”
Label: Indicia of Hard Travel

Sentence 36: He also saw that Defendant’s girlfriend, two Chihuahua dogs, and “numerous bags” were in the cab.
Label: No Factor

Sentence 37: The trooper asked Defendant about his travel plans.
Label: Unusual Travel Plans

Sentence 38: Defendant said he was coming from Ontario, California, had stopped in Las Vegas to change vehicles, and was ultimately bound for Philadelphia, where he was “possibly” moving.
Label: Unusual Travel Plans

Sentence 39: Defendant told the trooper that he was tired and was just trying to get “over the hill.”
Label: No Factor

Sentence 40: The trooper observed that Defendant seemed frustrated, exasperated, and hurried.
Label: Nervous Behavior or Appearance

Sentence 1: At 11:29 p.m., Trooper Chmielewski returned to his vehicle while Defendant continued searching for the correct rental agreement.
Label: No Factor

Sentence 2: He ran Defendant’s driver’s license and conducted a warrant check.
Label: No Factor

Sentence 3: The Colorado State Patrol’s regional communications center advised him that Defendant had a non-extraditable warrant for “dangerous drugs” out of California.
Label: Legal Indications of Drug Use

Sentence 4: Trooper Chmielewski testified that he understands a non-extraditable warrant to be one that calls for arrest only in the state where it was issued.
Label: No Factor

Sentence 5: Therefore, he explained, he never planned to take Defendant into custody on the basis of the California warrant.
Label: No Factor

Sentence 6: Upon discovery of the warrant, however, Trooper Chmielewski began to suspect that Defendant might have drugs in his truck.
Label: Legal Indications of Drug Use

Sentence 7: Hearing of the warrant over the radio, another trooper, James Mahurin, began making his way toward the scene.
Label: No Factor

Sentence 8: At 11:35 p.m., Trooper Chmielewski returned to Defendant’s window and advised him of the warrant.
Label: No Factor

Sentence 9: Defendant said he thought he had taken care of it, and noted he had stopped using drugs since his release from jail.
Label: Legal Indications of Drug Use

Sentence 10: Defendant explained that he had not had a vehicle of his own since his release.
Label: No Factor

Sentence 11: Trooper Chmielewski asked Defendant if he had any contraband in the vehicle.
Label: No Factor

Sentence 12: Defendant said he did not have any drugs in the vehicle, but did have $3,000 in currency.
Label: No Factor

Sentence 13: He said he was delivering camera lenses to Philadelphia, in addition to possibly moving there, but said he did not know for whom he was transporting the lenses.
Label: Unusual Travel Plans

Sentence 14: Trooper Chmielewski asked Defendant if Defendant wanted him to obtain additional information on the warrant, and Defendant responded in the affirmative.
Label: No Factor

Sentence 15: At 11:38 p.m., Trooper Chmielewski again returned to his vehicle.
Label: No Factor

Sentence 16: He obtained the phone number for the sheriffs office in California associated with the warrant.
Label: No Factor

Sentence 17: He discussed his desire to search Defendant’s vehicle with other officers both by radio and by phone.
Label: No Factor

Sentence 18: He also indicated he would “wait” for Trooper Mahurin to arrive before asking Defendant for consent to search his vehicle.
Label: No Factor

Sentence 19: At 11:42 p.m., while the trooper was in his vehicle doing these things, Defendant held a rental agreement out of his window.
Label: No Factor

Sentence 20: At 11:45 p.m., Trooper Chmielewski retrieved the agreement and was back in his vehicle by 11:46 p.m.
Label: No Factor

Sentence 21: He acknowledged that, by this point, he had all of the information he needed to complete the stop.
Label: No Factor

Sentence 22: From 11:46 to 11:57 p.m., Trooper Chmielewski was waiting in his vehicle for Trooper Mahurin to arrive on the scene so he could ask Defendant for permission to search the truck.
Label: No Factor

Sentence 23: Trooper Chmielewski noted that it was customary to wait for an additional officer to arrive before seeking consent due to “officer safety.”
Label: No Factor

Sentence 24: While waiting, Trooper Chmielewski filled out the consent to search form that he planned to ask Defendant to sign.
Label: No Factor

Sentence 25: He also reviewed the rental agreement, but acknowledged that it only takes him approximately two minutes to review a rental agreement.
Label: No Factor

Sentence 26: He retained Defendant’s driver’s license during this period.
Label: No Factor

Sentence 27: At 11:57 p.m., 32 minutes after the stop began, Trooper Chmielewski approached Defendant’s truck; gave him a verbal warning; returned his driver’s license and rental agreement to him; provided him a business card with the phone number for the sheriffs office in California; and told him he was free to go.
Label: No Factor

Sentence 28: As this was happening, Trooper Mahurin arrived on the scene with the “bubble gum” light bar on the top of his patrol vehicle flashing.
Label: No Factor

Sentence 29: It appears these lights had been off on Trooper Chmielewski’s vehicle.
Label: No Factor

Sentence 30: Trooper Mahurin left these lights on and flashing as he exited his car.
Label: No Factor

Sentence 31: He proceeded to stand at the back of Defendant’s truck, just a couple of feet from Trooper Chmielewski, who was still engaged with Defendant at Defendant’s window.
Label: No Factor

Sentence 32: Trooper Chmielewski acknowledged that Trooper Mahurin’s arrival would have been obvious to Defendant.
Label: No Factor

Sentence 33: At exactly midnight, having returned Defendant’s documents to him, Trooper Chmielewski shook his hand and began walking away from the truck.
Label: No Factor

Sentence 34: Just five seconds later however, and barely having walked past the end of Defendant’s truck, Trooper Chmielewski turned around and once again approached Defendant’s window.
Label: No Factor

Sentence 35: He asked if he could search the truck since there was nothing illegal inside.
Label: No Factor

Sentence 36: Defendant was hesitant and told Trooper Chmielewski that he knew what would happen if he did not consent.
Label: No Factor

Sentence 37: Trooper Chmielewski did not respond, testifying that he did not do so because he was “surprised” at Defendant’s comment.
Label: No Factor

Sentence 38: He recalled that Defendant continued to “hem and haw” and remained “very hesitant.”
Label: No Factor

Sentence 39: Defendant pointed out that his girlfriend was sleeping.
Label: No Factor

Sentence 40: Trooper Chmielewski told him that if there was no contraband in the vehicle, then he had nothing to worry about, but that he needed to say “yes” or “no.”
Label: No Factor

Sentence 1: At this point, a “Klaxon siren” began going off in the Eisenhower Tunnel, indicating that the tunnel would be closing for a short time to allow hazardous materials vehicles that had been staging outside the tunnel to pass through.
Label: No Factor

Sentence 2: Defendant asked what the sound was.
Label: No Factor

Sentence 3: Trooper Chmielew-ski explained the sound and told Defendant that it meant he was going to have to wait to proceed on his route regardless of whether he gave consent.
Label: No Factor

Sentence 4: In addition, Defendant’s girlfriend woke up.
Label: No Factor

Sentence 5: Defendant continued to hesitate to provide his consent and told the trooper that “you’re going to search either way.”
Label: Refused Consent

Sentence 6: Once again, Trooper Chmielewski did not respond.
Label: No Factor

Sentence 7: By this point, the videotape shows Trooper Mahurin standing perhaps two feet away from Trooper Chmielewski and Defendant.
Label: No Factor

Sentence 8: Defendant then signed the consent to search form.
Label: No Factor

Sentence 9: The form states: “I, Scott Hight, hereby grant my consent to Trooper Chmielewski and Trooper Mahurin, officers of the Colorado State Patrol, to search the vehicle ... including the contents of all luggage and containers and to remove any suspicious paneling or other vehicle components.”
Label: No Factor

Sentence 10: In addition, it states: “I understand that I have the right to refuse to consent to the search described above and to refuse to sign this form.
Label: No Factor

Sentence 11: I further state that no promises, threats, force, or physical or mental coercion of any kind whatsoever have been used against me in an attempt to influence my decision to consent to the search or to sign this form.”
Label: No Factor

Sentence 12: Trooper Chmielewski testified that, had Defendant not provided his consent, he would have been free to leave, as he did not feel he had probable cause to conduct a search at this point.
Label: No Factor

Sentence 13: At approximately 12:08 a.m. — now on February 5 — the troopers began searching the cab of the truck.
Label: No Factor

Sentence 14: They found a black backpack containing glass pipes, one with white powdery residue, as well as a makeshift marijuana bong.
Label: Vehicle Contents Suggest Drugs

Sentence 15: Trooper Chmielew-ski recognized that the residue was from illicit drugs.
Label: Vehicle Contents Suggest Drugs

Sentence 16: He acknowledged, however, that he would not have arrested Defendant and his girlfriend on the basis of the pipes alone but, rather, would have given them summonses and released them.
Label: No Factor

Sentence 17: Nonetheless, Defendant was handcuffed and placed in the back of Trooper Chmielewski’s vehicle as the search continued.
Label: No Factor

Sentence 18: Trooper Chmielewski said that this was done for “officer safety” due to the “dangerous drugs” evidenced by the residue on one of the pipes.
Label: No Factor

Sentence 19: Defendant’s girlfriend was placed in. the back of Trooper Mahurin’s car.
Label: No Factor

Sentence 20: Trooper Chmielewski called for the Summit County Sheriffs Office canine unit to assist with the remainder of the search.
Label: No Factor

Sentence 21: At 1:05 a.m., the troopers removed a blue tarp that was covering items in the bed of the truck.
Label: No Factor

Sentence 22: They observed two plywood boxes, the larger of which was about 36 inches wide, 27 inches deep, and 18 to 20 inches tall, and the smaller of which was 26 to 30 inches wide and the same depth and height.
Label: No Factor

Sentence 23: The boxes were banded together with steel bands and were fastened shut with 18 screws apiece.
Label: Suspicious Storage

Sentence 24: The canine unit — Deputy Nathan Opsahl and a canine officer named Bobby — arrived shortly thereafter.
Label: No Factor

Sentence 25: Bobby alerted to the black backpack that had already been discovered.
Label: Vehicle Contents Suggest Drugs

Sentence 26: He also alerted to a green duffel bag, which was found to contain three small “nickel and dime” bags of a white powdery substance that Trooper Chmielewski believed to be methamphetamine, as well as rolling paper.
Label: Vehicle Contents Suggest Drugs

Sentence 27: Trooper Chmielewski acknowledged that the quantity of drugs in the bags was consistent with “personal use.”
Label: Vehicle Contents Suggest Drugs

Sentence 28: With the discovery of these drugs, the officers determined that both Defendant and his girlfriend would be arrested.
Label: Legal Indications of Drug Use

Sentence 29: Bobby did not alert to the bed of the truck (where the plywood boxes were) or anywhere else in or around the vehicle.
Label: No Factor

Sentence 30: The videotape shows Deputy Opsahl explaining that this could be because of the cold temperature or because the quantity of drugs was too great.
Label: No Factor

Sentence 31: He suggested taking the truck somewhere warmer.
Label: No Factor

Sentence 32: Trooper Chmielewski spoke by phone with his superior, Sergeant Dave Everidge, who stated his belief that there was probable cause to immediately search the plywood boxes.
Label: Suspicion Found

Sentence 33: The video shows Trooper Chmie-lewski relating Sergeant Everidge’s probable cause determination to Deputy Opsahl, who responds at the 2:12 a.m. mark, “I think that’s iffy at best.”
Label: No Factor

Sentence 34: Deputy Opsahl suggested asking for Defendant’s consent to search the boxes.
Label: No Factor

Sentence 35: Trooper Chmielewski did just that.
Label: No Factor

Sentence 36: Defendant declined, stating that he was “not giving consent to nothing” and that he was “surprised I gave consent” previously.
Label: Refused Consent

Sentence 37: Trooper Chmielewski understood these comments to mean that Defendant was revoking the consent he previously gave.
Label: No Factor

Sentence 38: Trooper Chmielewski nonetheless proceeded to open the boxes pursuant to Sergeant Everidge’s instruction, using a device to cut the metal bands and a power screwdriver to remove the numerous screws.
Label: No Factor

Sentence 39: Inside, he discovered 30 “Bible-sized” packages wrapped in multiple layers of sealed plastic.
Label: Vehicle Contents Suggest Drugs

Sentence 40: They contained what he believed to be illegal drugs.
Label: Vehicle Contents Suggest Drugs

Sentence 1: The government indicates that the substances in the plywood boxes were eventually determined to be methamphetamine, cocaine, and heroin.
Label: Vehicle Contents Suggest Drugs

Sentence 2: Trooper Chmielewski once again called Sergeant Everidge, who directed him to close up the boxes and have the truck towed to a location to be stored pending issuance of a warrant for a continued search.
Label: No Factor

Sentence 3: Trooper Chmielewski closed the boxes and called for a private tow truck.
Label: No Factor

Sentence 4: In the videotape, Trooper Chmielewski notes to one of the other officers at the 2:43 a.m. mark that he “[wjouldn’t even worry about the inventory” of the truck.
Label: No Factor

Sentence 5: The video shows him taking some pictures of the evidence discovered in the truck, but it does not appear that he conducted a full inventory of its contents.
Label: No Factor

Sentence 6: At the hearing, Trooper Chmielewski testified that Colorado State Patrol policy would have required him to conduct a “roadside” inventory search of the vehicle and its contents before it was “taken into control of the tow truck driver.”
Label: No Factor

Sentence 7: At 3:02 a.m., the video shows the truck being towed away.
Label: No Factor

Sentence 8: The truck was towed to the Frisco field office of the Colorado State Patrol, where it was stored in a garage.
Label: No Factor

Sentence 9: Analysis
Label: No Factor

Sentence 10: The Stop Exceeded Its Permissible Duration, Requiring Suppression
Label: No Factor

Sentence 11: The Fourth Amendment to the U.S. Constitution provides that “[t]he right of the people to be secure in their persons, houses, papers, and effects, against unreasonable searches and seizures, shall not be violated, and no Warrants shall issue, but upon probable cause, supported by Oath or affirmation, and particularly describing the place to be searched, and the persons or things to be seized.”
Label: No Factor

Sentence 12: As the Supreme Court recently explained, a “police stop exceeding the time needed to handle the matter for which the stop was made violates the Constitution’s shield against unreasonable seizures.”
Label: No Factor

Sentence 13: Rodriguez v. United States, — U.S. —, 135 S.Ct. 1609, 1612, 191 L.Ed.2d 492 (2015).
Label: No Factor

Sentence 14: “Authority for the seizure thus ends when tasks tied to the traffic infraction are — or reasonably should have been — completed.”
Label: No Factor

Sentence 15: Id. at 1614.
Label: No Factor

Sentence 16: Tasks tied to a traffic infraction include not only “determining whether to issue a traffic ticket” but also “ordinary inquiries incident to” a traffic stop, such as “checking the driver’s license, determining whether there are outstanding warrants against the driver, and inspecting the automobile’s registration and proof of insurance.”
Label: No Factor

Sentence 17: Id. at 1615.
Label: No Factor

Sentence 18: “On-scene investigation into other crimes,” however — even “safety precautions taken in order to facilitate” such investigation — “detours” from the “mission of the stop itself’ and is not permitted by the Fourth Amendment.
Label: No Factor

Sentence 19: Id. at 1616.
Label: No Factor

Sentence 20: Where such investigation “measurably extend[s]” the stop, id. at 1615, the stop becomes unlawful unless, “during the initial lawful traffic stop, the officer develops a ‘reasonable suspicion’ that the detained person is engaged in criminal activity.”
Label: No Factor

Sentence 21: United States v. Pettit, 785 F.3d 1374, 1379 (10th Cir.2015); see also United States v. Salzano, 158 F.3d 1107, 1111 (10th Cir.1998) (reasonable suspicion necessary to “justify detaining an individual for a period of time longer than that necessary to review a driver’s license and vehicle registration, run a computer check, determine that the driver is authorized to operate the vehicle, and issue the detainee a citation”).
Label: No Factor

Sentence 22: Defendant does not contest that Trooper Chmielewski lawfully stopped him for failure to dim his headlights.
Label: No Factor

Sentence 23: I agree with Defendant, however, that the stop exceeded its permissible duration.
Label: No Factor

Sentence 24: Trooper Chmielewski did not return Defendant’s papers to him until 11:57 p.m., 32 minutes after the stop began, and neither party disputes that the initial stop did not end until at least this time.
Label: No Factor

Sentence 25: See United States v. Gregory, 79 F.3d 973, 979 (10th Cir.1996) (noting that “an encounter initiated by a traffic stop may not be deemed consensual unless the driver’s documents have been returned to him”) (citation omitted).
Label: No Factor

Sentence 26: During this period, Trooper Chmielewski engaged in certain activities that are unquestionably normal incidents to a traffic stop, such as running Defendant’s driver’s license and reviewing the rental agreement for the truck Defendant was driving.
Label: No Factor

Sentence 27: But the trooper also used a substantial part of this time to investigate unrelated criminal activity.
Label: No Factor

Sentence 28: Indeed, he spoke with colleagues about searching Defendant’s vehicle, and he indicated that he would “wait” for Trooper Mahurin to arrive before requesting consent to search the vehicle.
Label: No Factor

Sentence 29: Most concretely, while Trooper Chmie-lewski acknowledged that he had received all of the information he needed to complete the stop by 11:46 p.m., he sat in his vehicle from 11:46 to 11:57 p.m. without returning Defendant’s documents to him.
Label: No Factor

Sentence 30: While he may have spent up to two minutes of this time reviewing the rental agreement he had just received from Defendant, it appears he spent the rest of the time filling out the consent to search form and waiting for Trooper Mahurin.
Label: No Factor

Sentence 31: I therefore conclude that the stop was measurably extended by activities unrelated to the infraction for which Defendant was initially stopped.
Label: No Factor

Sentence 32: See Rodriguez, 135 S.Ct. at 1613-14 (rejecting conclusion that a seven to eight minute extension of a stop was a “de minimis intrusion” and therefore permissible absent reasonable suspicion).
Label: No Factor

Sentence 33: As noted above, under Rodriguez, it does not matter that officer safety motivated Trooper Chmielewski’s decision to wait for Trooper Mahurin because Trooper Mahu-rin’s presence was designed to facilitate an investigation of Defendant for a possible drug crime, not to facilitate handling the traffic infraction for which Defendant was stopped.
Label: No Factor

Sentence 34: Id. at 1616.
Label: No Factor

Sentence 35: However, as noted, the extended detention may have been permissible if Trooper Chmielewski developed reasonable suspicion of other criminal activity, such as commission of a drug crime, during the “initial lawful traffic stop.”
Label: No Factor

Sentence 36: Pettit, 785 F.3d at 1379.
Label: No Factor

Sentence 37: The government argues that Trooper Chmielewski developed reasonable suspicion based primarily on Defendant’s driving behavior, his possession of multiple rental agreements, his demean- or, his travel plans, the fact that his truck was full, and his outstanding warrant from California.
Label: No Factor

Sentence 38: The government has the burden of proving that the officer had a reasonable suspicion that illegal activity had occurred or was occurring.
Label: No Factor

Sentence 39: Salzano, 158 F.3d at 1111.
Label: No Factor

Sentence 40: Reasonable suspicion is suspicion that is “objectively reasonable and articulable.”
Label: No Factor

Sentence 1: Id. (citation omitted).
Label: No Factor

Sentence 2: Courts look at the totality of the circumstances to determine whether they give rise to reasonable suspicion.
Label: No Factor

Sentence 3: I take the asserted bases for reasonable suspicion in turn.
Label: No Factor

Sentence 4: First, Defendant’s driving behavior.
Label: No Factor

Sentence 5: Many drivers would slow down and move behind a police officer, rather than pass the officer, particularly in wintery conditions, to avoid drawing attention or giving the impression that they are driving too fast for the weather.
Label: No Factor

Sentence 6: Second, the rental agreements.
Label: No Factor

Sentence 7: There is nothing criminal about renting multiple vehicles.
Label: No Factor

Sentence 8: As Trooper Chmielewski acknowledged at the hearing, Defendant’s explanation, that he had just been released from jail and had no car of his own, was “reasonable on its face.”
Label: No Factor

Sentence 9: Third, Defendant’s demeanor.
Label: Nervous Behavior or Appearance

Sentence 10: The exasperation and frustration Trooper Chmielewski observed are easily explained by the late hour and Defendant’s struggle to locate the correct rental agreement.
Label: Nervous Behavior or Appearance

Sentence 11: Fourth, Defendant’s travel plans and the fullness of the truck.
Label: Unusual Travel Plans

Sentence 12: Defendant said he was traveling and possibly moving to the East Coast.
Label: Unusual Travel Plans

Sentence 13: As Trooper Chmielewski acknowledged, there is nothing inappropriate about traveling from California to the East Coast.
Label: No Factor

Sentence 14: Id. at 1114 (“So long as the detainee provides a consistent statement from whence he came, the mere fact that he comes from California, or even San Diego, is not a reasonable basis to suspect that he is carrying drugs or other contraband.”).
Label: No Factor

Sentence 15: Transporting voluminous cargo, as well as a girlfriend, two Chihuahuas, and $3,000 in cash, is, moreover, consistent with such a long trip.
Label: No Factor

Sentence 16: Fifth, the warrant from California.
Label: Legal Indications of Drug Use

Sentence 17: The Tenth Circuit has held that “knowledge of a person’s prior criminal involvement (to say nothing of a mere arrest) is alone insufficient to give rise to the requisite reasonable suspicion.”
Label: No Factor

Sentence 18: United States v. Sandoval, 29 F.3d 537, 542 (10th Cir.1994).
Label: No Factor

Sentence 19: In sum, these facts, both in isolation and together, are “so innocent or susceptible to varying interpretations as to be innocuous.”
Label: No Factor

Sentence 20: Salzano, 158 F.3d at 1113 (citation omitted).
Label: No Factor

Sentence 21: Accordingly, I conclude that Trooper Chmielewski did not have reasonable suspicion to prolong his stop of Defendant and, therefore, that the stop became unlawful.
Label: Suspicion Not Found

Sentence 22: Suppression of evidence is a remedy for an unlawful seizure.
Label: No Factor

Sentence 23: To obtain suppression, a defendant must show that a factual nexus exists between the illegality and the challenged evidence.
Label: No Factor

Sentence 24: United States v. DeLuca, 269 F.3d 1128, 1132 (10th Cir.2001).
Label: No Factor

Sentence 25: The Tenth Circuit recently noted that suppression would apply on facts similar to those here.
Label: No Factor

Sentence 26: See Pettit, 785 F.3d at 1380.
Label: No Factor

Sentence 27: In Pettit, the parties agreed that the trooper had lawfully stopped the defendant for a traffic infraction.
Label: No Factor

Sentence 28: After completing the defendant’s traffic citation, however, the trooper retained the defendant’s driver’s license, thus prolonging the stop beyond the time “reasonably required to effectuate its purpose.”
Label: No Factor

Sentence 29: Id. at 1379-80 (citing Rodriguez, 135 S.Ct. at 1609).
Label: No Factor

Sentence 30: Defendant then provided his consent to a search.
Label: No Factor

Sentence 31: The court wrote that, if the extended detention was not supported by reasonable suspicion, “fruits of the sub: sequent search [would be] inadmissible,” id. at 1380, notwithstanding Defendant’s consent.
Label: No Factor

Sentence 32: While the court ultimately found the extended stop to be supported by reasonable suspicion, Pettit demonstrates that suppression applies on the facts here.
Label: No Factor

Sentence 33: See also Gregory, 79 F.3d at 979 (“[I]f the consent is given after an illegal stop, the government carries a heavy burden of showing that the primary taint of the illegal stop was purged so that the subsequent consent was voluntary in fact.”).
Label: No Factor

Sentence 34: Accordingly, the evidence discovered during the search of the truck is fruit of the unlawfully prolonged stop and must be suppressed.
Label: No Factor

Sentence 35: Even If the Stop Had Remained Lawful, Defendant’s Consent Was Not Voluntary
Label: No Factor

Sentence 36: Even if the stop had not been unlawfully extended, Defendant’s consent to a search of the truck was not voluntary.
Label: No Factor

Sentence 37: Consent must be “freely and voluntarily given.”
Label: No Factor

Sentence 38: Schneckloth v. Bustamonte, 412 U.S. 218, 222, 93 S.Ct. 2041, 36 L.Ed.2d 854 (1973).
Label: No Factor

Sentence 39: Whether consent was freely and voluntarily given is a question of fact and is determined from the totality of the circumstances.
Label: No Factor

Sentence 40: United States v. Santurio, 29 F.3d 550, 552 (10th Cir.1994).
Label: No Factor

Sentence 1: The government has the burden of proving valid consent.
Label: No Factor

Sentence 2: United States v. Cody, 7 F.3d 1523, 1526 (10th Cir.1993).
Label: No Factor

Sentence 3: It must present “clear and positive testimony that consent was unequivocal and specific, and freely and intelligently given.”
Label: No Factor

Sentence 4: United States v. Angulo-Fernandez, 53 F.3d 1177, 1180 (10th Cir. 1995) (citation omitted).
Label: No Factor

Sentence 5: It must also show that consent was given “without implied or express duress or coercion.”
Label: No Factor

Sentence 6: A number of' factors lead me to conclude that Defendant’s consent was not voluntary.
Label: No Factor

Sentence 7: First, Trooper Chmielewski waited only seconds after returning Defendant’s documents to seek his consent to a search.
Label: No Factor

Sentence 8: See Gregory, 79 F.3d at 979 (“while returning a driver’s documents is necessary to show that the police-citizen encounter was consensual, it may not always be sufficient”).
Label: No Factor

Sentence 9: Second, as Trooper Chmielewski was returning the documents, Trooper Mahurin came onto the scene.
Label: No Factor

Sentence 10: The police lights on his vehicle were flashing.
Label: No Factor

Sentence 11: He walked up to the rear of Defendant’s truck.
Label: No Factor

Sentence 12: Thus, there was an additional, and rather assertive, police presence at the very moment when Defendant was asked to decide whether to consent.
Label: No Factor

Sentence 13: Third, Trooper Chmielewski ignored Defendant’s statement that Defendant knew what would happen if he did not consent and his statement that “you’re going to search either way.”
Label: No Factor

Sentence 14: The trooper may well have had appropriate reasons for not responding to these remarks.
Label: No Factor

Sentence 15: Unfortunately, the trooper’s silence would leave a reasonable person with the unmistakable impression that he had little choice whether to consent.
Label: No Factor

Sentence 16: The trooper’s statement that Defendant needed to give him a “yes” or “no” answer does not erase the impression given by his silence in response to Defendant’s statements.
Label: No Factor

Sentence 17: Fourth, when the tunnel closed temporarily, Trooper Chmielewski indicated that Defendant would have to remain where he was regardless of whether he gave consent.
Label: No Factor

Sentence 18: All of these facts lead me to conclude that there was an implied, but pervasive, element of coercion that led Defendant to provide his consent.
Label: No Factor

Sentence 19: Accordingly, his consent was not voluntary.
Label: No Factor

Sentence 20: Trooper Chmie-lewski testified that he did not believe he had a legal basis to begin a search of the truck absent Defendant’s consent.
Label: No Factor

Sentence 21: And the government has not argued that there was probable cause or any other legal basis to do so.
Label: No Factor

Sentence 22: So the search that ensued, both of the cab and of the bed (including the plywood boxes), was unlawful.
Label: No Factor

Sentence 23: Evidence discovered during the search must be suppressed as fruit of this illegality.
Label: No Factor

Sentence 24: Even If Defendant’s Consent Was Voluntary, There Was No Basis to Search the Boxes
Label: No Factor

Sentence 25: Even assuming the stop remained lawful at all times, and even assuming Defendant’s consent was voluntary, there is an additional problem for the government:
Label: No Factor

Sentence 26: Trooper Chmielewski did not have a basis to search the plywood boxes found in the bed of the truck.
Label: No Factor

Sentence 27: The Fourth Amendment allows officers to search an automobile — and containers within the automobile — without a warrant if they have probable cause to believe it contains contraband.
Label: No Factor

Sentence 28: United States v. Oliver, 363 F.3d 1061, 1068 (10th Cir.2004).
Label: No Factor

Sentence 29: “The scope of a warrantless search of an automobile is defined by the object of the search and the places in which there is probable cause to believe that it may be found.”
Label: No Factor

Sentence 30: United States v. Nielsen, 9 F.3d 1487, 1491 (10th Cir.1993) (quotations and citation omitted).
Label: No Factor

Sentence 31: Probable cause exists where there is a “ ‘fair probability' that contraband or other evidence will be found in a particular place.”
Label: No Factor

Sentence 32: United States v. Biglow, 562 F.3d 1272, 1281 (10th Cir.2009) (quoting Illinois v. Gates, 462 U.S. 213, 238, 103 S.Ct. 2317, 76 L.Ed.2d 527 (1983)).
Label: No Factor

Sentence 33: Here, the government primarily relies upon the glass pipes (one of which had drug residue), the makeshift marijuana bong, the nickel and dime bags of presumed methamphetamine, and the rolling paper, all of which were found during the search of the truck’s cab.
Label: Vehicle Contents Suggest Drugs

Sentence 34: This evidence is suggestive of personal drug use.
Label: No Factor

Sentence 35: It is not suggestive of the possession of large quantities of drugs for presumptive sale or distribution.
Label: No Factor

Sentence 36: Indeed, Trooper Chmielew-ski acknowledged that the nickel and dime bags of methamphetamine were consistent with personal use.
Label: No Factor

Sentence 37: Further, it seems unlikely that drugs for personal use would be stored in relatively large, sealed plywood boxes in the bed of a truck.
Label: No Factor

Sentence 38: Deputy Op-sahl must have recognized as much when he said that it was “iffy at best”
Label: No Factor

Sentence 39: whether there was probable cause to open the boxes.
Label: No Factor

Sentence 40: For these reasons, I conclude that there was not' a fair probability that drugs would be found in the plywood boxes.
Label: No Factor

Sentence 1: Therefore, the trooper lacked probable cause to search them.
Label: No Factor

Sentence 2: In addition, even assuming that Defendant’s consent to search was voluntary (as discussed above, it was not), and even assuming that the consent covered the plywood boxes (which I do not address), it is undisputed that Defendant had revoked that consent by the time Trooper Chmielewski opened the boxes.
Label: No Factor

Sentence 3: Thus, neither probable cause nor consent supported Trooper Chmielewski’s foray into the boxes.
Label: No Factor

Sentence 4: I note that, by this point, the decision had been made to arrest Defendant and his girlfriend.
Label: No Factor

Sentence 5: It is unclear, then, why the officers did not impound the truck and obtain a search warrant before searching the boxes.
Label: No Factor

Sentence 6: The government argues that, even if there was no consent and no probable cause to search the boxes, the drugs located there would have been found in an inventory search and, therefore, are admissible pursuant to the doctrine of inevitable discovery.
Label: No Factor

Sentence 7: That doctrine provides that “if evidence seized unlawfully would have been inevitably discovered in a subsequent inventory search, such evidence would be admissible.”
Label: No Factor

Sentence 8: United States v. Blaze, 143 F.3d 585, 593 (10th Cir.1998).
Label: No Factor

Sentence 9: The government has the burden of proving that the evidence at issue would have been discovered without the Fourth Amendment violation.
Label: No Factor

Sentence 10: United States v. Cunningham, 413 F.3d 1199, 1203 (10th Cir.2005).
Label: No Factor

Sentence 11: Inventory searches are an exception to the Fourth Amendment’s warrant requirement.
Label: No Factor

Sentence 12: Blaze, 143 F.3d at 591.
Label: No Factor

Sentence 13: However, they must be “conducted according to standardized procedures.”
Label: No Factor

Sentence 14: Id. at 591-92 (quotations and citation omitted).
Label: No Factor

Sentence 15: They must be “designed to produce an inventory,” and “must not be a ruse for a general rummaging in order to discover incriminating evidence.”
Label: No Factor

Sentence 16: The only evidence the government introduced on this issue was Trooper Chmielewski’s testimony that Colorado State Patrol policy would have required him to do a “roadside” inventory of the truck and its contents, including the boxes, before turning the truck over to the tow operator.
Label: No Factor

Sentence 17: The government did not introduce any written policies governing inventory searches.
Label: No Factor

Sentence 18: Nor did the government introduce any evidence establishing that an inventory search complying with such policies ever took place.
Label: No Factor

Sentence 19: Indeed, the videotape of the stop, in which Trooper Chmielewski says he “[w]ouldn’t even worry about the inventory,” seems to suggest that a full inventory of the truck was not completed before it was turned over to the private tow truck driver, contrary to the policy.
Label: No Factor

Sentence 20: To the extent a limited roadside “inventory search” was done, it appears it was not “designed to produce an inventory” but, rather, to uncover evidence.
Label: No Factor

Sentence 21: Blaze, 143 F.3d at 591-92.
Label: No Factor

Sentence 22: On this record, I cannot conclude that the government has met its burden of proving that an inventory search, completed pursuant to standardized procedures, would have uncovered (or did uncover) the drugs in the plywood boxes.
Label: No Factor

Sentence 23: I therefore conclude that the inevitable discovery doctrine does not apply to cure the lack of consent and probable cause with respect to the boxes.
Label: No Factor

Sentence 24: Conclusion
Label: No Factor

Sentence 25: It is therefore ORDERED that Defendant’s motions [Docs. # 35, 41] are GRANTED.
Label: No Factor

Sentence 26: Evidence discovered during the search of Defendant’s rental truck on February 4 and 5, 2015, is SUPPRESSED."
Label: No Factor

