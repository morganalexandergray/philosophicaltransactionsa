Sentence 1: Case Name: 'STATE of Florida, Appellant, v. Willie E. WIMBUSH, Appellee'
Label: No Factor

Sentence 2: Citation: '668 So. 2d 280', Court Name: 'Florida District Court of Appeal'
Label: No Factor

Sentence 3: Decision Date YYYY-MM-DD: '1996-02-16'
Label: No Factor

Sentence 4: ID No. : 7425571, 'PATTERSON, Judge.
Label: No Factor

Sentence 5: The state challenges the trial court’s order suppressing cocaine found after a search of the car in which Willie Wimbush was a passenger.
Label: No Factor

Sentence 6: We agree with the state that the officer had a well-founded suspicion of criminal activity to detain the vehicle.
Label: Suspicion Found

Sentence 7: Accordingly, we reverse the suppression order and remand for further proceedings.
Label: No Factor

Sentence 8: The state charged Wimbush with possession of cocaine, and Wimbush filed a motion to suppress evidence, asserting that there was no well-founded suspicion to stop and detain the car in which he was a passenger.
Label: Suspicion Not Found

Sentence 9: At the suppression hearing, Officer Gary Garboski with the Tampa Police Department testified that on August 19,1994, he observed a Chevy Beretta parked on the access road of the Courtney Campbell Causeway at approximately 3:00 a.m.
Label: No Factor

Sentence 10: Officer Garboski pulled his patrol car alongside the Chevy and illuminated the passenger side with his alley light.
Label: No Factor

Sentence 11: The driver of the vehicle said “hello,” the officer responded, and as the driver was looking at the officer, the officer observed a substance under the driver’s nose.
Label: No Factor

Sentence 12: Officer Garboski has received advanced training in narcotics identification, and as part of this training, has been taught the mannerisms of people under the influence of narcotics and how to identify narcotics.
Label: No Factor

Sentence 13: Based on the officer’s experience and training, he believed the substance underneath the driver’s nose to be powder cocaine.
Label: No Factor

Sentence 14: The officer pulled up behind the car and illuminated its interior with his spotlight.
Label: No Factor

Sentence 15: Officer Garboski and his partner then walked over to the car.
Label: No Factor

Sentence 16: Officer Garboski approached the driver’s side and spoke with the driver, and in so doing, saw Wimbush in the back left passenger side with a powdery streak, approximately 2½ inches long and ½ inch wide, down the left side of his cheek.
Label: Vehicle Contents Suggest Drugs

Sentence 17: Based on the officer’s experience and training, he believed the streak to be cocaine.
Label: Vehicle Contents Suggest Drugs

Sentence 18: When he first approached the ear, the officer asked the driver for identification.
Label: Motorist license or Identification

Sentence 19: The officer observed the driver had mucus with a crystal white substance in it under his nose.
Label: Motorist's Appearance Related to Drug Use or Sale

Sentence 20: During his training, the officer learned that when an individual ingests cocaine it causes mucus to run from the individ ual’s nose and sometimes the drug mixes with the mucus.
Label: Motorist's Appearance Related to Drug Use or Sale

Sentence 21: Prior to this incident, the officer had noticed numerous people on the street under the influence of narcotics with the same substance under their noses.
Label: Motorist's Appearance Related to Drug Use or Sale

Sentence 22: When the officer approached the car and observed the substance on Wimbush’s cheek, he did not say anything because he did not want Wimbush to wipe off the substance.
Label: Vehicle Contents Suggest Drugs

Sentence 23: Wimbush remained in the car while the officer called for a canine unit, and the officer did not tell the driver or Wimbush that they were under arrest before the canine unit arrived.
Label: No Factor

Sentence 24: The canine alerted to the interior of the vehicle, and a subsequent search revealed cocaine.
Label: Vehicle Contents Suggest Drugs

Sentence 25: A valtox test of the substance on Wimbush’s cheek was positive for cocaine.
Label: Vehicle Contents Suggest Drugs

Sentence 26: The trial court granted the motion to suppress, holding that the observations of law enforcement did not provide reasonable suspicion to detain the car and subsequently search it.
Label: Suspicion Not Found

Sentence 27: First, we note that the officers did not make a stop during the initial encounter.
Label: No Factor

Sentence 28: The car was parked on the access road to the Courtney Campbell Causeway at 3:00 a.m.
Label: Unusual Travel Plans

Sentence 29: The officers approached in their patrol car so that they could ask some questions, and this initial encounter was consensual.
Label: No Factor

Sentence 30: See State v. Carley, 633 So.2d 533, 534 (Fla. 2d DCA 1994) (“An officer does not need a founded suspicion of criminal activity to approach and talk to someone.”).
Label: No Factor

Sentence 31: Although the trial court’s order does not contain any specific factual findings , the trial court apparently believed Officer Gabro-ski’s testimony about seeing a substance under the driver’s nose and a powdery streak on Wimbush’s cheek.
Label: No Factor

Sentence 32: The officer testified that, based upon his experience and training in the detection of narcotics, he believed the substances to be powder cocaine.
Label: No Factor

Sentence 33: At the hearing, the trial court stated that the issue was whether there was “a well-founded suspicion of criminal activity, based upon those two individuals seated in the car with that evidence of contraband on their faces, in the absence of any other evidence.”
Label: Suspicion Not Found

Sentence 34: Thus, the trial court made a factual finding that the officer saw “evidence of contraband” on their faces.
Label: No Factor

Sentence 35: The record contains support for that factual finding.
Label: No Factor

Sentence 36: The court then came to the legal conclusion that the totality of circumstances did not provide the officer with a reasonable suspicion to detain Wimbush.
Label: Suspicion Not Found

Sentence 37: We disagree with the trial court’s legal conclusion.
Label: No Factor

Sentence 38: To justify an investigative temporary detention, an officer must have a founded reasonable suspicion that the person has committed, is committing, or is about to commit a crime.
Label: Suspicion Found

Sentence 39: § 901.151(2), Fla.Stat. (1993); Brown v. State, 636 So.2d 174 (Fla. 2d DCA 1994).
Label: No Factor

Sentence 40: A founded reasonable suspicion must “have some factual foundation in the circumstances observed by the officer when those circumstances are interpreted in light of the officer’s knowledge.”
Label: Suspicion Found

Sentence 1: Peabody v. State, 556 So.2d 826, 827 (Fla. 2d DCA 1990).
Label: No Factor

Sentence 2: Here, the officer had a founded suspicion, based on his training and experience, that the individuals were involved in criminal activity because the officer observed what he believed to be powder cocaine on their faces.
Label: Suspicion Found

Sentence 3: Thus, the detention until the arrival of the canine unit was proper.
Label: Suspicion Found

Sentence 4: Therefore, we reverse the order suppressing the cocaine and remand for further proceedings.
Label: No Factor

Sentence 5: Reversed and remanded.
Label: No Factor

Sentence 6: SCHOONOVER, A.C.J., and QUINCE, J., concur.
Label: No Factor

Sentence 7: The suppression order states, "The Court specifically finds that the observations of law enforcement did not provide law enforcement with reasonable suspicion by which to detain and subsequently search the defendant and the vehicle he was seated in.”
Label: Suspicion Not Found

Sentence 8: . The parties do not raise the issue of whether the length of the detention was reasonable.
Label: No Factor

Sentence 9: The record does not reveal how long the occupants were detained before the canine unit arrived.',
Label: No Factor

Sentence 10: Dissenting/Concuring: 'Not Available', Dissenting/Concuring 2: 'Not Available', Dissenting/Concuring 3: 'Not Available'
Label: No Factor

